{"version":3,"file":"index.js","sources":["../../../node_modules/@sveltejs/kit/src/constants.js","../../../node_modules/@sveltejs/kit/src/utils/http.js","../../../node_modules/@sveltejs/kit/src/utils/error.js","../../../node_modules/@sveltejs/kit/src/utils/escape.js","../../../node_modules/@sveltejs/kit/src/runtime/server/utils.js","../../../node_modules/@sveltejs/kit/src/runtime/server/endpoint.js","../../../node_modules/@sveltejs/kit/src/utils/array.js","../../../node_modules/@sveltejs/kit/src/runtime/pathname.js","../../../node_modules/@sveltejs/kit/src/runtime/server/page/actions.js","../../../node_modules/@sveltejs/kit/src/runtime/server/page/load_data.js","../../../node_modules/@sveltejs/kit/src/utils/hash.js","../../../node_modules/@sveltejs/kit/src/runtime/server/page/serialize_data.js","../../../node_modules/@sveltejs/kit/src/utils/misc.js","../../../node_modules/@sveltejs/kit/src/runtime/server/page/crypto.js","../../../node_modules/@sveltejs/kit/src/runtime/server/page/csp.js","../../../node_modules/@sveltejs/kit/src/utils/streaming.js","../../../node_modules/@sveltejs/kit/src/utils/routing.js","../../../node_modules/@sveltejs/kit/src/runtime/server/page/server_routing.js","../../../node_modules/@sveltejs/kit/src/runtime/server/page/render.js","../../../node_modules/@sveltejs/kit/src/utils/page_nodes.js","../../../node_modules/@sveltejs/kit/src/runtime/server/page/respond_with_error.js","../../../node_modules/@sveltejs/kit/src/utils/functions.js","../../../node_modules/@sveltejs/kit/src/runtime/server/data/index.js","../../../node_modules/@sveltejs/kit/src/runtime/server/remote.js","../../../node_modules/@sveltejs/kit/src/runtime/server/page/index.js","../../../node_modules/@sveltejs/kit/src/runtime/server/cookie.js","../../../node_modules/@sveltejs/kit/src/runtime/server/fetch.js","../../../node_modules/@sveltejs/kit/src/runtime/server/env_module.js","../../../node_modules/@sveltejs/kit/src/runtime/server/respond.js","../../../node_modules/@sveltejs/kit/src/utils/env.js","../../../node_modules/@sveltejs/kit/src/runtime/server/app.js","../../../node_modules/@sveltejs/kit/src/runtime/server/index.js"],"sourcesContent":["/**\n * A fake asset path used in `vite dev` and `vite preview`, so that we can\n * serve local assets while verifying that requests are correctly prefixed\n */\nexport const SVELTE_KIT_ASSETS = '/_svelte_kit_assets';\n\nexport const GENERATED_COMMENT = '// this file is generated — do not edit it\\n';\n\nexport const ENDPOINT_METHODS = ['GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'OPTIONS', 'HEAD'];\n\nexport const PAGE_METHODS = ['GET', 'POST', 'HEAD'];\n","/**\n * Given an Accept header and a list of possible content types, pick\n * the most suitable one to respond with\n * @param {string} accept\n * @param {string[]} types\n */\nexport function negotiate(accept, types) {\n\t/** @type {Array<{ type: string, subtype: string, q: number, i: number }>} */\n\tconst parts = [];\n\n\taccept.split(',').forEach((str, i) => {\n\t\tconst match = /([^/ \\t]+)\\/([^; \\t]+)[ \\t]*(?:;[ \\t]*q=([0-9.]+))?/.exec(str);\n\n\t\t// no match equals invalid header — ignore\n\t\tif (match) {\n\t\t\tconst [, type, subtype, q = '1'] = match;\n\t\t\tparts.push({ type, subtype, q: +q, i });\n\t\t}\n\t});\n\n\tparts.sort((a, b) => {\n\t\tif (a.q !== b.q) {\n\t\t\treturn b.q - a.q;\n\t\t}\n\n\t\tif ((a.subtype === '*') !== (b.subtype === '*')) {\n\t\t\treturn a.subtype === '*' ? 1 : -1;\n\t\t}\n\n\t\tif ((a.type === '*') !== (b.type === '*')) {\n\t\t\treturn a.type === '*' ? 1 : -1;\n\t\t}\n\n\t\treturn a.i - b.i;\n\t});\n\n\tlet accepted;\n\tlet min_priority = Infinity;\n\n\tfor (const mimetype of types) {\n\t\tconst [type, subtype] = mimetype.split('/');\n\t\tconst priority = parts.findIndex(\n\t\t\t(part) =>\n\t\t\t\t(part.type === type || part.type === '*') &&\n\t\t\t\t(part.subtype === subtype || part.subtype === '*')\n\t\t);\n\n\t\tif (priority !== -1 && priority < min_priority) {\n\t\t\taccepted = mimetype;\n\t\t\tmin_priority = priority;\n\t\t}\n\t}\n\n\treturn accepted;\n}\n\n/**\n * Returns `true` if the request contains a `content-type` header with the given type\n * @param {Request} request\n * @param  {...string} types\n */\nfunction is_content_type(request, ...types) {\n\tconst type = request.headers.get('content-type')?.split(';', 1)[0].trim() ?? '';\n\treturn types.includes(type.toLowerCase());\n}\n\n/**\n * @param {Request} request\n */\nexport function is_form_content_type(request) {\n\t// These content types must be protected against CSRF\n\t// https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/enctype\n\treturn is_content_type(\n\t\trequest,\n\t\t'application/x-www-form-urlencoded',\n\t\t'multipart/form-data',\n\t\t'text/plain'\n\t);\n}\n","import { HttpError, SvelteKitError } from '@sveltejs/kit/internal';\n\n/**\n * @param {unknown} err\n * @return {Error}\n */\nexport function coalesce_to_error(err) {\n\treturn err instanceof Error ||\n\t\t(err && /** @type {any} */ (err).name && /** @type {any} */ (err).message)\n\t\t? /** @type {Error} */ (err)\n\t\t: new Error(JSON.stringify(err));\n}\n\n/**\n * This is an identity function that exists to make TypeScript less\n * paranoid about people throwing things that aren't errors, which\n * frankly is not something we should care about\n * @param {unknown} error\n */\nexport function normalize_error(error) {\n\treturn /** @type {import('../exports/internal/index.js').Redirect | HttpError | SvelteKitError | Error} */ (\n\t\terror\n\t);\n}\n\n/**\n * @param {unknown} error\n */\nexport function get_status(error) {\n\treturn error instanceof HttpError || error instanceof SvelteKitError ? error.status : 500;\n}\n\n/**\n * @param {unknown} error\n */\nexport function get_message(error) {\n\treturn error instanceof SvelteKitError ? error.text : 'Internal Error';\n}\n","/**\n * When inside a double-quoted attribute value, only `&` and `\"` hold special meaning.\n * @see https://html.spec.whatwg.org/multipage/parsing.html#attribute-value-(double-quoted)-state\n * @type {Record<string, string>}\n */\nconst escape_html_attr_dict = {\n\t'&': '&amp;',\n\t'\"': '&quot;'\n\t// Svelte also escapes < because the escape function could be called inside a `noscript` there\n\t// https://github.com/sveltejs/svelte/security/advisories/GHSA-8266-84wp-wv5c\n\t// However, that doesn't apply in SvelteKit\n};\n\n/**\n * @type {Record<string, string>}\n */\nconst escape_html_dict = {\n\t'&': '&amp;',\n\t'<': '&lt;'\n};\n\nconst surrogates = // high surrogate without paired low surrogate\n\t'[\\\\ud800-\\\\udbff](?![\\\\udc00-\\\\udfff])|' +\n\t// a valid surrogate pair, the only match with 2 code units\n\t// we match it so that we can match unpaired low surrogates in the same pass\n\t// TODO: use lookbehind assertions once they are widely supported: (?<![\\ud800-udbff])[\\udc00-\\udfff]\n\t'[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]|' +\n\t// unpaired low surrogate (see previous match)\n\t'[\\\\udc00-\\\\udfff]';\n\nconst escape_html_attr_regex = new RegExp(\n\t`[${Object.keys(escape_html_attr_dict).join('')}]|` + surrogates,\n\t'g'\n);\n\nconst escape_html_regex = new RegExp(\n\t`[${Object.keys(escape_html_dict).join('')}]|` + surrogates,\n\t'g'\n);\n\n/**\n * Escapes unpaired surrogates (which are allowed in js strings but invalid in HTML) and\n * escapes characters that are special.\n *\n * @param {string} str\n * @param {boolean} [is_attr]\n * @returns {string} escaped string\n * @example const html = `<tag data-value=\"${escape_html('value', true)}\">...</tag>`;\n */\nexport function escape_html(str, is_attr) {\n\tconst dict = is_attr ? escape_html_attr_dict : escape_html_dict;\n\tconst escaped_str = str.replace(is_attr ? escape_html_attr_regex : escape_html_regex, (match) => {\n\t\tif (match.length === 2) {\n\t\t\t// valid surrogate pair\n\t\t\treturn match;\n\t\t}\n\n\t\treturn dict[match] ?? `&#${match.charCodeAt(0)};`;\n\t});\n\n\treturn escaped_str;\n}\n","import { DEV } from 'esm-env';\nimport { json, text } from '@sveltejs/kit';\nimport { HttpError } from '@sveltejs/kit/internal';\nimport { coalesce_to_error, get_message, get_status } from '../../utils/error.js';\nimport { negotiate } from '../../utils/http.js';\nimport { fix_stack_trace } from '../shared-server.js';\nimport { ENDPOINT_METHODS } from '../../constants.js';\nimport { escape_html } from '../../utils/escape.js';\nimport { with_event } from '../app/server/event.js';\n\n/** @param {any} body */\nexport function is_pojo(body) {\n\tif (typeof body !== 'object') return false;\n\n\tif (body) {\n\t\tif (body instanceof Uint8Array) return false;\n\t\tif (body instanceof ReadableStream) return false;\n\t}\n\n\treturn true;\n}\n\n/**\n * @param {Partial<Record<import('types').HttpMethod, any>>} mod\n * @param {import('types').HttpMethod} method\n */\nexport function method_not_allowed(mod, method) {\n\treturn text(`${method} method not allowed`, {\n\t\tstatus: 405,\n\t\theaders: {\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/405\n\t\t\t// \"The server must generate an Allow header field in a 405 status code response\"\n\t\t\tallow: allowed_methods(mod).join(', ')\n\t\t}\n\t});\n}\n\n/** @param {Partial<Record<import('types').HttpMethod, any>>} mod */\nexport function allowed_methods(mod) {\n\tconst allowed = ENDPOINT_METHODS.filter((method) => method in mod);\n\n\tif ('GET' in mod || 'HEAD' in mod) allowed.push('HEAD');\n\n\treturn allowed;\n}\n\n/**\n * Return as a response that renders the error.html\n *\n * @param {import('types').SSROptions} options\n * @param {number} status\n * @param {string} message\n */\nexport function static_error_page(options, status, message) {\n\tlet page = options.templates.error({ status, message: escape_html(message) });\n\n\tif (DEV) {\n\t\t// inject Vite HMR client, for easier debugging\n\t\tpage = page.replace('</head>', '<script type=\"module\" src=\"/@vite/client\"></script></head>');\n\t}\n\n\treturn text(page, {\n\t\theaders: { 'content-type': 'text/html; charset=utf-8' },\n\t\tstatus\n\t});\n}\n\n/**\n * @param {import('@sveltejs/kit').RequestEvent} event\n * @param {import('types').SSROptions} options\n * @param {unknown} error\n */\nexport async function handle_fatal_error(event, options, error) {\n\terror = error instanceof HttpError ? error : coalesce_to_error(error);\n\tconst status = get_status(error);\n\tconst body = await handle_error_and_jsonify(event, options, error);\n\n\t// ideally we'd use sec-fetch-dest instead, but Safari — quelle surprise — doesn't support it\n\tconst type = negotiate(event.request.headers.get('accept') || 'text/html', [\n\t\t'application/json',\n\t\t'text/html'\n\t]);\n\n\tif (event.isDataRequest || type === 'application/json') {\n\t\treturn json(body, {\n\t\t\tstatus\n\t\t});\n\t}\n\n\treturn static_error_page(options, status, body.message);\n}\n\n/**\n * @param {import('@sveltejs/kit').RequestEvent} event\n * @param {import('types').SSROptions} options\n * @param {any} error\n * @returns {Promise<App.Error>}\n */\nexport async function handle_error_and_jsonify(event, options, error) {\n\tif (error instanceof HttpError) {\n\t\treturn error.body;\n\t}\n\n\tif (__SVELTEKIT_DEV__ && typeof error == 'object') {\n\t\tfix_stack_trace(error);\n\t}\n\n\tconst status = get_status(error);\n\tconst message = get_message(error);\n\n\treturn (\n\t\t(await with_event(event, () =>\n\t\t\toptions.hooks.handleError({ error, event, status, message })\n\t\t)) ?? { message }\n\t);\n}\n\n/**\n * @param {number} status\n * @param {string} location\n */\nexport function redirect_response(status, location) {\n\tconst response = new Response(undefined, {\n\t\tstatus,\n\t\theaders: { location }\n\t});\n\treturn response;\n}\n\n/**\n * @param {import('@sveltejs/kit').RequestEvent} event\n * @param {Error & { path: string }} error\n */\nexport function clarify_devalue_error(event, error) {\n\tif (error.path) {\n\t\treturn (\n\t\t\t`Data returned from \\`load\\` while rendering ${event.route.id} is not serializable: ${error.message} (${error.path}). ` +\n\t\t\t`If you need to serialize/deserialize custom types, use transport hooks: https://svelte.dev/docs/kit/hooks#Universal-hooks-transport.`\n\t\t);\n\t}\n\n\tif (error.path === '') {\n\t\treturn `Data returned from \\`load\\` while rendering ${event.route.id} is not a plain object`;\n\t}\n\n\t// belt and braces — this should never happen\n\treturn error.message;\n}\n\n/**\n * @param {import('types').ServerDataNode} node\n */\nexport function serialize_uses(node) {\n\tconst uses = {};\n\n\tif (node.uses && node.uses.dependencies.size > 0) {\n\t\tuses.dependencies = Array.from(node.uses.dependencies);\n\t}\n\n\tif (node.uses && node.uses.search_params.size > 0) {\n\t\tuses.search_params = Array.from(node.uses.search_params);\n\t}\n\n\tif (node.uses && node.uses.params.size > 0) {\n\t\tuses.params = Array.from(node.uses.params);\n\t}\n\n\tif (node.uses?.parent) uses.parent = 1;\n\tif (node.uses?.route) uses.route = 1;\n\tif (node.uses?.url) uses.url = 1;\n\n\treturn uses;\n}\n\n/**\n * Returns `true` if the given path was prerendered\n * @param {import('@sveltejs/kit').SSRManifest} manifest\n * @param {string} pathname Should include the base and be decoded\n */\nexport function has_prerendered_path(manifest, pathname) {\n\treturn (\n\t\tmanifest._.prerendered_routes.has(pathname) ||\n\t\t(pathname.at(-1) === '/' && manifest._.prerendered_routes.has(pathname.slice(0, -1)))\n\t);\n}\n","import { Redirect } from '@sveltejs/kit/internal';\nimport { ENDPOINT_METHODS, PAGE_METHODS } from '../../constants.js';\nimport { negotiate } from '../../utils/http.js';\nimport { with_event } from '../app/server/event.js';\nimport { method_not_allowed } from './utils.js';\n\n/**\n * @param {import('@sveltejs/kit').RequestEvent} event\n * @param {import('types').SSREndpoint} mod\n * @param {import('types').SSRState} state\n * @returns {Promise<Response>}\n */\nexport async function render_endpoint(event, mod, state) {\n\tconst method = /** @type {import('types').HttpMethod} */ (event.request.method);\n\n\tlet handler = mod[method] || mod.fallback;\n\n\tif (method === 'HEAD' && !mod.HEAD && mod.GET) {\n\t\thandler = mod.GET;\n\t}\n\n\tif (!handler) {\n\t\treturn method_not_allowed(mod, method);\n\t}\n\n\tconst prerender = mod.prerender ?? state.prerender_default;\n\n\tif (prerender && (mod.POST || mod.PATCH || mod.PUT || mod.DELETE)) {\n\t\tthrow new Error('Cannot prerender endpoints that have mutative methods');\n\t}\n\n\tif (state.prerendering && !state.prerendering.inside_reroute && !prerender) {\n\t\tif (state.depth > 0) {\n\t\t\t// if request came from a prerendered page, bail\n\t\t\tthrow new Error(`${event.route.id} is not prerenderable`);\n\t\t} else {\n\t\t\t// if request came direct from the crawler, signal that\n\t\t\t// this route cannot be prerendered, but don't bail\n\t\t\treturn new Response(undefined, { status: 204 });\n\t\t}\n\t}\n\n\ttry {\n\t\tconst response = await with_event(event, () =>\n\t\t\thandler(/** @type {import('@sveltejs/kit').RequestEvent<Record<string, any>>} */ (event))\n\t\t);\n\n\t\tif (!(response instanceof Response)) {\n\t\t\tthrow new Error(\n\t\t\t\t`Invalid response from route ${event.url.pathname}: handler should return a Response object`\n\t\t\t);\n\t\t}\n\n\t\tif (state.prerendering && (!state.prerendering.inside_reroute || prerender)) {\n\t\t\t// The returned Response might have immutable Headers\n\t\t\t// so we should clone them before trying to mutate them.\n\t\t\t// We also need to clone the response body since it may be read twice during prerendering\n\t\t\tconst cloned = new Response(response.clone().body, {\n\t\t\t\tstatus: response.status,\n\t\t\t\tstatusText: response.statusText,\n\t\t\t\theaders: new Headers(response.headers)\n\t\t\t});\n\t\t\tcloned.headers.set('x-sveltekit-prerender', String(prerender));\n\n\t\t\tif (state.prerendering.inside_reroute && prerender) {\n\t\t\t\t// Without this, the route wouldn't be recorded as prerendered,\n\t\t\t\t// because there's nothing after reroute that would do that.\n\t\t\t\tcloned.headers.set(\n\t\t\t\t\t'x-sveltekit-routeid',\n\t\t\t\t\tencodeURI(/** @type {string} */ (event.route.id))\n\t\t\t\t);\n\t\t\t\tstate.prerendering.dependencies.set(event.url.pathname, { response: cloned, body: null });\n\t\t\t} else {\n\t\t\t\treturn cloned;\n\t\t\t}\n\t\t}\n\n\t\treturn response;\n\t} catch (e) {\n\t\tif (e instanceof Redirect) {\n\t\t\treturn new Response(undefined, {\n\t\t\t\tstatus: e.status,\n\t\t\t\theaders: { location: e.location }\n\t\t\t});\n\t\t}\n\n\t\tthrow e;\n\t}\n}\n\n/**\n * @param {import('@sveltejs/kit').RequestEvent} event\n */\nexport function is_endpoint_request(event) {\n\tconst { method, headers } = event.request;\n\n\t// These methods exist exclusively for endpoints\n\tif (ENDPOINT_METHODS.includes(method) && !PAGE_METHODS.includes(method)) {\n\t\treturn true;\n\t}\n\n\t// use:enhance uses a custom header to disambiguate\n\tif (method === 'POST' && headers.get('x-sveltekit-action') === 'true') return false;\n\n\t// GET/POST requests may be for endpoints or pages. We prefer endpoints if this isn't a text/html request\n\tconst accept = event.request.headers.get('accept') ?? '*/*';\n\treturn negotiate(accept, ['*', 'text/html']) !== 'text/html';\n}\n","/**\n * Removes nullish values from an array.\n *\n * @template T\n * @param {Array<T>} arr\n */\nexport function compact(arr) {\n\treturn arr.filter(/** @returns {val is NonNullable<T>} */ (val) => val != null);\n}\n","const DATA_SUFFIX = '/__data.json';\nconst HTML_DATA_SUFFIX = '.html__data.json';\n\n/** @param {string} pathname */\nexport function has_data_suffix(pathname) {\n\treturn pathname.endsWith(DATA_SUFFIX) || pathname.endsWith(HTML_DATA_SUFFIX);\n}\n\n/** @param {string} pathname */\nexport function add_data_suffix(pathname) {\n\tif (pathname.endsWith('.html')) return pathname.replace(/\\.html$/, HTML_DATA_SUFFIX);\n\treturn pathname.replace(/\\/$/, '') + DATA_SUFFIX;\n}\n\n/** @param {string} pathname */\nexport function strip_data_suffix(pathname) {\n\tif (pathname.endsWith(HTML_DATA_SUFFIX)) {\n\t\treturn pathname.slice(0, -HTML_DATA_SUFFIX.length) + '.html';\n\t}\n\n\treturn pathname.slice(0, -DATA_SUFFIX.length);\n}\n\nconst ROUTE_SUFFIX = '/__route.js';\n\n/**\n * @param {string} pathname\n * @returns {boolean}\n */\nexport function has_resolution_suffix(pathname) {\n\treturn pathname.endsWith(ROUTE_SUFFIX);\n}\n\n/**\n * Convert a regular URL to a route to send to SvelteKit's server-side route resolution endpoint\n * @param {string} pathname\n * @returns {string}\n */\nexport function add_resolution_suffix(pathname) {\n\treturn pathname.replace(/\\/$/, '') + ROUTE_SUFFIX;\n}\n\n/**\n * @param {string} pathname\n * @returns {string}\n */\nexport function strip_resolution_suffix(pathname) {\n\treturn pathname.slice(0, -ROUTE_SUFFIX.length);\n}\n","import * as devalue from 'devalue';\nimport { DEV } from 'esm-env';\nimport { json } from '@sveltejs/kit';\nimport { HttpError, Redirect, ActionFailure, SvelteKitError } from '@sveltejs/kit/internal';\nimport { get_status, normalize_error } from '../../../utils/error.js';\nimport { is_form_content_type, negotiate } from '../../../utils/http.js';\nimport { handle_error_and_jsonify } from '../utils.js';\nimport { with_event } from '../../app/server/event.js';\n\n/** @param {import('@sveltejs/kit').RequestEvent} event */\nexport function is_action_json_request(event) {\n\tconst accept = negotiate(event.request.headers.get('accept') ?? '*/*', [\n\t\t'application/json',\n\t\t'text/html'\n\t]);\n\n\treturn accept === 'application/json' && event.request.method === 'POST';\n}\n\n/**\n * @param {import('@sveltejs/kit').RequestEvent} event\n * @param {import('types').SSROptions} options\n * @param {import('types').SSRNode['server'] | undefined} server\n */\nexport async function handle_action_json_request(event, options, server) {\n\tconst actions = server?.actions;\n\n\tif (!actions) {\n\t\tconst no_actions_error = new SvelteKitError(\n\t\t\t405,\n\t\t\t'Method Not Allowed',\n\t\t\t`POST method not allowed. No form actions exist for ${DEV ? `the page at ${event.route.id}` : 'this page'}`\n\t\t);\n\n\t\treturn action_json(\n\t\t\t{\n\t\t\t\ttype: 'error',\n\t\t\t\terror: await handle_error_and_jsonify(event, options, no_actions_error)\n\t\t\t},\n\t\t\t{\n\t\t\t\tstatus: no_actions_error.status,\n\t\t\t\theaders: {\n\t\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/405\n\t\t\t\t\t// \"The server must generate an Allow header field in a 405 status code response\"\n\t\t\t\t\tallow: 'GET'\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tcheck_named_default_separate(actions);\n\n\ttry {\n\t\tconst data = await call_action(event, actions);\n\n\t\tif (__SVELTEKIT_DEV__) {\n\t\t\tvalidate_action_return(data);\n\t\t}\n\n\t\tif (data instanceof ActionFailure) {\n\t\t\treturn action_json({\n\t\t\t\ttype: 'failure',\n\t\t\t\tstatus: data.status,\n\t\t\t\t// @ts-expect-error we assign a string to what is supposed to be an object. That's ok\n\t\t\t\t// because we don't use the object outside, and this way we have better code navigation\n\t\t\t\t// through knowing where the related interface is used.\n\t\t\t\tdata: stringify_action_response(\n\t\t\t\t\tdata.data,\n\t\t\t\t\t/** @type {string} */ (event.route.id),\n\t\t\t\t\toptions.hooks.transport\n\t\t\t\t)\n\t\t\t});\n\t\t} else {\n\t\t\treturn action_json({\n\t\t\t\ttype: 'success',\n\t\t\t\tstatus: data ? 200 : 204,\n\t\t\t\t// @ts-expect-error see comment above\n\t\t\t\tdata: stringify_action_response(\n\t\t\t\t\tdata,\n\t\t\t\t\t/** @type {string} */ (event.route.id),\n\t\t\t\t\toptions.hooks.transport\n\t\t\t\t)\n\t\t\t});\n\t\t}\n\t} catch (e) {\n\t\tconst err = normalize_error(e);\n\n\t\tif (err instanceof Redirect) {\n\t\t\treturn action_json_redirect(err);\n\t\t}\n\n\t\treturn action_json(\n\t\t\t{\n\t\t\t\ttype: 'error',\n\t\t\t\terror: await handle_error_and_jsonify(event, options, check_incorrect_fail_use(err))\n\t\t\t},\n\t\t\t{\n\t\t\t\tstatus: get_status(err)\n\t\t\t}\n\t\t);\n\t}\n}\n\n/**\n * @param {HttpError | Error} error\n */\nexport function check_incorrect_fail_use(error) {\n\treturn error instanceof ActionFailure\n\t\t? new Error('Cannot \"throw fail()\". Use \"return fail()\"')\n\t\t: error;\n}\n\n/**\n * @param {import('@sveltejs/kit').Redirect} redirect\n */\nexport function action_json_redirect(redirect) {\n\treturn action_json({\n\t\ttype: 'redirect',\n\t\tstatus: redirect.status,\n\t\tlocation: redirect.location\n\t});\n}\n\n/**\n * @param {import('@sveltejs/kit').ActionResult} data\n * @param {ResponseInit} [init]\n */\nfunction action_json(data, init) {\n\treturn json(data, init);\n}\n\n/**\n * @param {import('@sveltejs/kit').RequestEvent} event\n */\nexport function is_action_request(event) {\n\treturn event.request.method === 'POST';\n}\n\n/**\n * @param {import('@sveltejs/kit').RequestEvent} event\n * @param {import('types').SSRNode['server'] | undefined} server\n * @returns {Promise<import('@sveltejs/kit').ActionResult>}\n */\nexport async function handle_action_request(event, server) {\n\tconst actions = server?.actions;\n\n\tif (!actions) {\n\t\t// TODO should this be a different error altogether?\n\t\tevent.setHeaders({\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/405\n\t\t\t// \"The server must generate an Allow header field in a 405 status code response\"\n\t\t\tallow: 'GET'\n\t\t});\n\t\treturn {\n\t\t\ttype: 'error',\n\t\t\terror: new SvelteKitError(\n\t\t\t\t405,\n\t\t\t\t'Method Not Allowed',\n\t\t\t\t`POST method not allowed. No form actions exist for ${DEV ? `the page at ${event.route.id}` : 'this page'}`\n\t\t\t)\n\t\t};\n\t}\n\n\tcheck_named_default_separate(actions);\n\n\ttry {\n\t\tconst data = await call_action(event, actions);\n\n\t\tif (__SVELTEKIT_DEV__) {\n\t\t\tvalidate_action_return(data);\n\t\t}\n\n\t\tif (data instanceof ActionFailure) {\n\t\t\treturn {\n\t\t\t\ttype: 'failure',\n\t\t\t\tstatus: data.status,\n\t\t\t\tdata: data.data\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\ttype: 'success',\n\t\t\t\tstatus: 200,\n\t\t\t\t// @ts-expect-error this will be removed upon serialization, so `undefined` is the same as omission\n\t\t\t\tdata\n\t\t\t};\n\t\t}\n\t} catch (e) {\n\t\tconst err = normalize_error(e);\n\n\t\tif (err instanceof Redirect) {\n\t\t\treturn {\n\t\t\t\ttype: 'redirect',\n\t\t\t\tstatus: err.status,\n\t\t\t\tlocation: err.location\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\ttype: 'error',\n\t\t\terror: check_incorrect_fail_use(err)\n\t\t};\n\t}\n}\n\n/**\n * @param {import('@sveltejs/kit').Actions} actions\n */\nfunction check_named_default_separate(actions) {\n\tif (actions.default && Object.keys(actions).length > 1) {\n\t\tthrow new Error(\n\t\t\t'When using named actions, the default action cannot be used. See the docs for more info: https://svelte.dev/docs/kit/form-actions#named-actions'\n\t\t);\n\t}\n}\n\n/**\n * @param {import('@sveltejs/kit').RequestEvent} event\n * @param {NonNullable<import('types').ServerNode['actions']>} actions\n * @throws {Redirect | HttpError | SvelteKitError | Error}\n */\nasync function call_action(event, actions) {\n\tconst url = new URL(event.request.url);\n\n\tlet name = 'default';\n\tfor (const param of url.searchParams) {\n\t\tif (param[0].startsWith('/')) {\n\t\t\tname = param[0].slice(1);\n\t\t\tif (name === 'default') {\n\t\t\t\tthrow new Error('Cannot use reserved action name \"default\"');\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tconst action = actions[name];\n\tif (!action) {\n\t\tthrow new SvelteKitError(404, 'Not Found', `No action with name '${name}' found`);\n\t}\n\n\tif (!is_form_content_type(event.request)) {\n\t\tthrow new SvelteKitError(\n\t\t\t415,\n\t\t\t'Unsupported Media Type',\n\t\t\t`Form actions expect form-encoded data — received ${event.request.headers.get(\n\t\t\t\t'content-type'\n\t\t\t)}`\n\t\t);\n\t}\n\n\treturn with_event(event, () => action(event));\n}\n\n/** @param {any} data */\nfunction validate_action_return(data) {\n\tif (data instanceof Redirect) {\n\t\tthrow new Error('Cannot `return redirect(...)` — use `redirect(...)` instead');\n\t}\n\n\tif (data instanceof HttpError) {\n\t\tthrow new Error('Cannot `return error(...)` — use `error(...)` or `return fail(...)` instead');\n\t}\n}\n\n/**\n * Try to `devalue.uneval` the data object, and if it fails, return a proper Error with context\n * @param {any} data\n * @param {string} route_id\n * @param {import('types').ServerHooks['transport']} transport\n */\nexport function uneval_action_response(data, route_id, transport) {\n\tconst replacer = (/** @type {any} */ thing) => {\n\t\tfor (const key in transport) {\n\t\t\tconst encoded = transport[key].encode(thing);\n\t\t\tif (encoded) {\n\t\t\t\treturn `app.decode('${key}', ${devalue.uneval(encoded, replacer)})`;\n\t\t\t}\n\t\t}\n\t};\n\n\treturn try_serialize(data, (value) => devalue.uneval(value, replacer), route_id);\n}\n\n/**\n * Try to `devalue.stringify` the data object, and if it fails, return a proper Error with context\n * @param {any} data\n * @param {string} route_id\n * @param {import('types').ServerHooks['transport']} transport\n */\nfunction stringify_action_response(data, route_id, transport) {\n\tconst encoders = Object.fromEntries(\n\t\tObject.entries(transport).map(([key, value]) => [key, value.encode])\n\t);\n\n\treturn try_serialize(data, (value) => devalue.stringify(value, encoders), route_id);\n}\n\n/**\n * @param {any} data\n * @param {(data: any) => string} fn\n * @param {string} route_id\n */\nfunction try_serialize(data, fn, route_id) {\n\ttry {\n\t\treturn fn(data);\n\t} catch (e) {\n\t\t// If we're here, the data could not be serialized with devalue\n\t\tconst error = /** @type {any} */ (e);\n\n\t\t// if someone tries to use `json()` in their action\n\t\tif (data instanceof Response) {\n\t\t\tthrow new Error(\n\t\t\t\t`Data returned from action inside ${route_id} is not serializable. Form actions need to return plain objects or fail(). E.g. return { success: true } or return fail(400, { message: \"invalid\" });`\n\t\t\t);\n\t\t}\n\n\t\t// if devalue could not serialize a property on the object, etc.\n\t\tif ('path' in error) {\n\t\t\tlet message = `Data returned from action inside ${route_id} is not serializable: ${error.message}`;\n\t\t\tif (error.path !== '') message += ` (data.${error.path})`;\n\t\t\tthrow new Error(message);\n\t\t}\n\n\t\tthrow error;\n\t}\n}\n","import { DEV } from 'esm-env';\nimport { disable_search, make_trackable } from '../../../utils/url.js';\nimport { validate_depends } from '../../shared.js';\nimport { base64_encode, text_decoder } from '../../utils.js';\nimport { with_event } from '../../app/server/event.js';\n\n/**\n * Calls the user's server `load` function.\n * @param {{\n *   event: import('@sveltejs/kit').RequestEvent;\n *   state: import('types').SSRState;\n *   node: import('types').SSRNode | undefined;\n *   parent: () => Promise<Record<string, any>>;\n * }} opts\n * @returns {Promise<import('types').ServerDataNode | null>}\n */\nexport async function load_server_data({ event, state, node, parent }) {\n\tif (!node?.server) return null;\n\n\tlet is_tracking = true;\n\n\tconst uses = {\n\t\tdependencies: new Set(),\n\t\tparams: new Set(),\n\t\tparent: false,\n\t\troute: false,\n\t\turl: false,\n\t\tsearch_params: new Set()\n\t};\n\n\tconst load = node.server.load;\n\t// TODO: shouldn't this be calculated using PageNodes? there could be a trailingSlash option on a layout\n\tconst slash = node.server.trailingSlash;\n\n\tif (!load) {\n\t\treturn { type: 'data', data: null, uses, slash };\n\t}\n\n\tconst url = make_trackable(\n\t\tevent.url,\n\t\t() => {\n\t\t\tif (DEV && done && !uses.url) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t`${node.server_id}: Accessing URL properties in a promise handler after \\`load(...)\\` has returned will not cause the function to re-run when the URL changes`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (is_tracking) {\n\t\t\t\tuses.url = true;\n\t\t\t}\n\t\t},\n\t\t(param) => {\n\t\t\tif (DEV && done && !uses.search_params.has(param)) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t`${node.server_id}: Accessing URL properties in a promise handler after \\`load(...)\\` has returned will not cause the function to re-run when the URL changes`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (is_tracking) {\n\t\t\t\tuses.search_params.add(param);\n\t\t\t}\n\t\t}\n\t);\n\n\tif (state.prerendering) {\n\t\tdisable_search(url);\n\t}\n\n\tlet done = false;\n\n\tconst result = await with_event(event, () =>\n\t\tload.call(null, {\n\t\t\t...event,\n\t\t\tfetch: (info, init) => {\n\t\t\t\tconst url = new URL(info instanceof Request ? info.url : info, event.url);\n\n\t\t\t\tif (DEV && done && !uses.dependencies.has(url.href)) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`${node.server_id}: Calling \\`event.fetch(...)\\` in a promise handler after \\`load(...)\\` has returned will not cause the function to re-run when the dependency is invalidated`\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// Note: server fetches are not added to uses.depends due to security concerns\n\t\t\t\treturn event.fetch(info, init);\n\t\t\t},\n\t\t\t/** @param {string[]} deps */\n\t\t\tdepends: (...deps) => {\n\t\t\t\tfor (const dep of deps) {\n\t\t\t\t\tconst { href } = new URL(dep, event.url);\n\n\t\t\t\t\tif (DEV) {\n\t\t\t\t\t\tvalidate_depends(node.server_id || 'missing route ID', dep);\n\n\t\t\t\t\t\tif (done && !uses.dependencies.has(href)) {\n\t\t\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\t\t`${node.server_id}: Calling \\`depends(...)\\` in a promise handler after \\`load(...)\\` has returned will not cause the function to re-run when the dependency is invalidated`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tuses.dependencies.add(href);\n\t\t\t\t}\n\t\t\t},\n\t\t\tparams: new Proxy(event.params, {\n\t\t\t\tget: (target, key) => {\n\t\t\t\t\tif (DEV && done && typeof key === 'string' && !uses.params.has(key)) {\n\t\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\t`${node.server_id}: Accessing \\`params.${String(\n\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t)}\\` in a promise handler after \\`load(...)\\` has returned will not cause the function to re-run when the param changes`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (is_tracking) {\n\t\t\t\t\t\tuses.params.add(key);\n\t\t\t\t\t}\n\t\t\t\t\treturn target[/** @type {string} */ (key)];\n\t\t\t\t}\n\t\t\t}),\n\t\t\tparent: async () => {\n\t\t\t\tif (DEV && done && !uses.parent) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`${node.server_id}: Calling \\`parent(...)\\` in a promise handler after \\`load(...)\\` has returned will not cause the function to re-run when parent data changes`\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (is_tracking) {\n\t\t\t\t\tuses.parent = true;\n\t\t\t\t}\n\t\t\t\treturn parent();\n\t\t\t},\n\t\t\troute: new Proxy(event.route, {\n\t\t\t\tget: (target, key) => {\n\t\t\t\t\tif (DEV && done && typeof key === 'string' && !uses.route) {\n\t\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\t`${node.server_id}: Accessing \\`route.${String(\n\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t)}\\` in a promise handler after \\`load(...)\\` has returned will not cause the function to re-run when the route changes`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (is_tracking) {\n\t\t\t\t\t\tuses.route = true;\n\t\t\t\t\t}\n\t\t\t\t\treturn target[/** @type {'id'} */ (key)];\n\t\t\t\t}\n\t\t\t}),\n\t\t\turl,\n\t\t\tuntrack(fn) {\n\t\t\t\tis_tracking = false;\n\t\t\t\ttry {\n\t\t\t\t\treturn fn();\n\t\t\t\t} finally {\n\t\t\t\t\tis_tracking = true;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t);\n\n\tif (__SVELTEKIT_DEV__) {\n\t\tvalidate_load_response(result, node.server_id);\n\t}\n\n\tdone = true;\n\n\treturn {\n\t\ttype: 'data',\n\t\tdata: result ?? null,\n\t\tuses,\n\t\tslash\n\t};\n}\n\n/**\n * Calls the user's `load` function.\n * @param {{\n *   event: import('@sveltejs/kit').RequestEvent;\n *   fetched: import('./types.js').Fetched[];\n *   node: import('types').SSRNode | undefined;\n *   parent: () => Promise<Record<string, any>>;\n *   resolve_opts: import('types').RequiredResolveOptions;\n *   server_data_promise: Promise<import('types').ServerDataNode | null>;\n *   state: import('types').SSRState;\n *   csr: boolean;\n * }} opts\n * @returns {Promise<Record<string, any | Promise<any>> | null>}\n */\nexport async function load_data({\n\tevent,\n\tfetched,\n\tnode,\n\tparent,\n\tserver_data_promise,\n\tstate,\n\tresolve_opts,\n\tcsr\n}) {\n\tconst server_data_node = await server_data_promise;\n\n\tconst load = node?.universal?.load;\n\n\tif (!load) {\n\t\treturn server_data_node?.data ?? null;\n\t}\n\n\t// We're adding getRequestEvent context to the universal load function\n\t// in order to be able to use remote calls within it.\n\tconst result = await with_event(event, () =>\n\t\tload.call(null, {\n\t\t\turl: event.url,\n\t\t\tparams: event.params,\n\t\t\tdata: server_data_node?.data ?? null,\n\t\t\troute: event.route,\n\t\t\tfetch: create_universal_fetch(event, state, fetched, csr, resolve_opts),\n\t\t\tsetHeaders: event.setHeaders,\n\t\t\tdepends: () => {},\n\t\t\tparent,\n\t\t\tuntrack: (fn) => fn()\n\t\t})\n\t);\n\n\tif (__SVELTEKIT_DEV__) {\n\t\tvalidate_load_response(result, node.universal_id);\n\t}\n\n\treturn result ?? null;\n}\n\n/**\n * @param {Pick<import('@sveltejs/kit').RequestEvent, 'fetch' | 'url' | 'request' | 'route'>} event\n * @param {import('types').SSRState} state\n * @param {import('./types.js').Fetched[]} fetched\n * @param {boolean} csr\n * @param {Pick<Required<import('@sveltejs/kit').ResolveOptions>, 'filterSerializedResponseHeaders'>} resolve_opts\n * @returns {typeof fetch}\n */\nexport function create_universal_fetch(event, state, fetched, csr, resolve_opts) {\n\t/**\n\t * @param {URL | RequestInfo} input\n\t * @param {RequestInit} [init]\n\t */\n\tconst universal_fetch = async (input, init) => {\n\t\tconst cloned_body = input instanceof Request && input.body ? input.clone().body : null;\n\n\t\tconst cloned_headers =\n\t\t\tinput instanceof Request && [...input.headers].length\n\t\t\t\t? new Headers(input.headers)\n\t\t\t\t: init?.headers;\n\n\t\tlet response = await event.fetch(input, init);\n\n\t\tconst url = new URL(input instanceof Request ? input.url : input, event.url);\n\t\tconst same_origin = url.origin === event.url.origin;\n\n\t\t/** @type {import('types').PrerenderDependency} */\n\t\tlet dependency;\n\n\t\tif (same_origin) {\n\t\t\tif (state.prerendering) {\n\t\t\t\tdependency = { response, body: null };\n\t\t\t\tstate.prerendering.dependencies.set(url.pathname, dependency);\n\t\t\t}\n\t\t} else if (url.protocol === 'https:' || url.protocol === 'http:') {\n\t\t\t// simulate CORS errors and \"no access to body in no-cors mode\" server-side for consistency with client-side behaviour\n\t\t\tconst mode = input instanceof Request ? input.mode : (init?.mode ?? 'cors');\n\t\t\tif (mode === 'no-cors') {\n\t\t\t\tresponse = new Response('', {\n\t\t\t\t\tstatus: response.status,\n\t\t\t\t\tstatusText: response.statusText,\n\t\t\t\t\theaders: response.headers\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconst acao = response.headers.get('access-control-allow-origin');\n\t\t\t\tif (!acao || (acao !== event.url.origin && acao !== '*')) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`CORS error: ${\n\t\t\t\t\t\t\tacao ? 'Incorrect' : 'No'\n\t\t\t\t\t\t} 'Access-Control-Allow-Origin' header is present on the requested resource`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst proxy = new Proxy(response, {\n\t\t\tget(response, key, _receiver) {\n\t\t\t\t/**\n\t\t\t\t * @param {string} body\n\t\t\t\t * @param {boolean} is_b64\n\t\t\t\t */\n\t\t\t\tasync function push_fetched(body, is_b64) {\n\t\t\t\t\tconst status_number = Number(response.status);\n\t\t\t\t\tif (isNaN(status_number)) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`response.status is not a number. value: \"${\n\t\t\t\t\t\t\t\tresponse.status\n\t\t\t\t\t\t\t}\" type: ${typeof response.status}`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tfetched.push({\n\t\t\t\t\t\turl: same_origin ? url.href.slice(event.url.origin.length) : url.href,\n\t\t\t\t\t\tmethod: event.request.method,\n\t\t\t\t\t\trequest_body: /** @type {string | ArrayBufferView | undefined} */ (\n\t\t\t\t\t\t\tinput instanceof Request && cloned_body\n\t\t\t\t\t\t\t\t? await stream_to_string(cloned_body)\n\t\t\t\t\t\t\t\t: init?.body\n\t\t\t\t\t\t),\n\t\t\t\t\t\trequest_headers: cloned_headers,\n\t\t\t\t\t\tresponse_body: body,\n\t\t\t\t\t\tresponse,\n\t\t\t\t\t\tis_b64\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (key === 'arrayBuffer') {\n\t\t\t\t\treturn async () => {\n\t\t\t\t\t\tconst buffer = await response.arrayBuffer();\n\n\t\t\t\t\t\tconst bytes = new Uint8Array(buffer);\n\n\t\t\t\t\t\tif (dependency) {\n\t\t\t\t\t\t\tdependency.body = bytes;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (buffer instanceof ArrayBuffer) {\n\t\t\t\t\t\t\tawait push_fetched(base64_encode(bytes), true);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn buffer;\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tasync function text() {\n\t\t\t\t\tconst body = await response.text();\n\n\t\t\t\t\tif (!body || typeof body === 'string') {\n\t\t\t\t\t\tawait push_fetched(body, false);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dependency) {\n\t\t\t\t\t\tdependency.body = body;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn body;\n\t\t\t\t}\n\n\t\t\t\tif (key === 'text') {\n\t\t\t\t\treturn text;\n\t\t\t\t}\n\n\t\t\t\tif (key === 'json') {\n\t\t\t\t\treturn async () => {\n\t\t\t\t\t\treturn JSON.parse(await text());\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn Reflect.get(response, key, response);\n\t\t\t}\n\t\t});\n\n\t\tif (csr) {\n\t\t\t// ensure that excluded headers can't be read\n\t\t\tconst get = response.headers.get;\n\t\t\tresponse.headers.get = (key) => {\n\t\t\t\tconst lower = key.toLowerCase();\n\t\t\t\tconst value = get.call(response.headers, lower);\n\t\t\t\tif (value && !lower.startsWith('x-sveltekit-')) {\n\t\t\t\t\tconst included = resolve_opts.filterSerializedResponseHeaders(lower, value);\n\t\t\t\t\tif (!included) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`Failed to get response header \"${lower}\" — it must be included by the \\`filterSerializedResponseHeaders\\` option: https://svelte.dev/docs/kit/hooks#Server-hooks-handle (at ${event.route.id})`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn value;\n\t\t\t};\n\t\t}\n\n\t\treturn proxy;\n\t};\n\n\t// Don't make this function `async`! Otherwise, the user has to `catch` promises they use for streaming responses or else\n\t// it will be an unhandled rejection. Instead, we add a `.catch(() => {})` ourselves below to this from happening.\n\treturn (input, init) => {\n\t\t// See docs in fetch.js for why we need to do this\n\t\tconst response = universal_fetch(input, init);\n\t\tresponse.catch(() => {});\n\t\treturn response;\n\t};\n}\n\n/**\n * @param {ReadableStream<Uint8Array>} stream\n */\nasync function stream_to_string(stream) {\n\tlet result = '';\n\tconst reader = stream.getReader();\n\twhile (true) {\n\t\tconst { done, value } = await reader.read();\n\t\tif (done) {\n\t\t\tbreak;\n\t\t}\n\t\tresult += text_decoder.decode(value);\n\t}\n\treturn result;\n}\n\n/**\n * @param {any} data\n * @param {string} [id]\n */\nfunction validate_load_response(data, id) {\n\tif (data != null && Object.getPrototypeOf(data) !== Object.prototype) {\n\t\tthrow new Error(\n\t\t\t`a load function in ${id} returned ${\n\t\t\t\ttypeof data !== 'object'\n\t\t\t\t\t? `a ${typeof data}`\n\t\t\t\t\t: data instanceof Response\n\t\t\t\t\t\t? 'a Response object'\n\t\t\t\t\t\t: Array.isArray(data)\n\t\t\t\t\t\t\t? 'an array'\n\t\t\t\t\t\t\t: 'a non-plain object'\n\t\t\t}, but must return a plain object at the top level (i.e. \\`return {...}\\`)`\n\t\t);\n\t}\n}\n","/**\n * Hash using djb2\n * @param {import('types').StrictBody[]} values\n */\nexport function hash(...values) {\n\tlet hash = 5381;\n\n\tfor (const value of values) {\n\t\tif (typeof value === 'string') {\n\t\t\tlet i = value.length;\n\t\t\twhile (i) hash = (hash * 33) ^ value.charCodeAt(--i);\n\t\t} else if (ArrayBuffer.isView(value)) {\n\t\t\tconst buffer = new Uint8Array(value.buffer, value.byteOffset, value.byteLength);\n\t\t\tlet i = buffer.length;\n\t\t\twhile (i) hash = (hash * 33) ^ buffer[--i];\n\t\t} else {\n\t\t\tthrow new TypeError('value must be a string or TypedArray');\n\t\t}\n\t}\n\n\treturn (hash >>> 0).toString(36);\n}\n","import { escape_html } from '../../../utils/escape.js';\nimport { hash } from '../../../utils/hash.js';\n\n/**\n * Inside a script element, only `</script` and `<!--` hold special meaning to the HTML parser.\n *\n * The first closes the script element, so everything after is treated as raw HTML.\n * The second disables further parsing until `-->`, so the script element might be unexpectedly\n * kept open until until an unrelated HTML comment in the page.\n *\n * U+2028 LINE SEPARATOR and U+2029 PARAGRAPH SEPARATOR are escaped for the sake of pre-2018\n * browsers.\n *\n * @see tests for unsafe parsing examples.\n * @see https://html.spec.whatwg.org/multipage/scripting.html#restrictions-for-contents-of-script-elements\n * @see https://html.spec.whatwg.org/multipage/syntax.html#cdata-rcdata-restrictions\n * @see https://html.spec.whatwg.org/multipage/parsing.html#script-data-state\n * @see https://html.spec.whatwg.org/multipage/parsing.html#script-data-double-escaped-state\n * @see https://github.com/tc39/proposal-json-superset\n * @type {Record<string, string>}\n */\nconst replacements = {\n\t'<': '\\\\u003C',\n\t'\\u2028': '\\\\u2028',\n\t'\\u2029': '\\\\u2029'\n};\n\nconst pattern = new RegExp(`[${Object.keys(replacements).join('')}]`, 'g');\n\n/**\n * Generates a raw HTML string containing a safe script element carrying data and associated attributes.\n *\n * It escapes all the special characters needed to guarantee the element is unbroken, but care must\n * be taken to ensure it is inserted in the document at an acceptable position for a script element,\n * and that the resulting string isn't further modified.\n *\n * @param {import('./types.js').Fetched} fetched\n * @param {(name: string, value: string) => boolean} filter\n * @param {boolean} [prerendering]\n * @returns {string} The raw HTML of a script element carrying the JSON payload.\n * @example const html = serialize_data('/data.json', null, { foo: 'bar' });\n */\nexport function serialize_data(fetched, filter, prerendering = false) {\n\t/** @type {Record<string, string>} */\n\tconst headers = {};\n\n\tlet cache_control = null;\n\tlet age = null;\n\tlet varyAny = false;\n\n\tfor (const [key, value] of fetched.response.headers) {\n\t\tif (filter(key, value)) {\n\t\t\theaders[key] = value;\n\t\t}\n\n\t\tif (key === 'cache-control') cache_control = value;\n\t\telse if (key === 'age') age = value;\n\t\telse if (key === 'vary' && value.trim() === '*') varyAny = true;\n\t}\n\n\tconst payload = {\n\t\tstatus: fetched.response.status,\n\t\tstatusText: fetched.response.statusText,\n\t\theaders,\n\t\tbody: fetched.response_body\n\t};\n\n\tconst safe_payload = JSON.stringify(payload).replace(pattern, (match) => replacements[match]);\n\n\tconst attrs = [\n\t\t'type=\"application/json\"',\n\t\t'data-sveltekit-fetched',\n\t\t`data-url=\"${escape_html(fetched.url, true)}\"`\n\t];\n\n\tif (fetched.is_b64) {\n\t\tattrs.push('data-b64');\n\t}\n\n\tif (fetched.request_headers || fetched.request_body) {\n\t\t/** @type {import('types').StrictBody[]} */\n\t\tconst values = [];\n\n\t\tif (fetched.request_headers) {\n\t\t\tvalues.push([...new Headers(fetched.request_headers)].join(','));\n\t\t}\n\n\t\tif (fetched.request_body) {\n\t\t\tvalues.push(fetched.request_body);\n\t\t}\n\n\t\tattrs.push(`data-hash=\"${hash(...values)}\"`);\n\t}\n\n\t// Compute the time the response should be cached, taking into account max-age and age.\n\t// Do not cache at all if a `Vary: *` header is present, as this indicates that the\n\t// cache is likely to get busted.\n\tif (!prerendering && fetched.method === 'GET' && cache_control && !varyAny) {\n\t\tconst match = /s-maxage=(\\d+)/g.exec(cache_control) ?? /max-age=(\\d+)/g.exec(cache_control);\n\t\tif (match) {\n\t\t\tconst ttl = +match[1] - +(age ?? '0');\n\t\t\tattrs.push(`data-ttl=\"${ttl}\"`);\n\t\t}\n\t}\n\n\treturn `<script ${attrs.join(' ')}>${safe_payload}</script>`;\n}\n","export const s = JSON.stringify;\n","import { text_encoder } from '../../utils.js';\n\n/**\n * SHA-256 hashing function adapted from https://bitwiseshiftleft.github.io/sjcl\n * modified and redistributed under BSD license\n * @param {string} data\n */\nexport function sha256(data) {\n\tif (!key[0]) precompute();\n\n\tconst out = init.slice(0);\n\tconst array = encode(data);\n\n\tfor (let i = 0; i < array.length; i += 16) {\n\t\tconst w = array.subarray(i, i + 16);\n\n\t\tlet tmp;\n\t\tlet a;\n\t\tlet b;\n\n\t\tlet out0 = out[0];\n\t\tlet out1 = out[1];\n\t\tlet out2 = out[2];\n\t\tlet out3 = out[3];\n\t\tlet out4 = out[4];\n\t\tlet out5 = out[5];\n\t\tlet out6 = out[6];\n\t\tlet out7 = out[7];\n\n\t\t/* Rationale for placement of |0 :\n\t\t * If a value can overflow is original 32 bits by a factor of more than a few\n\t\t * million (2^23 ish), there is a possibility that it might overflow the\n\t\t * 53-bit mantissa and lose precision.\n\t\t *\n\t\t * To avoid this, we clamp back to 32 bits by |'ing with 0 on any value that\n\t\t * propagates around the loop, and on the hash state out[]. I don't believe\n\t\t * that the clamps on out4 and on out0 are strictly necessary, but it's close\n\t\t * (for out4 anyway), and better safe than sorry.\n\t\t *\n\t\t * The clamps on out[] are necessary for the output to be correct even in the\n\t\t * common case and for short inputs.\n\t\t */\n\n\t\tfor (let i = 0; i < 64; i++) {\n\t\t\t// load up the input word for this round\n\n\t\t\tif (i < 16) {\n\t\t\t\ttmp = w[i];\n\t\t\t} else {\n\t\t\t\ta = w[(i + 1) & 15];\n\n\t\t\t\tb = w[(i + 14) & 15];\n\n\t\t\t\ttmp = w[i & 15] =\n\t\t\t\t\t(((a >>> 7) ^ (a >>> 18) ^ (a >>> 3) ^ (a << 25) ^ (a << 14)) +\n\t\t\t\t\t\t((b >>> 17) ^ (b >>> 19) ^ (b >>> 10) ^ (b << 15) ^ (b << 13)) +\n\t\t\t\t\t\tw[i & 15] +\n\t\t\t\t\t\tw[(i + 9) & 15]) |\n\t\t\t\t\t0;\n\t\t\t}\n\n\t\t\ttmp =\n\t\t\t\ttmp +\n\t\t\t\tout7 +\n\t\t\t\t((out4 >>> 6) ^ (out4 >>> 11) ^ (out4 >>> 25) ^ (out4 << 26) ^ (out4 << 21) ^ (out4 << 7)) +\n\t\t\t\t(out6 ^ (out4 & (out5 ^ out6))) +\n\t\t\t\tkey[i]; // | 0;\n\n\t\t\t// shift register\n\t\t\tout7 = out6;\n\t\t\tout6 = out5;\n\t\t\tout5 = out4;\n\n\t\t\tout4 = (out3 + tmp) | 0;\n\n\t\t\tout3 = out2;\n\t\t\tout2 = out1;\n\t\t\tout1 = out0;\n\n\t\t\tout0 =\n\t\t\t\t(tmp +\n\t\t\t\t\t((out1 & out2) ^ (out3 & (out1 ^ out2))) +\n\t\t\t\t\t((out1 >>> 2) ^\n\t\t\t\t\t\t(out1 >>> 13) ^\n\t\t\t\t\t\t(out1 >>> 22) ^\n\t\t\t\t\t\t(out1 << 30) ^\n\t\t\t\t\t\t(out1 << 19) ^\n\t\t\t\t\t\t(out1 << 10))) |\n\t\t\t\t0;\n\t\t}\n\n\t\tout[0] = (out[0] + out0) | 0;\n\t\tout[1] = (out[1] + out1) | 0;\n\t\tout[2] = (out[2] + out2) | 0;\n\t\tout[3] = (out[3] + out3) | 0;\n\t\tout[4] = (out[4] + out4) | 0;\n\t\tout[5] = (out[5] + out5) | 0;\n\t\tout[6] = (out[6] + out6) | 0;\n\t\tout[7] = (out[7] + out7) | 0;\n\t}\n\n\tconst bytes = new Uint8Array(out.buffer);\n\treverse_endianness(bytes);\n\n\treturn btoa(String.fromCharCode(...bytes));\n}\n\n/** The SHA-256 initialization vector */\nconst init = new Uint32Array(8);\n\n/** The SHA-256 hash key */\nconst key = new Uint32Array(64);\n\n/** Function to precompute init and key. */\nfunction precompute() {\n\t/** @param {number} x */\n\tfunction frac(x) {\n\t\treturn (x - Math.floor(x)) * 0x100000000;\n\t}\n\n\tlet prime = 2;\n\n\tfor (let i = 0; i < 64; prime++) {\n\t\tlet is_prime = true;\n\n\t\tfor (let factor = 2; factor * factor <= prime; factor++) {\n\t\t\tif (prime % factor === 0) {\n\t\t\t\tis_prime = false;\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (is_prime) {\n\t\t\tif (i < 8) {\n\t\t\t\tinit[i] = frac(prime ** (1 / 2));\n\t\t\t}\n\n\t\t\tkey[i] = frac(prime ** (1 / 3));\n\n\t\t\ti++;\n\t\t}\n\t}\n}\n\n/** @param {Uint8Array} bytes */\nfunction reverse_endianness(bytes) {\n\tfor (let i = 0; i < bytes.length; i += 4) {\n\t\tconst a = bytes[i + 0];\n\t\tconst b = bytes[i + 1];\n\t\tconst c = bytes[i + 2];\n\t\tconst d = bytes[i + 3];\n\n\t\tbytes[i + 0] = d;\n\t\tbytes[i + 1] = c;\n\t\tbytes[i + 2] = b;\n\t\tbytes[i + 3] = a;\n\t}\n}\n\n/** @param {string} str */\nfunction encode(str) {\n\tconst encoded = text_encoder.encode(str);\n\tconst length = encoded.length * 8;\n\n\t// result should be a multiple of 512 bits in length,\n\t// with room for a 1 (after the data) and two 32-bit\n\t// words containing the original input bit length\n\tconst size = 512 * Math.ceil((length + 65) / 512);\n\tconst bytes = new Uint8Array(size / 8);\n\tbytes.set(encoded);\n\n\t// append a 1\n\tbytes[encoded.length] = 0b10000000;\n\n\treverse_endianness(bytes);\n\n\t// add the input bit length\n\tconst words = new Uint32Array(bytes.buffer);\n\twords[words.length - 2] = Math.floor(length / 0x100000000); // this will always be zero for us\n\twords[words.length - 1] = length;\n\n\treturn words;\n}\n","import { escape_html } from '../../../utils/escape.js';\nimport { sha256 } from './crypto.js';\n\nconst array = new Uint8Array(16);\n\nfunction generate_nonce() {\n\tcrypto.getRandomValues(array);\n\treturn btoa(String.fromCharCode(...array));\n}\n\nconst quoted = new Set([\n\t'self',\n\t'unsafe-eval',\n\t'unsafe-hashes',\n\t'unsafe-inline',\n\t'none',\n\t'strict-dynamic',\n\t'report-sample',\n\t'wasm-unsafe-eval',\n\t'script'\n]);\n\nconst crypto_pattern = /^(nonce|sha\\d\\d\\d)-/;\n\n// CSP and CSP Report Only are extremely similar with a few caveats\n// the easiest/DRYest way to express this is with some private encapsulation\nclass BaseProvider {\n\t/** @type {boolean} */\n\t#use_hashes;\n\n\t/** @type {boolean} */\n\t#script_needs_csp;\n\n\t/** @type {boolean} */\n\t#script_src_needs_csp;\n\n\t/** @type {boolean} */\n\t#script_src_elem_needs_csp;\n\n\t/** @type {boolean} */\n\t#style_needs_csp;\n\n\t/** @type {boolean} */\n\t#style_src_needs_csp;\n\n\t/** @type {boolean} */\n\t#style_src_attr_needs_csp;\n\n\t/** @type {boolean} */\n\t#style_src_elem_needs_csp;\n\n\t/** @type {import('types').CspDirectives} */\n\t#directives;\n\n\t/** @type {import('types').Csp.Source[]} */\n\t#script_src;\n\n\t/** @type {import('types').Csp.Source[]} */\n\t#script_src_elem;\n\n\t/** @type {import('types').Csp.Source[]} */\n\t#style_src;\n\n\t/** @type {import('types').Csp.Source[]} */\n\t#style_src_attr;\n\n\t/** @type {import('types').Csp.Source[]} */\n\t#style_src_elem;\n\n\t/** @type {string} */\n\t#nonce;\n\n\t/**\n\t * @param {boolean} use_hashes\n\t * @param {import('types').CspDirectives} directives\n\t * @param {string} nonce\n\t */\n\tconstructor(use_hashes, directives, nonce) {\n\t\tthis.#use_hashes = use_hashes;\n\t\tthis.#directives = __SVELTEKIT_DEV__ ? { ...directives } : directives; // clone in dev so we can safely mutate\n\n\t\tconst d = this.#directives;\n\n\t\tthis.#script_src = [];\n\t\tthis.#script_src_elem = [];\n\t\tthis.#style_src = [];\n\t\tthis.#style_src_attr = [];\n\t\tthis.#style_src_elem = [];\n\n\t\tconst effective_script_src = d['script-src'] || d['default-src'];\n\t\tconst script_src_elem = d['script-src-elem'];\n\t\tconst effective_style_src = d['style-src'] || d['default-src'];\n\t\tconst style_src_attr = d['style-src-attr'];\n\t\tconst style_src_elem = d['style-src-elem'];\n\n\t\tif (__SVELTEKIT_DEV__) {\n\t\t\t// remove strict-dynamic in dev...\n\t\t\t// TODO reinstate this if we can figure out how to make strict-dynamic work\n\t\t\t// if (d['default-src']) {\n\t\t\t// \td['default-src'] = d['default-src'].filter((name) => name !== 'strict-dynamic');\n\t\t\t// \tif (d['default-src'].length === 0) delete d['default-src'];\n\t\t\t// }\n\n\t\t\t// if (d['script-src']) {\n\t\t\t// \td['script-src'] = d['script-src'].filter((name) => name !== 'strict-dynamic');\n\t\t\t// \tif (d['script-src'].length === 0) delete d['script-src'];\n\t\t\t// }\n\n\t\t\t// ...and add unsafe-inline so we can inject <style> elements\n\t\t\t// Note that 'unsafe-inline' is ignored if either a hash or nonce value is present in the source list, so we remove those during dev when injecting unsafe-inline\n\t\t\tif (effective_style_src && !effective_style_src.includes('unsafe-inline')) {\n\t\t\t\td['style-src'] = [\n\t\t\t\t\t...effective_style_src.filter(\n\t\t\t\t\t\t(value) => !(value.startsWith('sha256-') || value.startsWith('nonce-'))\n\t\t\t\t\t),\n\t\t\t\t\t'unsafe-inline'\n\t\t\t\t];\n\t\t\t}\n\n\t\t\tif (style_src_attr && !style_src_attr.includes('unsafe-inline')) {\n\t\t\t\td['style-src-attr'] = [\n\t\t\t\t\t...style_src_attr.filter(\n\t\t\t\t\t\t(value) => !(value.startsWith('sha256-') || value.startsWith('nonce-'))\n\t\t\t\t\t),\n\t\t\t\t\t'unsafe-inline'\n\t\t\t\t];\n\t\t\t}\n\n\t\t\tif (style_src_elem && !style_src_elem.includes('unsafe-inline')) {\n\t\t\t\td['style-src-elem'] = [\n\t\t\t\t\t...style_src_elem.filter(\n\t\t\t\t\t\t(value) => !(value.startsWith('sha256-') || value.startsWith('nonce-'))\n\t\t\t\t\t),\n\t\t\t\t\t'unsafe-inline'\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\n\t\t/** @param {(import('types').Csp.Source | import('types').Csp.ActionSource)[] | undefined} directive */\n\t\tconst needs_csp = (directive) =>\n\t\t\t!!directive && !directive.some((value) => value === 'unsafe-inline');\n\n\t\tthis.#script_src_needs_csp = needs_csp(effective_script_src);\n\t\tthis.#script_src_elem_needs_csp = needs_csp(script_src_elem);\n\t\tthis.#style_src_needs_csp = needs_csp(effective_style_src);\n\t\tthis.#style_src_attr_needs_csp = needs_csp(style_src_attr);\n\t\tthis.#style_src_elem_needs_csp = needs_csp(style_src_elem);\n\n\t\tthis.#script_needs_csp = this.#script_src_needs_csp || this.#script_src_elem_needs_csp;\n\t\tthis.#style_needs_csp =\n\t\t\t!__SVELTEKIT_DEV__ &&\n\t\t\t(this.#style_src_needs_csp ||\n\t\t\t\tthis.#style_src_attr_needs_csp ||\n\t\t\t\tthis.#style_src_elem_needs_csp);\n\n\t\tthis.script_needs_nonce = this.#script_needs_csp && !this.#use_hashes;\n\t\tthis.style_needs_nonce = this.#style_needs_csp && !this.#use_hashes;\n\n\t\tthis.#nonce = nonce;\n\t}\n\n\t/** @param {string} content */\n\tadd_script(content) {\n\t\tif (!this.#script_needs_csp) return;\n\n\t\t/** @type {`nonce-${string}` | `sha256-${string}`} */\n\t\tconst source = this.#use_hashes ? `sha256-${sha256(content)}` : `nonce-${this.#nonce}`;\n\n\t\tif (this.#script_src_needs_csp) {\n\t\t\tthis.#script_src.push(source);\n\t\t}\n\n\t\tif (this.#script_src_elem_needs_csp) {\n\t\t\tthis.#script_src_elem.push(source);\n\t\t}\n\t}\n\n\t/** @param {string} content */\n\tadd_style(content) {\n\t\tif (!this.#style_needs_csp) return;\n\n\t\t/** @type {`nonce-${string}` | `sha256-${string}`} */\n\t\tconst source = this.#use_hashes ? `sha256-${sha256(content)}` : `nonce-${this.#nonce}`;\n\n\t\tif (this.#style_src_needs_csp) {\n\t\t\tthis.#style_src.push(source);\n\t\t}\n\n\t\tif (this.#style_src_attr_needs_csp) {\n\t\t\tthis.#style_src_attr.push(source);\n\t\t}\n\n\t\tif (this.#style_src_elem_needs_csp) {\n\t\t\t// this is the sha256 hash for the string \"/* empty */\"\n\t\t\t// adding it so that svelte does not break csp\n\t\t\t// see https://github.com/sveltejs/svelte/pull/7800\n\t\t\tconst sha256_empty_comment_hash = 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=';\n\t\t\tconst d = this.#directives;\n\n\t\t\tif (\n\t\t\t\td['style-src-elem'] &&\n\t\t\t\t!d['style-src-elem'].includes(sha256_empty_comment_hash) &&\n\t\t\t\t!this.#style_src_elem.includes(sha256_empty_comment_hash)\n\t\t\t) {\n\t\t\t\tthis.#style_src_elem.push(sha256_empty_comment_hash);\n\t\t\t}\n\n\t\t\tif (source !== sha256_empty_comment_hash) {\n\t\t\t\tthis.#style_src_elem.push(source);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {boolean} [is_meta]\n\t */\n\tget_header(is_meta = false) {\n\t\tconst header = [];\n\n\t\t// due to browser inconsistencies, we can't append sources to default-src\n\t\t// (specifically, Firefox appears to not ignore nonce-{nonce} directives\n\t\t// on default-src), so we ensure that script-src and style-src exist\n\n\t\tconst directives = { ...this.#directives };\n\n\t\tif (this.#style_src.length > 0) {\n\t\t\tdirectives['style-src'] = [\n\t\t\t\t...(directives['style-src'] || directives['default-src'] || []),\n\t\t\t\t...this.#style_src\n\t\t\t];\n\t\t}\n\n\t\tif (this.#style_src_attr.length > 0) {\n\t\t\tdirectives['style-src-attr'] = [\n\t\t\t\t...(directives['style-src-attr'] || []),\n\t\t\t\t...this.#style_src_attr\n\t\t\t];\n\t\t}\n\n\t\tif (this.#style_src_elem.length > 0) {\n\t\t\tdirectives['style-src-elem'] = [\n\t\t\t\t...(directives['style-src-elem'] || []),\n\t\t\t\t...this.#style_src_elem\n\t\t\t];\n\t\t}\n\n\t\tif (this.#script_src.length > 0) {\n\t\t\tdirectives['script-src'] = [\n\t\t\t\t...(directives['script-src'] || directives['default-src'] || []),\n\t\t\t\t...this.#script_src\n\t\t\t];\n\t\t}\n\n\t\tif (this.#script_src_elem.length > 0) {\n\t\t\tdirectives['script-src-elem'] = [\n\t\t\t\t...(directives['script-src-elem'] || []),\n\t\t\t\t...this.#script_src_elem\n\t\t\t];\n\t\t}\n\n\t\tfor (const key in directives) {\n\t\t\tif (is_meta && (key === 'frame-ancestors' || key === 'report-uri' || key === 'sandbox')) {\n\t\t\t\t// these values cannot be used with a <meta> tag\n\t\t\t\t// TODO warn?\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// @ts-expect-error gimme a break typescript, `key` is obviously a member of internal_directives\n\t\t\tconst value = /** @type {string[] | true} */ (directives[key]);\n\n\t\t\tif (!value) continue;\n\n\t\t\tconst directive = [key];\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\tvalue.forEach((value) => {\n\t\t\t\t\tif (quoted.has(value) || crypto_pattern.test(value)) {\n\t\t\t\t\t\tdirective.push(`'${value}'`);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdirective.push(value);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\theader.push(directive.join(' '));\n\t\t}\n\n\t\treturn header.join('; ');\n\t}\n}\n\nclass CspProvider extends BaseProvider {\n\tget_meta() {\n\t\tconst content = this.get_header(true);\n\n\t\tif (!content) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn `<meta http-equiv=\"content-security-policy\" content=\"${escape_html(content, true)}\">`;\n\t}\n}\n\nclass CspReportOnlyProvider extends BaseProvider {\n\t/**\n\t * @param {boolean} use_hashes\n\t * @param {import('types').CspDirectives} directives\n\t * @param {string} nonce\n\t */\n\tconstructor(use_hashes, directives, nonce) {\n\t\tsuper(use_hashes, directives, nonce);\n\n\t\tif (Object.values(directives).filter((v) => !!v).length > 0) {\n\t\t\t// If we're generating content-security-policy-report-only,\n\t\t\t// if there are any directives, we need a report-uri or report-to (or both)\n\t\t\t// else it's just an expensive noop.\n\t\t\tconst has_report_to = directives['report-to']?.length ?? 0 > 0;\n\t\t\tconst has_report_uri = directives['report-uri']?.length ?? 0 > 0;\n\t\t\tif (!has_report_to && !has_report_uri) {\n\t\t\t\tthrow Error(\n\t\t\t\t\t'`content-security-policy-report-only` must be specified with either the `report-to` or `report-uri` directives, or both'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class Csp {\n\t/** @readonly */\n\tnonce = generate_nonce();\n\n\t/** @type {CspProvider} */\n\tcsp_provider;\n\n\t/** @type {CspReportOnlyProvider} */\n\treport_only_provider;\n\n\t/**\n\t * @param {import('./types.js').CspConfig} config\n\t * @param {import('./types.js').CspOpts} opts\n\t */\n\tconstructor({ mode, directives, reportOnly }, { prerender }) {\n\t\tconst use_hashes = mode === 'hash' || (mode === 'auto' && prerender);\n\t\tthis.csp_provider = new CspProvider(use_hashes, directives, this.nonce);\n\t\tthis.report_only_provider = new CspReportOnlyProvider(use_hashes, reportOnly, this.nonce);\n\t}\n\n\tget script_needs_nonce() {\n\t\treturn this.csp_provider.script_needs_nonce || this.report_only_provider.script_needs_nonce;\n\t}\n\n\tget style_needs_nonce() {\n\t\treturn this.csp_provider.style_needs_nonce || this.report_only_provider.style_needs_nonce;\n\t}\n\n\t/** @param {string} content */\n\tadd_script(content) {\n\t\tthis.csp_provider.add_script(content);\n\t\tthis.report_only_provider.add_script(content);\n\t}\n\n\t/** @param {string} content */\n\tadd_style(content) {\n\t\tthis.csp_provider.add_style(content);\n\t\tthis.report_only_provider.add_style(content);\n\t}\n}\n","/**\n * @returns {import('types').Deferred & { promise: Promise<any> }}}\n */\nfunction defer() {\n\tlet fulfil;\n\tlet reject;\n\n\tconst promise = new Promise((f, r) => {\n\t\tfulfil = f;\n\t\treject = r;\n\t});\n\n\t// @ts-expect-error\n\treturn { promise, fulfil, reject };\n}\n\n/**\n * Create an async iterator and a function to push values into it\n * @returns {{\n *   iterator: AsyncIterable<any>;\n *   push: (value: any) => void;\n *   done: () => void;\n * }}\n */\nexport function create_async_iterator() {\n\tconst deferred = [defer()];\n\n\treturn {\n\t\titerator: {\n\t\t\t[Symbol.asyncIterator]() {\n\t\t\t\treturn {\n\t\t\t\t\tnext: async () => {\n\t\t\t\t\t\tconst next = await deferred[0].promise;\n\t\t\t\t\t\tif (!next.done) deferred.shift();\n\t\t\t\t\t\treturn next;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t},\n\t\tpush: (value) => {\n\t\t\tdeferred[deferred.length - 1].fulfil({\n\t\t\t\tvalue,\n\t\t\t\tdone: false\n\t\t\t});\n\t\t\tdeferred.push(defer());\n\t\t},\n\t\tdone: () => {\n\t\t\tdeferred[deferred.length - 1].fulfil({ done: true });\n\t\t}\n\t};\n}\n","import { BROWSER } from 'esm-env';\n\nconst param_pattern = /^(\\[)?(\\.\\.\\.)?(\\w+)(?:=(\\w+))?(\\])?$/;\n\n/**\n * Creates the regex pattern, extracts parameter names, and generates types for a route\n * @param {string} id\n */\nexport function parse_route_id(id) {\n\t/** @type {import('types').RouteParam[]} */\n\tconst params = [];\n\n\tconst pattern =\n\t\tid === '/'\n\t\t\t? /^\\/$/\n\t\t\t: new RegExp(\n\t\t\t\t\t`^${get_route_segments(id)\n\t\t\t\t\t\t.map((segment) => {\n\t\t\t\t\t\t\t// special case — /[...rest]/ could contain zero segments\n\t\t\t\t\t\t\tconst rest_match = /^\\[\\.\\.\\.(\\w+)(?:=(\\w+))?\\]$/.exec(segment);\n\t\t\t\t\t\t\tif (rest_match) {\n\t\t\t\t\t\t\t\tparams.push({\n\t\t\t\t\t\t\t\t\tname: rest_match[1],\n\t\t\t\t\t\t\t\t\tmatcher: rest_match[2],\n\t\t\t\t\t\t\t\t\toptional: false,\n\t\t\t\t\t\t\t\t\trest: true,\n\t\t\t\t\t\t\t\t\tchained: true\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\treturn '(?:/([^]*))?';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// special case — /[[optional]]/ could contain zero segments\n\t\t\t\t\t\t\tconst optional_match = /^\\[\\[(\\w+)(?:=(\\w+))?\\]\\]$/.exec(segment);\n\t\t\t\t\t\t\tif (optional_match) {\n\t\t\t\t\t\t\t\tparams.push({\n\t\t\t\t\t\t\t\t\tname: optional_match[1],\n\t\t\t\t\t\t\t\t\tmatcher: optional_match[2],\n\t\t\t\t\t\t\t\t\toptional: true,\n\t\t\t\t\t\t\t\t\trest: false,\n\t\t\t\t\t\t\t\t\tchained: true\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\treturn '(?:/([^/]+))?';\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (!segment) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst parts = segment.split(/\\[(.+?)\\](?!\\])/);\n\t\t\t\t\t\t\tconst result = parts\n\t\t\t\t\t\t\t\t.map((content, i) => {\n\t\t\t\t\t\t\t\t\tif (i % 2) {\n\t\t\t\t\t\t\t\t\t\tif (content.startsWith('x+')) {\n\t\t\t\t\t\t\t\t\t\t\treturn escape(String.fromCharCode(parseInt(content.slice(2), 16)));\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (content.startsWith('u+')) {\n\t\t\t\t\t\t\t\t\t\t\treturn escape(\n\t\t\t\t\t\t\t\t\t\t\t\tString.fromCharCode(\n\t\t\t\t\t\t\t\t\t\t\t\t\t...content\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.slice(2)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.split('-')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t.map((code) => parseInt(code, 16))\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// We know the match cannot be null in the browser because manifest generation\n\t\t\t\t\t\t\t\t\t\t// would have invoked this during build and failed if we hit an invalid\n\t\t\t\t\t\t\t\t\t\t// param/matcher name with non-alphanumeric character.\n\t\t\t\t\t\t\t\t\t\tconst match = /** @type {RegExpExecArray} */ (param_pattern.exec(content));\n\t\t\t\t\t\t\t\t\t\tif (!BROWSER && !match) {\n\t\t\t\t\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\t\t\t\t`Invalid param: ${content}. Params and matcher names can only have underscores and alphanumeric characters.`\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tconst [, is_optional, is_rest, name, matcher] = match;\n\t\t\t\t\t\t\t\t\t\t// It's assumed that the following invalid route id cases are already checked\n\t\t\t\t\t\t\t\t\t\t// - unbalanced brackets\n\t\t\t\t\t\t\t\t\t\t// - optional param following rest param\n\n\t\t\t\t\t\t\t\t\t\tparams.push({\n\t\t\t\t\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\t\t\t\t\tmatcher,\n\t\t\t\t\t\t\t\t\t\t\toptional: !!is_optional,\n\t\t\t\t\t\t\t\t\t\t\trest: !!is_rest,\n\t\t\t\t\t\t\t\t\t\t\tchained: is_rest ? i === 1 && parts[0] === '' : false\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\treturn is_rest ? '([^]*?)' : is_optional ? '([^/]*)?' : '([^/]+?)';\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturn escape(content);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.join('');\n\n\t\t\t\t\t\t\treturn '/' + result;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.join('')}/?$`\n\t\t\t\t);\n\n\treturn { pattern, params };\n}\n\nconst optional_param_regex = /\\/\\[\\[\\w+?(?:=\\w+)?\\]\\]/;\n\n/**\n * Removes optional params from a route ID.\n * @param {string} id\n * @returns The route id with optional params removed\n */\nexport function remove_optional_params(id) {\n\treturn id.replace(optional_param_regex, '');\n}\n\n/**\n * Returns `false` for `(group)` segments\n * @param {string} segment\n */\nfunction affects_path(segment) {\n\treturn segment !== '' && !/^\\([^)]+\\)$/.test(segment);\n}\n\n/**\n * Splits a route id into its segments, removing segments that\n * don't affect the path (i.e. groups). The root route is represented by `/`\n * and will be returned as `['']`.\n * @param {string} route\n * @returns string[]\n */\nexport function get_route_segments(route) {\n\treturn route.slice(1).split('/').filter(affects_path);\n}\n\n/**\n * @param {RegExpMatchArray} match\n * @param {import('types').RouteParam[]} params\n * @param {Record<string, import('@sveltejs/kit').ParamMatcher>} matchers\n */\nexport function exec(match, params, matchers) {\n\t/** @type {Record<string, string>} */\n\tconst result = {};\n\n\tconst values = match.slice(1);\n\tconst values_needing_match = values.filter((value) => value !== undefined);\n\n\tlet buffered = 0;\n\n\tfor (let i = 0; i < params.length; i += 1) {\n\t\tconst param = params[i];\n\t\tlet value = values[i - buffered];\n\n\t\t// in the `[[a=b]]/.../[...rest]` case, if one or more optional parameters\n\t\t// weren't matched, roll the skipped values into the rest\n\t\tif (param.chained && param.rest && buffered) {\n\t\t\tvalue = values\n\t\t\t\t.slice(i - buffered, i + 1)\n\t\t\t\t.filter((s) => s)\n\t\t\t\t.join('/');\n\n\t\t\tbuffered = 0;\n\t\t}\n\n\t\t// if `value` is undefined, it means this is an optional or rest parameter\n\t\tif (value === undefined) {\n\t\t\tif (param.rest) result[param.name] = '';\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!param.matcher || matchers[param.matcher](value)) {\n\t\t\tresult[param.name] = value;\n\n\t\t\t// Now that the params match, reset the buffer if the next param isn't the [...rest]\n\t\t\t// and the next value is defined, otherwise the buffer will cause us to skip values\n\t\t\tconst next_param = params[i + 1];\n\t\t\tconst next_value = values[i + 1];\n\t\t\tif (next_param && !next_param.rest && next_param.optional && next_value && param.chained) {\n\t\t\t\tbuffered = 0;\n\t\t\t}\n\n\t\t\t// There are no more params and no more values, but all non-empty values have been matched\n\t\t\tif (\n\t\t\t\t!next_param &&\n\t\t\t\t!next_value &&\n\t\t\t\tObject.keys(result).length === values_needing_match.length\n\t\t\t) {\n\t\t\t\tbuffered = 0;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\t// in the `/[[a=b]]/...` case, if the value didn't satisfy the matcher,\n\t\t// keep track of the number of skipped optional parameters and continue\n\t\tif (param.optional && param.chained) {\n\t\t\tbuffered++;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// otherwise, if the matcher returns `false`, the route did not match\n\t\treturn;\n\t}\n\n\tif (buffered) return;\n\treturn result;\n}\n\n/** @param {string} str */\nfunction escape(str) {\n\treturn (\n\t\tstr\n\t\t\t.normalize()\n\t\t\t// escape [ and ] before escaping other characters, since they are used in the replacements\n\t\t\t.replace(/[[\\]]/g, '\\\\$&')\n\t\t\t// replace %, /, ? and # with their encoded versions because decode_pathname leaves them untouched\n\t\t\t.replace(/%/g, '%25')\n\t\t\t.replace(/\\//g, '%2[Ff]')\n\t\t\t.replace(/\\?/g, '%3[Ff]')\n\t\t\t.replace(/#/g, '%23')\n\t\t\t// escape characters that have special meaning in regex\n\t\t\t.replace(/[.*+?^${}()|\\\\]/g, '\\\\$&')\n\t);\n}\n\nconst basic_param_pattern = /\\[(\\[)?(\\.\\.\\.)?(\\w+?)(?:=(\\w+))?\\]\\]?/g;\n\n/**\n * Populate a route ID with params to resolve a pathname.\n * @example\n * ```js\n * resolveRoute(\n *   `/blog/[slug]/[...somethingElse]`,\n *   {\n *     slug: 'hello-world',\n *     somethingElse: 'something/else'\n *   }\n * ); // `/blog/hello-world/something/else`\n * ```\n * @param {string} id\n * @param {Record<string, string | undefined>} params\n * @returns {string}\n */\nexport function resolve_route(id, params) {\n\tconst segments = get_route_segments(id);\n\treturn (\n\t\t'/' +\n\t\tsegments\n\t\t\t.map((segment) =>\n\t\t\t\tsegment.replace(basic_param_pattern, (_, optional, rest, name) => {\n\t\t\t\t\tconst param_value = params[name];\n\n\t\t\t\t\t// This is nested so TS correctly narrows the type\n\t\t\t\t\tif (!param_value) {\n\t\t\t\t\t\tif (optional) return '';\n\t\t\t\t\t\tif (rest && param_value !== undefined) return '';\n\t\t\t\t\t\tthrow new Error(`Missing parameter '${name}' in route ${id}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (param_value.startsWith('/') || param_value.endsWith('/'))\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`Parameter '${name}' in route ${id} cannot start or end with a slash -- this would cause an invalid route like foo//bar`\n\t\t\t\t\t\t);\n\t\t\t\t\treturn param_value;\n\t\t\t\t})\n\t\t\t)\n\t\t\t.filter(Boolean)\n\t\t\t.join('/')\n\t);\n}\n\n/**\n * @param {import('types').SSRNode} node\n * @returns {boolean}\n */\nexport function has_server_load(node) {\n\treturn node.server?.load !== undefined || node.server?.trailingSlash !== undefined;\n}\n","import { base, assets, relative } from '__sveltekit/paths';\nimport { text } from '@sveltejs/kit';\nimport { s } from '../../../utils/misc.js';\nimport { exec } from '../../../utils/routing.js';\nimport { decode_params } from '../../../utils/url.js';\nimport { get_relative_path } from '../../utils.js';\n\n/**\n * @param {import('types').SSRClientRoute} route\n * @param {URL} url\n * @param {import('@sveltejs/kit').SSRManifest} manifest\n * @returns {string}\n */\nexport function generate_route_object(route, url, manifest) {\n\tconst { errors, layouts, leaf } = route;\n\n\tconst nodes = [...errors, ...layouts.map((l) => l?.[1]), leaf[1]]\n\t\t.filter((n) => typeof n === 'number')\n\t\t.map((n) => `'${n}': () => ${create_client_import(manifest._.client.nodes?.[n], url)}`)\n\t\t.join(',\\n\\t\\t');\n\n\t// stringified version of\n\t/** @type {import('types').CSRRouteServer} */\n\treturn [\n\t\t`{\\n\\tid: ${s(route.id)}`,\n\t\t`errors: ${s(route.errors)}`,\n\t\t`layouts: ${s(route.layouts)}`,\n\t\t`leaf: ${s(route.leaf)}`,\n\t\t`nodes: {\\n\\t\\t${nodes}\\n\\t}\\n}`\n\t].join(',\\n\\t');\n}\n\n/**\n * @param {string | undefined} import_path\n * @param {URL} url\n */\nfunction create_client_import(import_path, url) {\n\tif (!import_path) return 'Promise.resolve({})';\n\n\t// During DEV, Vite will make the paths absolute (e.g. /@fs/...)\n\tif (import_path[0] === '/') {\n\t\treturn `import('${import_path}')`;\n\t}\n\n\t// During PROD, they're root-relative\n\tif (assets !== '') {\n\t\treturn `import('${assets}/${import_path}')`;\n\t}\n\n\tif (!relative) {\n\t\treturn `import('${base}/${import_path}')`;\n\t}\n\n\t// Else we make them relative to the server-side route resolution request\n\t// to support IPFS, the internet archive, etc.\n\tlet path = get_relative_path(url.pathname, `${base}/${import_path}`);\n\tif (path[0] !== '.') path = `./${path}`;\n\treturn `import('${path}')`;\n}\n\n/**\n * @param {string} resolved_path\n * @param {URL} url\n * @param {import('@sveltejs/kit').SSRManifest} manifest\n * @returns {Promise<Response>}\n */\nexport async function resolve_route(resolved_path, url, manifest) {\n\tif (!manifest._.client.routes) {\n\t\treturn text('Server-side route resolution disabled', { status: 400 });\n\t}\n\n\t/** @type {import('types').SSRClientRoute | null} */\n\tlet route = null;\n\t/** @type {Record<string, string>} */\n\tlet params = {};\n\n\tconst matchers = await manifest._.matchers();\n\n\tfor (const candidate of manifest._.client.routes) {\n\t\tconst match = candidate.pattern.exec(resolved_path);\n\t\tif (!match) continue;\n\n\t\tconst matched = exec(match, candidate.params, matchers);\n\t\tif (matched) {\n\t\t\troute = candidate;\n\t\t\tparams = decode_params(matched);\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn create_server_routing_response(route, params, url, manifest).response;\n}\n\n/**\n * @param {import('types').SSRClientRoute | null} route\n * @param {Partial<Record<string, string>>} params\n * @param {URL} url\n * @param {import('@sveltejs/kit').SSRManifest} manifest\n * @returns {{response: Response, body: string}}\n */\nexport function create_server_routing_response(route, params, url, manifest) {\n\tconst headers = new Headers({\n\t\t'content-type': 'application/javascript; charset=utf-8'\n\t});\n\n\tif (route) {\n\t\tconst csr_route = generate_route_object(route, url, manifest);\n\t\tconst body = `${create_css_import(route, url, manifest)}\\nexport const route = ${csr_route}; export const params = ${JSON.stringify(params)};`;\n\n\t\treturn { response: text(body, { headers }), body };\n\t} else {\n\t\treturn { response: text('', { headers }), body: '' };\n\t}\n}\n\n/**\n * This function generates the client-side import for the CSS files that are\n * associated with the current route. Vite takes care of that when using\n * client-side route resolution, but for server-side resolution it does\n * not know about the CSS files automatically.\n *\n * @param {import('types').SSRClientRoute} route\n * @param {URL} url\n * @param {import('@sveltejs/kit').SSRManifest} manifest\n * @returns {string}\n */\nfunction create_css_import(route, url, manifest) {\n\tconst { errors, layouts, leaf } = route;\n\n\tlet css = '';\n\n\tfor (const node of [...errors, ...layouts.map((l) => l?.[1]), leaf[1]]) {\n\t\tif (typeof node !== 'number') continue;\n\t\tconst node_css = manifest._.client.css?.[node];\n\t\tfor (const css_path of node_css ?? []) {\n\t\t\tcss += `'${assets || base}/${css_path}',`;\n\t\t}\n\t}\n\n\tif (!css) return '';\n\n\treturn `${create_client_import(/** @type {string} */ (manifest._.client.start), url)}.then(x => x.load_css([${css}]));`;\n}\n","import * as devalue from 'devalue';\nimport { readable, writable } from 'svelte/store';\nimport { DEV } from 'esm-env';\nimport { text } from '@sveltejs/kit';\nimport * as paths from '__sveltekit/paths';\nimport { hash } from '../../../utils/hash.js';\nimport { serialize_data } from './serialize_data.js';\nimport { s } from '../../../utils/misc.js';\nimport { Csp } from './csp.js';\nimport { uneval_action_response } from './actions.js';\nimport { clarify_devalue_error, handle_error_and_jsonify, serialize_uses } from '../utils.js';\nimport { public_env, safe_public_env } from '../../shared-server.js';\nimport { create_async_iterator } from '../../../utils/streaming.js';\nimport { SVELTE_KIT_ASSETS } from '../../../constants.js';\nimport { SCHEME } from '../../../utils/url.js';\nimport { create_server_routing_response, generate_route_object } from './server_routing.js';\nimport { add_resolution_suffix } from '../../pathname.js';\nimport { with_event } from '../../app/server/event.js';\nimport { get_event_state } from '../event-state.js';\nimport { text_encoder } from '../../utils.js';\n\n// TODO rename this function/module\n\nconst updated = {\n\t...readable(false),\n\tcheck: () => false\n};\n\n/**\n * Creates the HTML response.\n * @param {{\n *   branch: Array<import('./types.js').Loaded>;\n *   fetched: Array<import('./types.js').Fetched>;\n *   options: import('types').SSROptions;\n *   manifest: import('@sveltejs/kit').SSRManifest;\n *   state: import('types').SSRState;\n *   page_config: { ssr: boolean; csr: boolean };\n *   status: number;\n *   error: App.Error | null;\n *   event: import('@sveltejs/kit').RequestEvent;\n *   resolve_opts: import('types').RequiredResolveOptions;\n *   action_result?: import('@sveltejs/kit').ActionResult;\n * }} opts\n */\nexport async function render_response({\n\tbranch,\n\tfetched,\n\toptions,\n\tmanifest,\n\tstate,\n\tpage_config,\n\tstatus,\n\terror = null,\n\tevent,\n\tresolve_opts,\n\taction_result\n}) {\n\tif (state.prerendering) {\n\t\tif (options.csp.mode === 'nonce') {\n\t\t\tthrow new Error('Cannot use prerendering if config.kit.csp.mode === \"nonce\"');\n\t\t}\n\n\t\tif (options.app_template_contains_nonce) {\n\t\t\tthrow new Error('Cannot use prerendering if page template contains %sveltekit.nonce%');\n\t\t}\n\t}\n\n\tconst { client } = manifest._;\n\n\tconst modulepreloads = new Set(client.imports);\n\tconst stylesheets = new Set(client.stylesheets);\n\tconst fonts = new Set(client.fonts);\n\n\t/** @type {Set<string>} */\n\tconst link_header_preloads = new Set();\n\n\t/** @type {Map<string, string>} */\n\t// TODO if we add a client entry point one day, we will need to include inline_styles with the entry, otherwise stylesheets will be linked even if they are below inlineStyleThreshold\n\tconst inline_styles = new Map();\n\n\tlet rendered;\n\n\tconst form_value =\n\t\taction_result?.type === 'success' || action_result?.type === 'failure'\n\t\t\t? (action_result.data ?? null)\n\t\t\t: null;\n\n\t/** @type {string} */\n\tlet base = paths.base;\n\n\t/** @type {string} */\n\tlet assets = paths.assets;\n\n\t/**\n\t * An expression that will evaluate in the client to determine the resolved base path.\n\t * We use a relative path when possible to support IPFS, the internet archive, etc.\n\t */\n\tlet base_expression = s(paths.base);\n\n\t// if appropriate, use relative paths for greater portability\n\tif (paths.relative) {\n\t\tif (!state.prerendering?.fallback) {\n\t\t\tconst segments = event.url.pathname.slice(paths.base.length).split('/').slice(2);\n\n\t\t\tbase = segments.map(() => '..').join('/') || '.';\n\n\t\t\t// resolve e.g. '../..' against current location, then remove trailing slash\n\t\t\tbase_expression = `new URL(${s(base)}, location).pathname.slice(0, -1)`;\n\n\t\t\tif (!paths.assets || (paths.assets[0] === '/' && paths.assets !== SVELTE_KIT_ASSETS)) {\n\t\t\t\tassets = base;\n\t\t\t}\n\t\t} else if (options.hash_routing) {\n\t\t\t// we have to assume that we're in the right place\n\t\t\tbase_expression = \"new URL('.', location).pathname.slice(0, -1)\";\n\t\t}\n\t}\n\n\tif (page_config.ssr) {\n\t\t/** @type {Record<string, any>} */\n\t\tconst props = {\n\t\t\tstores: {\n\t\t\t\tpage: writable(null),\n\t\t\t\tnavigating: writable(null),\n\t\t\t\tupdated\n\t\t\t},\n\t\t\tconstructors: await Promise.all(\n\t\t\t\tbranch.map(({ node }) => {\n\t\t\t\t\tif (!node.component) {\n\t\t\t\t\t\t// Can only be the leaf, layouts have a fallback component generated\n\t\t\t\t\t\tthrow new Error(`Missing +page.svelte component for route ${event.route.id}`);\n\t\t\t\t\t}\n\t\t\t\t\treturn node.component();\n\t\t\t\t})\n\t\t\t),\n\t\t\tform: form_value\n\t\t};\n\n\t\tlet data = {};\n\n\t\t// props_n (instead of props[n]) makes it easy to avoid\n\t\t// unnecessary updates for layout components\n\t\tfor (let i = 0; i < branch.length; i += 1) {\n\t\t\tdata = { ...data, ...branch[i].data };\n\t\t\tprops[`data_${i}`] = data;\n\t\t}\n\n\t\tprops.page = {\n\t\t\terror,\n\t\t\tparams: /** @type {Record<string, any>} */ (event.params),\n\t\t\troute: event.route,\n\t\t\tstatus,\n\t\t\turl: event.url,\n\t\t\tdata,\n\t\t\tform: form_value,\n\t\t\tstate: {}\n\t\t};\n\n\t\t// use relative paths during rendering, so that the resulting HTML is as\n\t\t// portable as possible, but reset afterwards\n\t\tif (paths.relative) paths.override({ base, assets });\n\n\t\tconst render_opts = {\n\t\t\tcontext: new Map([\n\t\t\t\t[\n\t\t\t\t\t'__request__',\n\t\t\t\t\t{\n\t\t\t\t\t\tpage: props.page\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t])\n\t\t};\n\n\t\tif (__SVELTEKIT_DEV__) {\n\t\t\tconst fetch = globalThis.fetch;\n\t\t\tlet warned = false;\n\t\t\tglobalThis.fetch = (info, init) => {\n\t\t\t\tif (typeof info === 'string' && !SCHEME.test(info)) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Cannot call \\`fetch\\` eagerly during server-side rendering with relative URL (${info}) — put your \\`fetch\\` calls inside \\`onMount\\` or a \\`load\\` function instead`\n\t\t\t\t\t);\n\t\t\t\t} else if (!warned) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t'Avoid calling `fetch` eagerly during server-side rendering — put your `fetch` calls inside `onMount` or a `load` function instead'\n\t\t\t\t\t);\n\t\t\t\t\twarned = true;\n\t\t\t\t}\n\n\t\t\t\treturn fetch(info, init);\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\trendered = with_event(event, () => options.root.render(props, render_opts));\n\t\t\t} finally {\n\t\t\t\tglobalThis.fetch = fetch;\n\t\t\t\tpaths.reset();\n\t\t\t}\n\t\t} else {\n\t\t\ttry {\n\t\t\t\trendered = with_event(event, () => options.root.render(props, render_opts));\n\t\t\t} finally {\n\t\t\t\tpaths.reset();\n\t\t\t}\n\t\t}\n\n\t\tfor (const { node } of branch) {\n\t\t\tfor (const url of node.imports) modulepreloads.add(url);\n\t\t\tfor (const url of node.stylesheets) stylesheets.add(url);\n\t\t\tfor (const url of node.fonts) fonts.add(url);\n\n\t\t\tif (node.inline_styles && !client.inline) {\n\t\t\t\tObject.entries(await node.inline_styles()).forEach(([k, v]) => inline_styles.set(k, v));\n\t\t\t}\n\t\t}\n\t} else {\n\t\trendered = { head: '', html: '', css: { code: '', map: null } };\n\t}\n\n\tlet head = '';\n\tlet body = rendered.html;\n\n\tconst csp = new Csp(options.csp, {\n\t\tprerender: !!state.prerendering\n\t});\n\n\t/** @param {string} path */\n\tconst prefixed = (path) => {\n\t\tif (path.startsWith('/')) {\n\t\t\t// Vite makes the start script available through the base path and without it.\n\t\t\t// We load it via the base path in order to support remote IDE environments which proxy\n\t\t\t// all URLs under the base path during development.\n\t\t\treturn paths.base + path;\n\t\t}\n\t\treturn `${assets}/${path}`;\n\t};\n\n\t// inline styles can come from `bundleStrategy: 'inline'` or `inlineStyleThreshold`\n\tconst style = client.inline\n\t\t? client.inline?.style\n\t\t: Array.from(inline_styles.values()).join('\\n');\n\n\tif (style) {\n\t\tconst attributes = __SVELTEKIT_DEV__ ? [' data-sveltekit'] : [];\n\t\tif (csp.style_needs_nonce) attributes.push(` nonce=\"${csp.nonce}\"`);\n\n\t\tcsp.add_style(style);\n\n\t\thead += `\\n\\t<style${attributes.join('')}>${style}</style>`;\n\t}\n\n\tfor (const dep of stylesheets) {\n\t\tconst path = prefixed(dep);\n\n\t\tconst attributes = ['rel=\"stylesheet\"'];\n\n\t\tif (inline_styles.has(dep)) {\n\t\t\t// don't load stylesheets that are already inlined\n\t\t\t// include them in disabled state so that Vite can detect them and doesn't try to add them\n\t\t\tattributes.push('disabled', 'media=\"(max-width: 0)\"');\n\t\t} else {\n\t\t\tif (resolve_opts.preload({ type: 'css', path })) {\n\t\t\t\tconst preload_atts = ['rel=\"preload\"', 'as=\"style\"'];\n\t\t\t\tlink_header_preloads.add(`<${encodeURI(path)}>; ${preload_atts.join(';')}; nopush`);\n\t\t\t}\n\t\t}\n\n\t\thead += `\\n\\t\\t<link href=\"${path}\" ${attributes.join(' ')}>`;\n\t}\n\n\tfor (const dep of fonts) {\n\t\tconst path = prefixed(dep);\n\n\t\tif (resolve_opts.preload({ type: 'font', path })) {\n\t\t\tconst ext = dep.slice(dep.lastIndexOf('.') + 1);\n\t\t\tconst attributes = [\n\t\t\t\t'rel=\"preload\"',\n\t\t\t\t'as=\"font\"',\n\t\t\t\t`type=\"font/${ext}\"`,\n\t\t\t\t`href=\"${path}\"`,\n\t\t\t\t'crossorigin'\n\t\t\t];\n\n\t\t\thead += `\\n\\t\\t<link ${attributes.join(' ')}>`;\n\t\t}\n\t}\n\n\tconst global = __SVELTEKIT_DEV__ ? '__sveltekit_dev' : `__sveltekit_${options.version_hash}`;\n\n\tconst { data, chunks } = get_data(\n\t\tevent,\n\t\toptions,\n\t\tbranch.map((b) => b.server_data),\n\t\tcsp,\n\t\tglobal\n\t);\n\n\tif (page_config.ssr && page_config.csr) {\n\t\tbody += `\\n\\t\\t\\t${fetched\n\t\t\t.map((item) =>\n\t\t\t\tserialize_data(item, resolve_opts.filterSerializedResponseHeaders, !!state.prerendering)\n\t\t\t)\n\t\t\t.join('\\n\\t\\t\\t')}`;\n\t}\n\n\tif (page_config.csr) {\n\t\tconst route = manifest._.client.routes?.find((r) => r.id === event.route.id) ?? null;\n\n\t\tif (client.uses_env_dynamic_public && state.prerendering) {\n\t\t\tmodulepreloads.add(`${paths.app_dir}/env.js`);\n\t\t}\n\n\t\tif (!client.inline) {\n\t\t\tconst included_modulepreloads = Array.from(modulepreloads, (dep) => prefixed(dep)).filter(\n\t\t\t\t(path) => resolve_opts.preload({ type: 'js', path })\n\t\t\t);\n\n\t\t\tfor (const path of included_modulepreloads) {\n\t\t\t\t// see the kit.output.preloadStrategy option for details on why we have multiple options here\n\t\t\t\tlink_header_preloads.add(`<${encodeURI(path)}>; rel=\"modulepreload\"; nopush`);\n\t\t\t\tif (options.preload_strategy !== 'modulepreload') {\n\t\t\t\t\thead += `\\n\\t\\t<link rel=\"preload\" as=\"script\" crossorigin=\"anonymous\" href=\"${path}\">`;\n\t\t\t\t} else if (state.prerendering) {\n\t\t\t\t\thead += `\\n\\t\\t<link rel=\"modulepreload\" href=\"${path}\">`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// prerender a `/path/to/page/__route.js` module\n\t\tif (manifest._.client.routes && state.prerendering && !state.prerendering.fallback) {\n\t\t\tconst pathname = add_resolution_suffix(event.url.pathname);\n\n\t\t\tstate.prerendering.dependencies.set(\n\t\t\t\tpathname,\n\t\t\t\tcreate_server_routing_response(route, event.params, new URL(pathname, event.url), manifest)\n\t\t\t);\n\t\t}\n\n\t\tconst blocks = [];\n\n\t\t// when serving a prerendered page in an app that uses $env/dynamic/public, we must\n\t\t// import the env.js module so that it evaluates before any user code can evaluate.\n\t\t// TODO revert to using top-level await once https://bugs.webkit.org/show_bug.cgi?id=242740 is fixed\n\t\t// https://github.com/sveltejs/kit/pull/11601\n\t\tconst load_env_eagerly = client.uses_env_dynamic_public && state.prerendering;\n\n\t\tconst properties = [`base: ${base_expression}`];\n\n\t\tif (paths.assets) {\n\t\t\tproperties.push(`assets: ${s(paths.assets)}`);\n\t\t}\n\n\t\tif (client.uses_env_dynamic_public) {\n\t\t\tproperties.push(`env: ${load_env_eagerly ? 'null' : s(public_env)}`);\n\t\t}\n\n\t\tif (chunks) {\n\t\t\tblocks.push('const deferred = new Map();');\n\n\t\t\tproperties.push(`defer: (id) => new Promise((fulfil, reject) => {\n\t\t\t\t\t\t\tdeferred.set(id, { fulfil, reject });\n\t\t\t\t\t\t})`);\n\n\t\t\t// When resolving, the id might not yet be available due to the data\n\t\t\t// be evaluated upon init of kit, so we use a timeout to retry\n\t\t\tproperties.push(`resolve: ({ id, data, error }) => {\n\t\t\t\t\t\t\tconst try_to_resolve = () => {\n\t\t\t\t\t\t\t\tif (!deferred.has(id)) {\n\t\t\t\t\t\t\t\t\tsetTimeout(try_to_resolve, 0);\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconst { fulfil, reject } = deferred.get(id);\n\t\t\t\t\t\t\t\tdeferred.delete(id);\n\t\t\t\t\t\t\t\tif (error) reject(error);\n\t\t\t\t\t\t\t\telse fulfil(data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttry_to_resolve();\n\t\t\t\t\t\t}`);\n\t\t}\n\n\t\tconst { remote_data } = get_event_state(event);\n\n\t\tif (remote_data) {\n\t\t\t/** @type {Record<string, any>} */\n\t\t\tconst remote = {};\n\n\t\t\tfor (const key in remote_data) {\n\t\t\t\tremote[key] = await remote_data[key];\n\t\t\t}\n\n\t\t\t// TODO this is repeated in a few places — dedupe it\n\t\t\tconst replacer = (/** @type {any} */ thing) => {\n\t\t\t\tfor (const key in options.hooks.transport) {\n\t\t\t\t\tconst encoded = options.hooks.transport[key].encode(thing);\n\t\t\t\t\tif (encoded) {\n\t\t\t\t\t\treturn `app.decode('${key}', ${devalue.uneval(encoded, replacer)})`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tproperties.push(`data: ${devalue.uneval(remote, replacer)}`);\n\t\t}\n\n\t\t// create this before declaring `data`, which may contain references to `${global}`\n\t\tblocks.push(`${global} = {\n\t\t\t\t\t\t${properties.join(',\\n\\t\\t\\t\\t\\t\\t')}\n\t\t\t\t\t};`);\n\n\t\tconst args = ['element'];\n\n\t\tblocks.push('const element = document.currentScript.parentElement;');\n\n\t\tif (page_config.ssr) {\n\t\t\tconst serialized = { form: 'null', error: 'null' };\n\n\t\t\tif (form_value) {\n\t\t\t\tserialized.form = uneval_action_response(\n\t\t\t\t\tform_value,\n\t\t\t\t\t/** @type {string} */ (event.route.id),\n\t\t\t\t\toptions.hooks.transport\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (error) {\n\t\t\t\tserialized.error = devalue.uneval(error);\n\t\t\t}\n\n\t\t\tconst hydrate = [\n\t\t\t\t`node_ids: [${branch.map(({ node }) => node.index).join(', ')}]`,\n\t\t\t\t`data: ${data}`,\n\t\t\t\t`form: ${serialized.form}`,\n\t\t\t\t`error: ${serialized.error}`\n\t\t\t];\n\n\t\t\tif (status !== 200) {\n\t\t\t\thydrate.push(`status: ${status}`);\n\t\t\t}\n\n\t\t\tif (manifest._.client.routes) {\n\t\t\t\tif (route) {\n\t\t\t\t\tconst stringified = generate_route_object(route, event.url, manifest).replaceAll(\n\t\t\t\t\t\t'\\n',\n\t\t\t\t\t\t'\\n\\t\\t\\t\\t\\t\\t\\t'\n\t\t\t\t\t); // make output after it's put together with the rest more readable\n\t\t\t\t\thydrate.push(`params: ${devalue.uneval(event.params)}`, `server_route: ${stringified}`);\n\t\t\t\t}\n\t\t\t} else if (options.embedded) {\n\t\t\t\thydrate.push(`params: ${devalue.uneval(event.params)}`, `route: ${s(event.route)}`);\n\t\t\t}\n\n\t\t\tconst indent = '\\t'.repeat(load_env_eagerly ? 7 : 6);\n\t\t\targs.push(`{\\n${indent}\\t${hydrate.join(`,\\n${indent}\\t`)}\\n${indent}}`);\n\t\t}\n\n\t\t// `client.app` is a proxy for `bundleStrategy === 'split'`\n\t\tconst boot = client.inline\n\t\t\t? `${client.inline.script}\n\n\t\t\t\t\t__sveltekit_${options.version_hash}.app.start(${args.join(', ')});`\n\t\t\t: client.app\n\t\t\t\t? `Promise.all([\n\t\t\t\t\t\timport(${s(prefixed(client.start))}),\n\t\t\t\t\t\timport(${s(prefixed(client.app))})\n\t\t\t\t\t]).then(([kit, app]) => {\n\t\t\t\t\t\tkit.start(app, ${args.join(', ')});\n\t\t\t\t\t});`\n\t\t\t\t: `import(${s(prefixed(client.start))}).then((app) => {\n\t\t\t\t\t\tapp.start(${args.join(', ')})\n\t\t\t\t\t});`;\n\n\t\tif (load_env_eagerly) {\n\t\t\tblocks.push(`import(${s(`${base}/${paths.app_dir}/env.js`)}).then(({ env }) => {\n\t\t\t\t\t\t${global}.env = env;\n\n\t\t\t\t\t\t${boot.replace(/\\n/g, '\\n\\t')}\n\t\t\t\t\t});`);\n\t\t} else {\n\t\t\tblocks.push(boot);\n\t\t}\n\n\t\tif (options.service_worker) {\n\t\t\tlet opts = __SVELTEKIT_DEV__ ? \", { type: 'module' }\" : '';\n\t\t\tif (options.service_worker_options != null) {\n\t\t\t\tconst service_worker_options = { ...options.service_worker_options };\n\t\t\t\tif (__SVELTEKIT_DEV__) {\n\t\t\t\t\tservice_worker_options.type = 'module';\n\t\t\t\t}\n\t\t\t\topts = `, ${s(service_worker_options)}`;\n\t\t\t}\n\n\t\t\t// we use an anonymous function instead of an arrow function to support\n\t\t\t// older browsers (https://github.com/sveltejs/kit/pull/5417)\n\t\t\tblocks.push(`if ('serviceWorker' in navigator) {\n\t\t\t\t\t\taddEventListener('load', function () {\n\t\t\t\t\t\t\tnavigator.serviceWorker.register('${prefixed('service-worker.js')}'${opts});\n\t\t\t\t\t\t});\n\t\t\t\t\t}`);\n\t\t}\n\n\t\tconst init_app = `\n\t\t\t\t{\n\t\t\t\t\t${blocks.join('\\n\\n\\t\\t\\t\\t\\t')}\n\t\t\t\t}\n\t\t\t`;\n\t\tcsp.add_script(init_app);\n\n\t\tbody += `\\n\\t\\t\\t<script${\n\t\t\tcsp.script_needs_nonce ? ` nonce=\"${csp.nonce}\"` : ''\n\t\t}>${init_app}</script>\\n\\t\\t`;\n\t}\n\n\tconst headers = new Headers({\n\t\t'x-sveltekit-page': 'true',\n\t\t'content-type': 'text/html'\n\t});\n\n\tif (state.prerendering) {\n\t\t// TODO read headers set with setHeaders and convert into http-equiv where possible\n\t\tconst http_equiv = [];\n\n\t\tconst csp_headers = csp.csp_provider.get_meta();\n\t\tif (csp_headers) {\n\t\t\thttp_equiv.push(csp_headers);\n\t\t}\n\n\t\tif (state.prerendering.cache) {\n\t\t\thttp_equiv.push(`<meta http-equiv=\"cache-control\" content=\"${state.prerendering.cache}\">`);\n\t\t}\n\n\t\tif (http_equiv.length > 0) {\n\t\t\thead = http_equiv.join('\\n') + head;\n\t\t}\n\t} else {\n\t\tconst csp_header = csp.csp_provider.get_header();\n\t\tif (csp_header) {\n\t\t\theaders.set('content-security-policy', csp_header);\n\t\t}\n\t\tconst report_only_header = csp.report_only_provider.get_header();\n\t\tif (report_only_header) {\n\t\t\theaders.set('content-security-policy-report-only', report_only_header);\n\t\t}\n\n\t\tif (link_header_preloads.size) {\n\t\t\theaders.set('link', Array.from(link_header_preloads).join(', '));\n\t\t}\n\t}\n\n\t// add the content after the script/css links so the link elements are parsed first\n\thead += rendered.head;\n\n\tconst html = options.templates.app({\n\t\thead,\n\t\tbody,\n\t\tassets,\n\t\tnonce: /** @type {string} */ (csp.nonce),\n\t\tenv: safe_public_env\n\t});\n\n\t// TODO flush chunks as early as we can\n\tconst transformed =\n\t\t(await resolve_opts.transformPageChunk({\n\t\t\thtml,\n\t\t\tdone: true\n\t\t})) || '';\n\n\tif (!chunks) {\n\t\theaders.set('etag', `\"${hash(transformed)}\"`);\n\t}\n\n\tif (DEV) {\n\t\tif (page_config.csr) {\n\t\t\tif (transformed.split('<!--').length < html.split('<!--').length) {\n\t\t\t\t// the \\u001B stuff is ANSI codes, so that we don't need to add a library to the runtime\n\t\t\t\t// https://svelte.dev/playground/1b3f49696f0c44c881c34587f2537aa2?version=4.2.19\n\t\t\t\tconsole.warn(\n\t\t\t\t\t\"\\u001B[1m\\u001B[31mRemoving comments in transformPageChunk can break Svelte's hydration\\u001B[39m\\u001B[22m\"\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tif (chunks) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'\\u001B[1m\\u001B[31mReturning promises from server `load` functions will only work if `csr === true`\\u001B[39m\\u001B[22m'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn !chunks\n\t\t? text(transformed, {\n\t\t\t\tstatus,\n\t\t\t\theaders\n\t\t\t})\n\t\t: new Response(\n\t\t\t\tnew ReadableStream({\n\t\t\t\t\tasync start(controller) {\n\t\t\t\t\t\tcontroller.enqueue(text_encoder.encode(transformed + '\\n'));\n\t\t\t\t\t\tfor await (const chunk of chunks) {\n\t\t\t\t\t\t\tcontroller.enqueue(text_encoder.encode(chunk));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcontroller.close();\n\t\t\t\t\t},\n\n\t\t\t\t\ttype: 'bytes'\n\t\t\t\t}),\n\t\t\t\t{\n\t\t\t\t\theaders\n\t\t\t\t}\n\t\t\t);\n}\n\n/**\n * If the serialized data contains promises, `chunks` will be an\n * async iterable containing their resolutions\n * @param {import('@sveltejs/kit').RequestEvent} event\n * @param {import('types').SSROptions} options\n * @param {Array<import('types').ServerDataNode | null>} nodes\n * @param {import('./csp.js').Csp} csp\n * @param {string} global\n * @returns {{ data: string, chunks: AsyncIterable<string> | null }}\n */\nfunction get_data(event, options, nodes, csp, global) {\n\tlet promise_id = 1;\n\tlet count = 0;\n\n\tconst { iterator, push, done } = create_async_iterator();\n\n\t/** @param {any} thing */\n\tfunction replacer(thing) {\n\t\tif (typeof thing?.then === 'function') {\n\t\t\tconst id = promise_id++;\n\t\t\tcount += 1;\n\n\t\t\tthing\n\t\t\t\t.then(/** @param {any} data */ (data) => ({ data }))\n\t\t\t\t.catch(\n\t\t\t\t\t/** @param {any} error */ async (error) => ({\n\t\t\t\t\t\terror: await handle_error_and_jsonify(event, options, error)\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\t.then(\n\t\t\t\t\t/**\n\t\t\t\t\t * @param {{data: any; error: any}} result\n\t\t\t\t\t */\n\t\t\t\t\tasync ({ data, error }) => {\n\t\t\t\t\t\tcount -= 1;\n\n\t\t\t\t\t\tlet str;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tstr = devalue.uneval({ id, data, error }, replacer);\n\t\t\t\t\t\t} catch {\n\t\t\t\t\t\t\terror = await handle_error_and_jsonify(\n\t\t\t\t\t\t\t\tevent,\n\t\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\t\tnew Error(`Failed to serialize promise while rendering ${event.route.id}`)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdata = undefined;\n\t\t\t\t\t\t\tstr = devalue.uneval({ id, data, error }, replacer);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst nonce = csp.script_needs_nonce ? ` nonce=\"${csp.nonce}\"` : '';\n\t\t\t\t\t\tpush(`<script${nonce}>${global}.resolve(${str})</script>\\n`);\n\t\t\t\t\t\tif (count === 0) done();\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\treturn `${global}.defer(${id})`;\n\t\t} else {\n\t\t\tfor (const key in options.hooks.transport) {\n\t\t\t\tconst encoded = options.hooks.transport[key].encode(thing);\n\t\t\t\tif (encoded) {\n\t\t\t\t\treturn `app.decode('${key}', ${devalue.uneval(encoded, replacer)})`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\ttry {\n\t\tconst strings = nodes.map((node) => {\n\t\t\tif (!node) return 'null';\n\n\t\t\t/** @type {any} */\n\t\t\tconst payload = { type: 'data', data: node.data, uses: serialize_uses(node) };\n\t\t\tif (node.slash) payload.slash = node.slash;\n\n\t\t\treturn devalue.uneval(payload, replacer);\n\t\t});\n\n\t\treturn {\n\t\t\tdata: `[${strings.join(',')}]`,\n\t\t\tchunks: count > 0 ? iterator : null\n\t\t};\n\t} catch (e) {\n\t\t// @ts-expect-error\n\t\te.path = e.path.slice(1);\n\t\tthrow new Error(clarify_devalue_error(event, /** @type {any} */ (e)));\n\t}\n}\n","import {\n\tvalidate_layout_exports,\n\tvalidate_layout_server_exports,\n\tvalidate_page_exports,\n\tvalidate_page_server_exports\n} from './exports.js';\n\nexport class PageNodes {\n\tdata;\n\n\t/**\n\t * @param {Array<import('types').SSRNode | undefined>} nodes\n\t */\n\tconstructor(nodes) {\n\t\tthis.data = nodes;\n\t}\n\n\tlayouts() {\n\t\treturn this.data.slice(0, -1);\n\t}\n\n\tpage() {\n\t\treturn this.data.at(-1);\n\t}\n\n\tvalidate() {\n\t\tfor (const layout of this.layouts()) {\n\t\t\tif (layout) {\n\t\t\t\tvalidate_layout_server_exports(layout.server, /** @type {string} */ (layout.server_id));\n\t\t\t\tvalidate_layout_exports(layout.universal, /** @type {string} */ (layout.universal_id));\n\t\t\t}\n\t\t}\n\n\t\tconst page = this.page();\n\t\tif (page) {\n\t\t\tvalidate_page_server_exports(page.server, /** @type {string} */ (page.server_id));\n\t\t\tvalidate_page_exports(page.universal, /** @type {string} */ (page.universal_id));\n\t\t}\n\t}\n\n\t/**\n\t * @template {'prerender' | 'ssr' | 'csr' | 'trailingSlash'} Option\n\t * @param {Option} option\n\t * @returns {Value | undefined}\n\t */\n\t#get_option(option) {\n\t\t/** @typedef {(import('types').UniversalNode | import('types').ServerNode)[Option]} Value */\n\n\t\treturn this.data.reduce((value, node) => {\n\t\t\treturn node?.universal?.[option] ?? node?.server?.[option] ?? value;\n\t\t}, /** @type {Value | undefined} */ (undefined));\n\t}\n\n\tcsr() {\n\t\treturn this.#get_option('csr') ?? true;\n\t}\n\n\tssr() {\n\t\treturn this.#get_option('ssr') ?? true;\n\t}\n\n\tprerender() {\n\t\treturn this.#get_option('prerender') ?? false;\n\t}\n\n\ttrailing_slash() {\n\t\treturn this.#get_option('trailingSlash') ?? 'never';\n\t}\n\n\tget_config() {\n\t\t/** @type {any} */\n\t\tlet current = {};\n\n\t\tfor (const node of this.data) {\n\t\t\tif (!node?.universal?.config && !node?.server?.config) continue;\n\n\t\t\tcurrent = {\n\t\t\t\t...current,\n\t\t\t\t// TODO: should we override the server config value with the universal value similar to other page options?\n\t\t\t\t...node?.universal?.config,\n\t\t\t\t...node?.server?.config\n\t\t\t};\n\t\t}\n\n\t\t// TODO 3.0 always return `current`? then we can get rid of `?? {}` in other places\n\t\treturn Object.keys(current).length ? current : undefined;\n\t}\n\n\tshould_prerender_data() {\n\t\treturn this.data.some(\n\t\t\t// prerender in case of trailingSlash because the client retrieves that value from the server\n\t\t\t(node) => node?.server?.load || node?.server?.trailingSlash !== undefined\n\t\t);\n\t}\n}\n","import { Redirect } from '@sveltejs/kit/internal';\nimport { render_response } from './render.js';\nimport { load_data, load_server_data } from './load_data.js';\nimport { handle_error_and_jsonify, static_error_page, redirect_response } from '../utils.js';\nimport { get_status } from '../../../utils/error.js';\nimport { PageNodes } from '../../../utils/page_nodes.js';\n\n/**\n * @typedef {import('./types.js').Loaded} Loaded\n */\n\n/**\n * @param {{\n *   event: import('@sveltejs/kit').RequestEvent;\n *   options: import('types').SSROptions;\n *   manifest: import('@sveltejs/kit').SSRManifest;\n *   state: import('types').SSRState;\n *   status: number;\n *   error: unknown;\n *   resolve_opts: import('types').RequiredResolveOptions;\n * }} opts\n */\nexport async function respond_with_error({\n\tevent,\n\toptions,\n\tmanifest,\n\tstate,\n\tstatus,\n\terror,\n\tresolve_opts\n}) {\n\t// reroute to the fallback page to prevent an infinite chain of requests.\n\tif (event.request.headers.get('x-sveltekit-error')) {\n\t\treturn static_error_page(options, status, /** @type {Error} */ (error).message);\n\t}\n\n\t/** @type {import('./types.js').Fetched[]} */\n\tconst fetched = [];\n\n\ttry {\n\t\tconst branch = [];\n\t\tconst default_layout = await manifest._.nodes[0](); // 0 is always the root layout\n\t\tconst nodes = new PageNodes([default_layout]);\n\t\tconst ssr = nodes.ssr();\n\t\tconst csr = nodes.csr();\n\n\t\tif (ssr) {\n\t\t\tstate.error = true;\n\n\t\t\tconst server_data_promise = load_server_data({\n\t\t\t\tevent,\n\t\t\t\tstate,\n\t\t\t\tnode: default_layout,\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/require-await\n\t\t\t\tparent: async () => ({})\n\t\t\t});\n\n\t\t\tconst server_data = await server_data_promise;\n\n\t\t\tconst data = await load_data({\n\t\t\t\tevent,\n\t\t\t\tfetched,\n\t\t\t\tnode: default_layout,\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/require-await\n\t\t\t\tparent: async () => ({}),\n\t\t\t\tresolve_opts,\n\t\t\t\tserver_data_promise,\n\t\t\t\tstate,\n\t\t\t\tcsr\n\t\t\t});\n\n\t\t\tbranch.push(\n\t\t\t\t{\n\t\t\t\t\tnode: default_layout,\n\t\t\t\t\tserver_data,\n\t\t\t\t\tdata\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tnode: await manifest._.nodes[1](), // 1 is always the root error\n\t\t\t\t\tdata: null,\n\t\t\t\t\tserver_data: null\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\treturn await render_response({\n\t\t\toptions,\n\t\t\tmanifest,\n\t\t\tstate,\n\t\t\tpage_config: {\n\t\t\t\tssr,\n\t\t\t\tcsr\n\t\t\t},\n\t\t\tstatus,\n\t\t\terror: await handle_error_and_jsonify(event, options, error),\n\t\t\tbranch,\n\t\t\tfetched,\n\t\t\tevent,\n\t\t\tresolve_opts\n\t\t});\n\t} catch (e) {\n\t\t// Edge case: If route is a 404 and the user redirects to somewhere from the root layout,\n\t\t// we end up here.\n\t\tif (e instanceof Redirect) {\n\t\t\treturn redirect_response(e.status, e.location);\n\t\t}\n\n\t\treturn static_error_page(\n\t\t\toptions,\n\t\t\tget_status(e),\n\t\t\t(await handle_error_and_jsonify(event, options, e)).message\n\t\t);\n\t}\n}\n","/**\n * @template T\n * @param {() => T} fn\n */\nexport function once(fn) {\n\tlet done = false;\n\n\t/** @type T */\n\tlet result;\n\n\treturn () => {\n\t\tif (done) return result;\n\t\tdone = true;\n\t\treturn (result = fn());\n\t};\n}\n","import { text } from '@sveltejs/kit';\nimport { HttpError, SvelteKitError, Redirect } from '@sveltejs/kit/internal';\nimport { normalize_error } from '../../../utils/error.js';\nimport { once } from '../../../utils/functions.js';\nimport { load_server_data } from '../page/load_data.js';\nimport { clarify_devalue_error, handle_error_and_jsonify, serialize_uses } from '../utils.js';\nimport { normalize_path } from '../../../utils/url.js';\nimport * as devalue from 'devalue';\nimport { create_async_iterator } from '../../../utils/streaming.js';\nimport { text_encoder } from '../../utils.js';\n\n/**\n * @param {import('@sveltejs/kit').RequestEvent} event\n * @param {import('types').SSRRoute} route\n * @param {import('types').SSROptions} options\n * @param {import('@sveltejs/kit').SSRManifest} manifest\n * @param {import('types').SSRState} state\n * @param {boolean[] | undefined} invalidated_data_nodes\n * @param {import('types').TrailingSlash} trailing_slash\n * @returns {Promise<Response>}\n */\nexport async function render_data(\n\tevent,\n\troute,\n\toptions,\n\tmanifest,\n\tstate,\n\tinvalidated_data_nodes,\n\ttrailing_slash\n) {\n\tif (!route.page) {\n\t\t// requesting /__data.json should fail for a +server.js\n\t\treturn new Response(undefined, {\n\t\t\tstatus: 404\n\t\t});\n\t}\n\n\ttry {\n\t\tconst node_ids = [...route.page.layouts, route.page.leaf];\n\t\tconst invalidated = invalidated_data_nodes ?? node_ids.map(() => true);\n\n\t\tlet aborted = false;\n\n\t\tconst url = new URL(event.url);\n\t\turl.pathname = normalize_path(url.pathname, trailing_slash);\n\n\t\tconst new_event = { ...event, url };\n\n\t\tconst functions = node_ids.map((n, i) => {\n\t\t\treturn once(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tif (aborted) {\n\t\t\t\t\t\treturn /** @type {import('types').ServerDataSkippedNode} */ ({\n\t\t\t\t\t\t\ttype: 'skip'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\t// == because it could be undefined (in dev) or null (in build, because of JSON.stringify)\n\t\t\t\t\tconst node = n == undefined ? n : await manifest._.nodes[n]();\n\t\t\t\t\t// load this. for the child, return as is. for the final result, stream things\n\t\t\t\t\treturn load_server_data({\n\t\t\t\t\t\tevent: new_event,\n\t\t\t\t\t\tstate,\n\t\t\t\t\t\tnode,\n\t\t\t\t\t\tparent: async () => {\n\t\t\t\t\t\t\t/** @type {Record<string, any>} */\n\t\t\t\t\t\t\tconst data = {};\n\t\t\t\t\t\t\tfor (let j = 0; j < i; j += 1) {\n\t\t\t\t\t\t\t\tconst parent = /** @type {import('types').ServerDataNode | null} */ (\n\t\t\t\t\t\t\t\t\tawait functions[j]()\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\t\tObject.assign(data, parent.data);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn data;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} catch (e) {\n\t\t\t\t\taborted = true;\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tconst promises = functions.map(async (fn, i) => {\n\t\t\tif (!invalidated[i]) {\n\t\t\t\treturn /** @type {import('types').ServerDataSkippedNode} */ ({\n\t\t\t\t\ttype: 'skip'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn fn();\n\t\t});\n\n\t\tlet length = promises.length;\n\t\tconst nodes = await Promise.all(\n\t\t\tpromises.map((p, i) =>\n\t\t\t\tp.catch(async (error) => {\n\t\t\t\t\tif (error instanceof Redirect) {\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Math.min because array isn't guaranteed to resolve in order\n\t\t\t\t\tlength = Math.min(length, i + 1);\n\n\t\t\t\t\treturn /** @type {import('types').ServerErrorNode} */ ({\n\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\terror: await handle_error_and_jsonify(event, options, error),\n\t\t\t\t\t\tstatus:\n\t\t\t\t\t\t\terror instanceof HttpError || error instanceof SvelteKitError\n\t\t\t\t\t\t\t\t? error.status\n\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t)\n\t\t);\n\n\t\tconst { data, chunks } = get_data_json(event, options, nodes);\n\n\t\tif (!chunks) {\n\t\t\t// use a normal JSON response where possible, so we get `content-length`\n\t\t\t// and can use browser JSON devtools for easier inspecting\n\t\t\treturn json_response(data);\n\t\t}\n\n\t\treturn new Response(\n\t\t\tnew ReadableStream({\n\t\t\t\tasync start(controller) {\n\t\t\t\t\tcontroller.enqueue(text_encoder.encode(data));\n\t\t\t\t\tfor await (const chunk of chunks) {\n\t\t\t\t\t\tcontroller.enqueue(text_encoder.encode(chunk));\n\t\t\t\t\t}\n\t\t\t\t\tcontroller.close();\n\t\t\t\t},\n\n\t\t\t\ttype: 'bytes'\n\t\t\t}),\n\t\t\t{\n\t\t\t\theaders: {\n\t\t\t\t\t// we use a proprietary content type to prevent buffering.\n\t\t\t\t\t// the `text` prefix makes it inspectable\n\t\t\t\t\t'content-type': 'text/sveltekit-data',\n\t\t\t\t\t'cache-control': 'private, no-store'\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t} catch (e) {\n\t\tconst error = normalize_error(e);\n\n\t\tif (error instanceof Redirect) {\n\t\t\treturn redirect_json_response(error);\n\t\t} else {\n\t\t\treturn json_response(await handle_error_and_jsonify(event, options, error), 500);\n\t\t}\n\t}\n}\n\n/**\n * @param {Record<string, any> | string} json\n * @param {number} [status]\n */\nfunction json_response(json, status = 200) {\n\treturn text(typeof json === 'string' ? json : JSON.stringify(json), {\n\t\tstatus,\n\t\theaders: {\n\t\t\t'content-type': 'application/json',\n\t\t\t'cache-control': 'private, no-store'\n\t\t}\n\t});\n}\n\n/**\n * @param {Redirect} redirect\n */\nexport function redirect_json_response(redirect) {\n\treturn json_response(\n\t\t/** @type {import('types').ServerRedirectNode} */ ({\n\t\t\ttype: 'redirect',\n\t\t\tlocation: redirect.location\n\t\t})\n\t);\n}\n\n/**\n * If the serialized data contains promises, `chunks` will be an\n * async iterable containing their resolutions\n * @param {import('@sveltejs/kit').RequestEvent} event\n * @param {import('types').SSROptions} options\n * @param {Array<import('types').ServerDataSkippedNode | import('types').ServerDataNode | import('types').ServerErrorNode | null | undefined>} nodes\n *  @returns {{ data: string, chunks: AsyncIterable<string> | null }}\n */\nexport function get_data_json(event, options, nodes) {\n\tlet promise_id = 1;\n\tlet count = 0;\n\n\tconst { iterator, push, done } = create_async_iterator();\n\n\tconst reducers = {\n\t\t...Object.fromEntries(\n\t\t\tObject.entries(options.hooks.transport).map(([key, value]) => [key, value.encode])\n\t\t),\n\t\t/** @param {any} thing */\n\t\tPromise: (thing) => {\n\t\t\tif (typeof thing?.then === 'function') {\n\t\t\t\tconst id = promise_id++;\n\t\t\t\tcount += 1;\n\n\t\t\t\t/** @type {'data' | 'error'} */\n\t\t\t\tlet key = 'data';\n\n\t\t\t\tthing\n\t\t\t\t\t.catch(\n\t\t\t\t\t\t/** @param {any} e */ async (e) => {\n\t\t\t\t\t\t\tkey = 'error';\n\t\t\t\t\t\t\treturn handle_error_and_jsonify(event, options, /** @type {any} */ (e));\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t\t.then(\n\t\t\t\t\t\t/** @param {any} value */\n\t\t\t\t\t\tasync (value) => {\n\t\t\t\t\t\t\tlet str;\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tstr = devalue.stringify(value, reducers);\n\t\t\t\t\t\t\t} catch {\n\t\t\t\t\t\t\t\tconst error = await handle_error_and_jsonify(\n\t\t\t\t\t\t\t\t\tevent,\n\t\t\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\t\t\tnew Error(`Failed to serialize promise while rendering ${event.route.id}`)\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tkey = 'error';\n\t\t\t\t\t\t\t\tstr = devalue.stringify(error, reducers);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcount -= 1;\n\n\t\t\t\t\t\t\tpush(`{\"type\":\"chunk\",\"id\":${id},\"${key}\":${str}}\\n`);\n\t\t\t\t\t\t\tif (count === 0) done();\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\treturn id;\n\t\t\t}\n\t\t}\n\t};\n\n\ttry {\n\t\tconst strings = nodes.map((node) => {\n\t\t\tif (!node) return 'null';\n\n\t\t\tif (node.type === 'error' || node.type === 'skip') {\n\t\t\t\treturn JSON.stringify(node);\n\t\t\t}\n\n\t\t\treturn `{\"type\":\"data\",\"data\":${devalue.stringify(node.data, reducers)},\"uses\":${JSON.stringify(\n\t\t\t\tserialize_uses(node)\n\t\t\t)}${node.slash ? `,\"slash\":${JSON.stringify(node.slash)}` : ''}}`;\n\t\t});\n\n\t\treturn {\n\t\t\tdata: `{\"type\":\"data\",\"nodes\":[${strings.join(',')}]}\\n`,\n\t\t\tchunks: count > 0 ? iterator : null\n\t\t};\n\t} catch (e) {\n\t\t// @ts-expect-error\n\t\te.path = 'data' + e.path;\n\t\tthrow new Error(clarify_devalue_error(event, /** @type {any} */ (e)));\n\t}\n}\n","/** @import { ActionResult, RemoteForm, RequestEvent, SSRManifest } from '@sveltejs/kit' */\n/** @import { RemoteFunctionResponse, RemoteInfo, SSROptions } from 'types' */\n\nimport { json, error } from '@sveltejs/kit';\nimport { HttpError, Redirect, SvelteKitError } from '@sveltejs/kit/internal';\nimport { app_dir, base } from '__sveltekit/paths';\nimport { with_event } from '../app/server/event.js';\nimport { is_form_content_type } from '../../utils/http.js';\nimport { parse_remote_arg, stringify } from '../shared.js';\nimport { handle_error_and_jsonify } from './utils.js';\nimport { normalize_error } from '../../utils/error.js';\nimport { check_incorrect_fail_use } from './page/actions.js';\nimport { DEV } from 'esm-env';\nimport { get_event_state } from './event-state.js';\n\n/**\n * @param {RequestEvent} event\n * @param {SSROptions} options\n * @param {SSRManifest} manifest\n * @param {string} id\n */\nexport async function handle_remote_call(event, options, manifest, id) {\n\tconst [hash, name, prerender_args] = id.split('/');\n\tconst remotes = manifest._.remotes;\n\n\tif (!remotes[hash]) error(404);\n\n\tconst module = await remotes[hash]();\n\tconst fn = module[name];\n\n\tif (!fn) error(404);\n\n\t/** @type {RemoteInfo} */\n\tconst info = fn.__;\n\tconst transport = options.hooks.transport;\n\n\t/** @type {string[] | undefined} */\n\tlet form_client_refreshes;\n\n\ttry {\n\t\tif (info.type === 'form') {\n\t\t\tif (!is_form_content_type(event.request)) {\n\t\t\t\tthrow new SvelteKitError(\n\t\t\t\t\t415,\n\t\t\t\t\t'Unsupported Media Type',\n\t\t\t\t\t`Form actions expect form-encoded data — received ${event.request.headers.get(\n\t\t\t\t\t\t'content-type'\n\t\t\t\t\t)}`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst form_data = await event.request.formData();\n\t\t\tform_client_refreshes = JSON.parse(\n\t\t\t\t/** @type {string} */ (form_data.get('sveltekit:remote_refreshes')) ?? '[]'\n\t\t\t);\n\t\t\tform_data.delete('sveltekit:remote_refreshes');\n\n\t\t\tconst fn = info.fn;\n\t\t\tconst data = await with_event(event, () => fn(form_data));\n\n\t\t\treturn json(\n\t\t\t\t/** @type {RemoteFunctionResponse} */ ({\n\t\t\t\t\ttype: 'result',\n\t\t\t\t\tresult: stringify(data, transport),\n\t\t\t\t\trefreshes: await serialize_refreshes(/** @type {string[]} */ (form_client_refreshes))\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\n\t\tif (info.type === 'command') {\n\t\t\t/** @type {{ payload: string, refreshes: string[] }} */\n\t\t\tconst { payload, refreshes } = await event.request.json();\n\t\t\tconst arg = parse_remote_arg(payload, transport);\n\t\t\tconst data = await with_event(event, () => fn(arg));\n\n\t\t\treturn json(\n\t\t\t\t/** @type {RemoteFunctionResponse} */ ({\n\t\t\t\t\ttype: 'result',\n\t\t\t\t\tresult: stringify(data, transport),\n\t\t\t\t\trefreshes: await serialize_refreshes(refreshes)\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\n\t\tconst payload =\n\t\t\tinfo.type === 'prerender'\n\t\t\t\t? prerender_args\n\t\t\t\t: /** @type {string} */ (\n\t\t\t\t\t\t// new URL(...) necessary because we're hiding the URL from the user in the event object\n\t\t\t\t\t\tnew URL(event.request.url).searchParams.get('payload')\n\t\t\t\t\t);\n\n\t\tconst data = await with_event(event, () => fn(parse_remote_arg(payload, transport)));\n\n\t\treturn json(\n\t\t\t/** @type {RemoteFunctionResponse} */ ({\n\t\t\t\ttype: 'result',\n\t\t\t\tresult: stringify(data, transport)\n\t\t\t})\n\t\t);\n\t} catch (error) {\n\t\tif (error instanceof Redirect) {\n\t\t\treturn json({\n\t\t\t\ttype: 'redirect',\n\t\t\t\tlocation: error.location,\n\t\t\t\trefreshes: await serialize_refreshes(form_client_refreshes ?? [])\n\t\t\t});\n\t\t}\n\n\t\treturn json(\n\t\t\t/** @type {RemoteFunctionResponse} */ ({\n\t\t\t\ttype: 'error',\n\t\t\t\terror: await handle_error_and_jsonify(event, options, error),\n\t\t\t\tstatus: error instanceof HttpError || error instanceof SvelteKitError ? error.status : 500\n\t\t\t}),\n\t\t\t{\n\t\t\t\theaders: {\n\t\t\t\t\t'cache-control': 'private, no-store'\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * @param {string[]} client_refreshes\n\t */\n\tasync function serialize_refreshes(client_refreshes) {\n\t\tconst refreshes = {\n\t\t\t...get_event_state(event).refreshes,\n\t\t\t...Object.fromEntries(\n\t\t\t\tawait Promise.all(\n\t\t\t\t\tclient_refreshes.map(async (key) => {\n\t\t\t\t\t\tconst [hash, name, payload] = key.split('/');\n\t\t\t\t\t\tconst loader = manifest._.remotes[hash];\n\n\t\t\t\t\t\t// TODO what do we do in this case? erroring after the mutation has happened is not great\n\t\t\t\t\t\tif (!loader) error(400, 'Bad Request');\n\n\t\t\t\t\t\tconst module = await loader();\n\t\t\t\t\t\tconst fn = module[name];\n\n\t\t\t\t\t\tif (!fn) error(400, 'Bad Request');\n\n\t\t\t\t\t\treturn [key, await with_event(event, () => fn(parse_remote_arg(payload, transport)))];\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t)\n\t\t};\n\n\t\treturn Object.keys(refreshes).length > 0 ? stringify(refreshes, transport) : undefined;\n\t}\n}\n\n/**\n * @param {RequestEvent} event\n * @param {SSRManifest} manifest\n * @param {string} id\n * @returns {Promise<ActionResult>}\n */\nexport async function handle_remote_form_post(event, manifest, id) {\n\tconst [hash, name, action_id] = id.split('/');\n\tconst remotes = manifest._.remotes;\n\tconst module = await remotes[hash]?.();\n\n\tlet form = /** @type {RemoteForm<any>} */ (module?.[name]);\n\n\tif (!form) {\n\t\tevent.setHeaders({\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/405\n\t\t\t// \"The server must generate an Allow header field in a 405 status code response\"\n\t\t\tallow: 'GET'\n\t\t});\n\t\treturn {\n\t\t\ttype: 'error',\n\t\t\terror: new SvelteKitError(\n\t\t\t\t405,\n\t\t\t\t'Method Not Allowed',\n\t\t\t\t`POST method not allowed. No form actions exist for ${DEV ? `the page at ${event.route.id}` : 'this page'}`\n\t\t\t)\n\t\t};\n\t}\n\n\tif (action_id) {\n\t\t// @ts-expect-error\n\t\tform = with_event(event, () => form.for(JSON.parse(action_id)));\n\t}\n\n\ttry {\n\t\tconst form_data = await event.request.formData();\n\t\tconst fn = /** @type {RemoteInfo & { type: 'form' }} */ (/** @type {any} */ (form).__).fn;\n\n\t\tawait with_event(event, () => fn(form_data));\n\n\t\t// We don't want the data to appear on `let { form } = $props()`, which is why we're not returning it.\n\t\t// It is instead available on `myForm.result`, setting of which happens within the remote `form` function.\n\t\treturn {\n\t\t\ttype: 'success',\n\t\t\tstatus: 200\n\t\t};\n\t} catch (e) {\n\t\tconst err = normalize_error(e);\n\n\t\tif (err instanceof Redirect) {\n\t\t\treturn {\n\t\t\t\ttype: 'redirect',\n\t\t\t\tstatus: err.status,\n\t\t\t\tlocation: err.location\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\ttype: 'error',\n\t\t\terror: check_incorrect_fail_use(err)\n\t\t};\n\t}\n}\n\n/**\n * @param {URL} url\n */\nexport function get_remote_id(url) {\n\treturn (\n\t\turl.pathname.startsWith(`${base}/${app_dir}/remote/`) &&\n\t\turl.pathname.replace(`${base}/${app_dir}/remote/`, '')\n\t);\n}\n\n/**\n * @param {URL} url\n */\nexport function get_remote_action(url) {\n\treturn url.searchParams.get('/remote');\n}\n","import { text } from '@sveltejs/kit';\nimport { Redirect } from '@sveltejs/kit/internal';\nimport { compact } from '../../../utils/array.js';\nimport { get_status, normalize_error } from '../../../utils/error.js';\nimport { add_data_suffix } from '../../pathname.js';\nimport { redirect_response, static_error_page, handle_error_and_jsonify } from '../utils.js';\nimport {\n\thandle_action_json_request,\n\thandle_action_request,\n\tis_action_json_request,\n\tis_action_request\n} from './actions.js';\nimport { load_data, load_server_data } from './load_data.js';\nimport { render_response } from './render.js';\nimport { respond_with_error } from './respond_with_error.js';\nimport { get_data_json } from '../data/index.js';\nimport { DEV } from 'esm-env';\nimport { get_remote_action, handle_remote_form_post } from '../remote.js';\nimport { PageNodes } from '../../../utils/page_nodes.js';\n\n/**\n * The maximum request depth permitted before assuming we're stuck in an infinite loop\n */\nconst MAX_DEPTH = 10;\n\n/**\n * @param {import('@sveltejs/kit').RequestEvent} event\n * @param {import('types').PageNodeIndexes} page\n * @param {import('types').SSROptions} options\n * @param {import('@sveltejs/kit').SSRManifest} manifest\n * @param {import('types').SSRState} state\n * @param {import('../../../utils/page_nodes.js').PageNodes} nodes\n * @param {import('types').RequiredResolveOptions} resolve_opts\n * @returns {Promise<Response>}\n */\nexport async function render_page(event, page, options, manifest, state, nodes, resolve_opts) {\n\tif (state.depth > MAX_DEPTH) {\n\t\t// infinite request cycle detected\n\t\treturn text(`Not found: ${event.url.pathname}`, {\n\t\t\tstatus: 404 // TODO in some cases this should be 500. not sure how to differentiate\n\t\t});\n\t}\n\n\tif (is_action_json_request(event)) {\n\t\tconst node = await manifest._.nodes[page.leaf]();\n\t\treturn handle_action_json_request(event, options, node?.server);\n\t}\n\n\ttry {\n\t\tconst leaf_node = /** @type {import('types').SSRNode} */ (nodes.page());\n\n\t\tlet status = 200;\n\n\t\t/** @type {import('@sveltejs/kit').ActionResult | undefined} */\n\t\tlet action_result = undefined;\n\n\t\tif (is_action_request(event)) {\n\t\t\tconst remote_id = get_remote_action(event.url);\n\t\t\tif (remote_id) {\n\t\t\t\taction_result = await handle_remote_form_post(event, manifest, remote_id);\n\t\t\t} else {\n\t\t\t\t// for action requests, first call handler in +page.server.js\n\t\t\t\t// (this also determines status code)\n\t\t\t\taction_result = await handle_action_request(event, leaf_node.server);\n\t\t\t}\n\n\t\t\tif (action_result?.type === 'redirect') {\n\t\t\t\treturn redirect_response(action_result.status, action_result.location);\n\t\t\t}\n\t\t\tif (action_result?.type === 'error') {\n\t\t\t\tstatus = get_status(action_result.error);\n\t\t\t}\n\t\t\tif (action_result?.type === 'failure') {\n\t\t\t\tstatus = action_result.status;\n\t\t\t}\n\t\t}\n\n\t\t// it's crucial that we do this before returning the non-SSR response, otherwise\n\t\t// SvelteKit will erroneously believe that the path has been prerendered,\n\t\t// causing functions to be omitted from the manifest generated later\n\t\tconst should_prerender = nodes.prerender();\n\t\tif (should_prerender) {\n\t\t\tconst mod = leaf_node.server;\n\t\t\tif (mod?.actions) {\n\t\t\t\tthrow new Error('Cannot prerender pages with actions');\n\t\t\t}\n\t\t} else if (state.prerendering) {\n\t\t\t// if the page isn't marked as prerenderable, then bail out at this point\n\t\t\treturn new Response(undefined, {\n\t\t\t\tstatus: 204\n\t\t\t});\n\t\t}\n\n\t\t// if we fetch any endpoints while loading data for this page, they should\n\t\t// inherit the prerender option of the page\n\t\tstate.prerender_default = should_prerender;\n\n\t\tconst should_prerender_data = nodes.should_prerender_data();\n\t\tconst data_pathname = add_data_suffix(event.url.pathname);\n\n\t\t/** @type {import('./types.js').Fetched[]} */\n\t\tconst fetched = [];\n\n\t\tconst ssr = nodes.ssr();\n\t\tconst csr = nodes.csr();\n\n\t\t// renders an empty 'shell' page if SSR is turned off and if there is\n\t\t// no server data to prerender. As a result, the load functions and rendering\n\t\t// only occur client-side.\n\t\tif (ssr === false && !(state.prerendering && should_prerender_data)) {\n\t\t\t// if the user makes a request through a non-enhanced form, the returned value is lost\n\t\t\t// because there is no SSR or client-side handling of the response\n\t\t\tif (DEV && action_result && !event.request.headers.has('x-sveltekit-action')) {\n\t\t\t\tif (action_result.type === 'error') {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\"The form action returned an error, but +error.svelte wasn't rendered because SSR is off. To get the error page with CSR, enhance your form with `use:enhance`. See https://svelte.dev/docs/kit/form-actions#progressive-enhancement-use-enhance\"\n\t\t\t\t\t);\n\t\t\t\t} else if (action_result.data) {\n\t\t\t\t\t/// case: lost data\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\"The form action returned a value, but it isn't available in `page.form`, because SSR is off. To handle the returned value in CSR, enhance your form with `use:enhance`. See https://svelte.dev/docs/kit/form-actions#progressive-enhancement-use-enhance\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn await render_response({\n\t\t\t\tbranch: [],\n\t\t\t\tfetched,\n\t\t\t\tpage_config: {\n\t\t\t\t\tssr: false,\n\t\t\t\t\tcsr\n\t\t\t\t},\n\t\t\t\tstatus,\n\t\t\t\terror: null,\n\t\t\t\tevent,\n\t\t\t\toptions,\n\t\t\t\tmanifest,\n\t\t\t\tstate,\n\t\t\t\tresolve_opts\n\t\t\t});\n\t\t}\n\n\t\t/** @type {Array<import('./types.js').Loaded | null>} */\n\t\tconst branch = [];\n\n\t\t/** @type {Error | null} */\n\t\tlet load_error = null;\n\n\t\t/** @type {Array<Promise<import('types').ServerDataNode | null>>} */\n\t\tconst server_promises = nodes.data.map((node, i) => {\n\t\t\tif (load_error) {\n\t\t\t\t// if an error happens immediately, don't bother with the rest of the nodes\n\t\t\t\tthrow load_error;\n\t\t\t}\n\n\t\t\treturn Promise.resolve().then(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tif (node === leaf_node && action_result?.type === 'error') {\n\t\t\t\t\t\t// we wait until here to throw the error so that we can use\n\t\t\t\t\t\t// any nested +error.svelte components that were defined\n\t\t\t\t\t\tthrow action_result.error;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn await load_server_data({\n\t\t\t\t\t\tevent,\n\t\t\t\t\t\tstate,\n\t\t\t\t\t\tnode,\n\t\t\t\t\t\tparent: async () => {\n\t\t\t\t\t\t\t/** @type {Record<string, any>} */\n\t\t\t\t\t\t\tconst data = {};\n\t\t\t\t\t\t\tfor (let j = 0; j < i; j += 1) {\n\t\t\t\t\t\t\t\tconst parent = await server_promises[j];\n\t\t\t\t\t\t\t\tif (parent) Object.assign(data, parent.data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn data;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} catch (e) {\n\t\t\t\t\tload_error = /** @type {Error} */ (e);\n\t\t\t\t\tthrow load_error;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t/** @type {Array<Promise<Record<string, any> | null>>} */\n\t\tconst load_promises = nodes.data.map((node, i) => {\n\t\t\tif (load_error) throw load_error;\n\t\t\treturn Promise.resolve().then(async () => {\n\t\t\t\ttry {\n\t\t\t\t\treturn await load_data({\n\t\t\t\t\t\tevent,\n\t\t\t\t\t\tfetched,\n\t\t\t\t\t\tnode,\n\t\t\t\t\t\tparent: async () => {\n\t\t\t\t\t\t\tconst data = {};\n\t\t\t\t\t\t\tfor (let j = 0; j < i; j += 1) {\n\t\t\t\t\t\t\t\tObject.assign(data, await load_promises[j]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn data;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tresolve_opts,\n\t\t\t\t\t\tserver_data_promise: server_promises[i],\n\t\t\t\t\t\tstate,\n\t\t\t\t\t\tcsr\n\t\t\t\t\t});\n\t\t\t\t} catch (e) {\n\t\t\t\t\tload_error = /** @type {Error} */ (e);\n\t\t\t\t\tthrow load_error;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t// if we don't do this, rejections will be unhandled\n\t\tfor (const p of server_promises) p.catch(() => {});\n\t\tfor (const p of load_promises) p.catch(() => {});\n\n\t\tfor (let i = 0; i < nodes.data.length; i += 1) {\n\t\t\tconst node = nodes.data[i];\n\n\t\t\tif (node) {\n\t\t\t\ttry {\n\t\t\t\t\tconst server_data = await server_promises[i];\n\t\t\t\t\tconst data = await load_promises[i];\n\n\t\t\t\t\tbranch.push({ node, server_data, data });\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconst err = normalize_error(e);\n\n\t\t\t\t\tif (err instanceof Redirect) {\n\t\t\t\t\t\tif (state.prerendering && should_prerender_data) {\n\t\t\t\t\t\t\tconst body = JSON.stringify({\n\t\t\t\t\t\t\t\ttype: 'redirect',\n\t\t\t\t\t\t\t\tlocation: err.location\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tstate.prerendering.dependencies.set(data_pathname, {\n\t\t\t\t\t\t\t\tresponse: text(body),\n\t\t\t\t\t\t\t\tbody\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn redirect_response(err.status, err.location);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst status = get_status(err);\n\t\t\t\t\tconst error = await handle_error_and_jsonify(event, options, err);\n\n\t\t\t\t\twhile (i--) {\n\t\t\t\t\t\tif (page.errors[i]) {\n\t\t\t\t\t\t\tconst index = /** @type {number} */ (page.errors[i]);\n\t\t\t\t\t\t\tconst node = await manifest._.nodes[index]();\n\n\t\t\t\t\t\t\tlet j = i;\n\t\t\t\t\t\t\twhile (!branch[j]) j -= 1;\n\n\t\t\t\t\t\t\tconst layouts = compact(branch.slice(0, j + 1));\n\t\t\t\t\t\t\tconst nodes = new PageNodes(layouts.map((layout) => layout.node));\n\n\t\t\t\t\t\t\treturn await render_response({\n\t\t\t\t\t\t\t\tevent,\n\t\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\t\tmanifest,\n\t\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\t\tresolve_opts,\n\t\t\t\t\t\t\t\tpage_config: {\n\t\t\t\t\t\t\t\t\tssr: nodes.ssr(),\n\t\t\t\t\t\t\t\t\tcsr: nodes.csr()\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tstatus,\n\t\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t\t\tbranch: layouts.concat({\n\t\t\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\t\t\tdata: null,\n\t\t\t\t\t\t\t\t\tserver_data: null\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tfetched\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// if we're still here, it means the error happened in the root layout,\n\t\t\t\t\t// which means we have to fall back to error.html\n\t\t\t\t\treturn static_error_page(options, status, error.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// push an empty slot so we can rewind past gaps to the\n\t\t\t\t// layout that corresponds with an +error.svelte page\n\t\t\t\tbranch.push(null);\n\t\t\t}\n\t\t}\n\n\t\tif (state.prerendering && should_prerender_data) {\n\t\t\t// ndjson format\n\t\t\tlet { data, chunks } = get_data_json(\n\t\t\t\tevent,\n\t\t\t\toptions,\n\t\t\t\tbranch.map((node) => node?.server_data)\n\t\t\t);\n\n\t\t\tif (chunks) {\n\t\t\t\tfor await (const chunk of chunks) {\n\t\t\t\t\tdata += chunk;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstate.prerendering.dependencies.set(data_pathname, {\n\t\t\t\tresponse: text(data),\n\t\t\t\tbody: data\n\t\t\t});\n\t\t}\n\n\t\treturn await render_response({\n\t\t\tevent,\n\t\t\toptions,\n\t\t\tmanifest,\n\t\t\tstate,\n\t\t\tresolve_opts,\n\t\t\tpage_config: {\n\t\t\t\tcsr,\n\t\t\t\tssr\n\t\t\t},\n\t\t\tstatus,\n\t\t\terror: null,\n\t\t\tbranch: ssr === false ? [] : compact(branch),\n\t\t\taction_result,\n\t\t\tfetched\n\t\t});\n\t} catch (e) {\n\t\t// if we end up here, it means the data loaded successfully\n\t\t// but the page failed to render, or that a prerendering error occurred\n\t\treturn await respond_with_error({\n\t\t\tevent,\n\t\t\toptions,\n\t\t\tmanifest,\n\t\t\tstate,\n\t\t\tstatus: 500,\n\t\t\terror: e,\n\t\t\tresolve_opts\n\t\t});\n\t}\n}\n","import { parse, serialize } from 'cookie';\nimport { normalize_path, resolve } from '../../utils/url.js';\nimport { add_data_suffix } from '../pathname.js';\nimport { text_encoder } from '../utils.js';\n\n// eslint-disable-next-line no-control-regex -- control characters are invalid in cookie names\nconst INVALID_COOKIE_CHARACTER_REGEX = /[\\x00-\\x1F\\x7F()<>@,;:\"/[\\]?={} \\t]/;\n\n/**\n * Tracks all cookies set during dev mode so we can emit warnings\n * when we detect that there's likely cookie misusage due to wrong paths\n *\n * @type {Record<string, Set<string>>} */\nconst cookie_paths = {};\n\n/**\n * Cookies that are larger than this size (including the name and other\n * attributes) are discarded by browsers\n */\nconst MAX_COOKIE_SIZE = 4129;\n\n// TODO 3.0 remove this check\n/** @param {import('./page/types.js').Cookie['options']} options */\nfunction validate_options(options) {\n\tif (options?.path === undefined) {\n\t\tthrow new Error('You must specify a `path` when setting, deleting or serializing cookies');\n\t}\n}\n\n/**\n * @param {Request} request\n * @param {URL} url\n */\nexport function get_cookies(request, url) {\n\tconst header = request.headers.get('cookie') ?? '';\n\tconst initial_cookies = parse(header, { decode: (value) => value });\n\n\t/** @type {string | undefined} */\n\tlet normalized_url;\n\n\t/** @type {Record<string, import('./page/types.js').Cookie>} */\n\tconst new_cookies = {};\n\n\t/** @type {import('cookie').CookieSerializeOptions} */\n\tconst defaults = {\n\t\thttpOnly: true,\n\t\tsameSite: 'lax',\n\t\tsecure: url.hostname === 'localhost' && url.protocol === 'http:' ? false : true\n\t};\n\n\t/** @type {import('@sveltejs/kit').Cookies} */\n\tconst cookies = {\n\t\t// The JSDoc param annotations appearing below for get, set and delete\n\t\t// are necessary to expose the `cookie` library types to\n\t\t// typescript users. `@type {import('@sveltejs/kit').Cookies}` above is not\n\t\t// sufficient to do so.\n\n\t\t/**\n\t\t * @param {string} name\n\t\t * @param {import('cookie').CookieParseOptions} [opts]\n\t\t */\n\t\tget(name, opts) {\n\t\t\tconst c = new_cookies[name];\n\t\t\tif (\n\t\t\t\tc &&\n\t\t\t\tdomain_matches(url.hostname, c.options.domain) &&\n\t\t\t\tpath_matches(url.pathname, c.options.path)\n\t\t\t) {\n\t\t\t\treturn c.value;\n\t\t\t}\n\n\t\t\tconst req_cookies = parse(header, { decode: opts?.decode });\n\t\t\tconst cookie = req_cookies[name]; // the decoded string or undefined\n\n\t\t\t// in development, if the cookie was set during this session with `cookies.set`,\n\t\t\t// but at a different path, warn the user. (ignore cookies from request headers,\n\t\t\t// since we don't know which path they were set at)\n\t\t\tif (__SVELTEKIT_DEV__ && !cookie) {\n\t\t\t\tconst paths = Array.from(cookie_paths[name] ?? []).filter((path) => {\n\t\t\t\t\t// we only care about paths that are _more_ specific than the current path\n\t\t\t\t\treturn path_matches(path, url.pathname) && path !== url.pathname;\n\t\t\t\t});\n\n\t\t\t\tif (paths.length > 0) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t// prettier-ignore\n\t\t\t\t\t\t`'${name}' cookie does not exist for ${url.pathname}, but was previously set at ${conjoin([...paths])}. Did you mean to set its 'path' to '/' instead?`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn cookie;\n\t\t},\n\n\t\t/**\n\t\t * @param {import('cookie').CookieParseOptions} [opts]\n\t\t */\n\t\tgetAll(opts) {\n\t\t\tconst cookies = parse(header, { decode: opts?.decode });\n\n\t\t\tfor (const c of Object.values(new_cookies)) {\n\t\t\t\tif (\n\t\t\t\t\tdomain_matches(url.hostname, c.options.domain) &&\n\t\t\t\t\tpath_matches(url.pathname, c.options.path)\n\t\t\t\t) {\n\t\t\t\t\tcookies[c.name] = c.value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn Object.entries(cookies).map(([name, value]) => ({ name, value }));\n\t\t},\n\n\t\t/**\n\t\t * @param {string} name\n\t\t * @param {string} value\n\t\t * @param {import('./page/types.js').Cookie['options']} options\n\t\t */\n\t\tset(name, value, options) {\n\t\t\t// TODO: remove this check in 3.0\n\t\t\tconst illegal_characters = name.match(INVALID_COOKIE_CHARACTER_REGEX);\n\t\t\tif (illegal_characters) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t`The cookie name \"${name}\" will be invalid in SvelteKit 3.0 as it contains ${illegal_characters.join(\n\t\t\t\t\t\t' and '\n\t\t\t\t\t)}. See RFC 2616 for more details https://datatracker.ietf.org/doc/html/rfc2616#section-2.2`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tvalidate_options(options);\n\t\t\tset_internal(name, value, { ...defaults, ...options });\n\t\t},\n\n\t\t/**\n\t\t * @param {string} name\n\t\t *  @param {import('./page/types.js').Cookie['options']} options\n\t\t */\n\t\tdelete(name, options) {\n\t\t\tvalidate_options(options);\n\t\t\tcookies.set(name, '', { ...options, maxAge: 0 });\n\t\t},\n\n\t\t/**\n\t\t * @param {string} name\n\t\t * @param {string} value\n\t\t *  @param {import('./page/types.js').Cookie['options']} options\n\t\t */\n\t\tserialize(name, value, options) {\n\t\t\tvalidate_options(options);\n\n\t\t\tlet path = options.path;\n\n\t\t\tif (!options.domain || options.domain === url.hostname) {\n\t\t\t\tif (!normalized_url) {\n\t\t\t\t\tthrow new Error('Cannot serialize cookies until after the route is determined');\n\t\t\t\t}\n\t\t\t\tpath = resolve(normalized_url, path);\n\t\t\t}\n\n\t\t\treturn serialize(name, value, { ...defaults, ...options, path });\n\t\t}\n\t};\n\n\t/**\n\t * @param {URL} destination\n\t * @param {string | null} header\n\t */\n\tfunction get_cookie_header(destination, header) {\n\t\t/** @type {Record<string, string>} */\n\t\tconst combined_cookies = {\n\t\t\t// cookies sent by the user agent have lowest precedence\n\t\t\t...initial_cookies\n\t\t};\n\n\t\t// cookies previous set during this event with cookies.set have higher precedence\n\t\tfor (const key in new_cookies) {\n\t\t\tconst cookie = new_cookies[key];\n\t\t\tif (!domain_matches(destination.hostname, cookie.options.domain)) continue;\n\t\t\tif (!path_matches(destination.pathname, cookie.options.path)) continue;\n\n\t\t\tconst encoder = cookie.options.encode || encodeURIComponent;\n\t\t\tcombined_cookies[cookie.name] = encoder(cookie.value);\n\t\t}\n\n\t\t// explicit header has highest precedence\n\t\tif (header) {\n\t\t\tconst parsed = parse(header, { decode: (value) => value });\n\t\t\tfor (const name in parsed) {\n\t\t\t\tcombined_cookies[name] = parsed[name];\n\t\t\t}\n\t\t}\n\n\t\treturn Object.entries(combined_cookies)\n\t\t\t.map(([name, value]) => `${name}=${value}`)\n\t\t\t.join('; ');\n\t}\n\n\t/** @type {Array<() => void>} */\n\tconst internal_queue = [];\n\n\t/**\n\t * @param {string} name\n\t * @param {string} value\n\t * @param {import('./page/types.js').Cookie['options']} options\n\t */\n\tfunction set_internal(name, value, options) {\n\t\tif (!normalized_url) {\n\t\t\tinternal_queue.push(() => set_internal(name, value, options));\n\t\t\treturn;\n\t\t}\n\n\t\tlet path = options.path;\n\n\t\tif (!options.domain || options.domain === url.hostname) {\n\t\t\tpath = resolve(normalized_url, path);\n\t\t}\n\n\t\tnew_cookies[name] = { name, value, options: { ...options, path } };\n\n\t\tif (__SVELTEKIT_DEV__) {\n\t\t\tconst serialized = serialize(name, value, new_cookies[name].options);\n\t\t\tif (text_encoder.encode(serialized).byteLength > MAX_COOKIE_SIZE) {\n\t\t\t\tthrow new Error(`Cookie \"${name}\" is too large, and will be discarded by the browser`);\n\t\t\t}\n\n\t\t\tcookie_paths[name] ??= new Set();\n\n\t\t\tif (!value) {\n\t\t\t\tcookie_paths[name].delete(path);\n\t\t\t} else {\n\t\t\t\tcookie_paths[name].add(path);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('types').TrailingSlash} trailing_slash\n\t */\n\tfunction set_trailing_slash(trailing_slash) {\n\t\tnormalized_url = normalize_path(url.pathname, trailing_slash);\n\t\tinternal_queue.forEach((fn) => fn());\n\t}\n\n\treturn { cookies, new_cookies, get_cookie_header, set_internal, set_trailing_slash };\n}\n\n/**\n * @param {string} hostname\n * @param {string} [constraint]\n */\nexport function domain_matches(hostname, constraint) {\n\tif (!constraint) return true;\n\n\tconst normalized = constraint[0] === '.' ? constraint.slice(1) : constraint;\n\n\tif (hostname === normalized) return true;\n\treturn hostname.endsWith('.' + normalized);\n}\n\n/**\n * @param {string} path\n * @param {string} [constraint]\n */\nexport function path_matches(path, constraint) {\n\tif (!constraint) return true;\n\n\tconst normalized = constraint.endsWith('/') ? constraint.slice(0, -1) : constraint;\n\n\tif (path === normalized) return true;\n\treturn path.startsWith(normalized + '/');\n}\n\n/**\n * @param {Headers} headers\n * @param {import('./page/types.js').Cookie[]} cookies\n */\nexport function add_cookies_to_headers(headers, cookies) {\n\tfor (const new_cookie of cookies) {\n\t\tconst { name, value, options } = new_cookie;\n\t\theaders.append('set-cookie', serialize(name, value, options));\n\n\t\t// special case — for routes ending with .html, the route data lives in a sibling\n\t\t// `.html__data.json` file rather than a child `/__data.json` file, which means\n\t\t// we need to duplicate the cookie\n\t\tif (options.path.endsWith('.html')) {\n\t\t\tconst path = add_data_suffix(options.path);\n\t\t\theaders.append('set-cookie', serialize(name, value, { ...options, path }));\n\t\t}\n\t}\n}\n\n/**\n * @param {string[]} array\n */\nfunction conjoin(array) {\n\tif (array.length <= 2) return array.join(' and ');\n\treturn `${array.slice(0, -1).join(', ')} and ${array.at(-1)}`;\n}\n","import * as set_cookie_parser from 'set-cookie-parser';\nimport { respond } from './respond.js';\nimport * as paths from '__sveltekit/paths';\nimport { read_implementation } from '__sveltekit/server';\nimport { has_prerendered_path } from './utils.js';\n\n/**\n * @param {{\n *   event: import('@sveltejs/kit').RequestEvent;\n *   options: import('types').SSROptions;\n *   manifest: import('@sveltejs/kit').SSRManifest;\n *   state: import('types').SSRState;\n *   get_cookie_header: (url: URL, header: string | null) => string;\n *   set_internal: (name: string, value: string, opts: import('./page/types.js').Cookie['options']) => void;\n * }} opts\n * @returns {typeof fetch}\n */\nexport function create_fetch({ event, options, manifest, state, get_cookie_header, set_internal }) {\n\t/**\n\t * @type {typeof fetch}\n\t */\n\tconst server_fetch = async (info, init) => {\n\t\tconst original_request = normalize_fetch_input(info, init, event.url);\n\n\t\t// some runtimes (e.g. Cloudflare) error if you access `request.mode`,\n\t\t// annoyingly, so we need to read the value from the `init` object instead\n\t\tlet mode = (info instanceof Request ? info.mode : init?.mode) ?? 'cors';\n\t\tlet credentials =\n\t\t\t(info instanceof Request ? info.credentials : init?.credentials) ?? 'same-origin';\n\n\t\treturn options.hooks.handleFetch({\n\t\t\tevent,\n\t\t\trequest: original_request,\n\t\t\tfetch: async (info, init) => {\n\t\t\t\tconst request = normalize_fetch_input(info, init, event.url);\n\n\t\t\t\tconst url = new URL(request.url);\n\n\t\t\t\tif (!request.headers.has('origin')) {\n\t\t\t\t\trequest.headers.set('origin', event.url.origin);\n\t\t\t\t}\n\n\t\t\t\tif (info !== original_request) {\n\t\t\t\t\tmode = (info instanceof Request ? info.mode : init?.mode) ?? 'cors';\n\t\t\t\t\tcredentials =\n\t\t\t\t\t\t(info instanceof Request ? info.credentials : init?.credentials) ?? 'same-origin';\n\t\t\t\t}\n\n\t\t\t\t// Remove Origin, according to https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Origin#description\n\t\t\t\tif (\n\t\t\t\t\t(request.method === 'GET' || request.method === 'HEAD') &&\n\t\t\t\t\t((mode === 'no-cors' && url.origin !== event.url.origin) ||\n\t\t\t\t\t\turl.origin === event.url.origin)\n\t\t\t\t) {\n\t\t\t\t\trequest.headers.delete('origin');\n\t\t\t\t}\n\n\t\t\t\tif (url.origin !== event.url.origin) {\n\t\t\t\t\t// Allow cookie passthrough for \"credentials: same-origin\" and \"credentials: include\"\n\t\t\t\t\t// if SvelteKit is serving my.domain.com:\n\t\t\t\t\t// -        domain.com WILL NOT receive cookies\n\t\t\t\t\t// -     my.domain.com WILL receive cookies\n\t\t\t\t\t// -    api.domain.dom WILL NOT receive cookies\n\t\t\t\t\t// - sub.my.domain.com WILL receive cookies\n\t\t\t\t\t// ports do not affect the resolution\n\t\t\t\t\t// leading dot prevents mydomain.com matching domain.com\n\t\t\t\t\t// Do not forward other cookies for \"credentials: include\" because we don't know\n\t\t\t\t\t// which cookie belongs to which domain (browser does not pass this info)\n\t\t\t\t\tif (`.${url.hostname}`.endsWith(`.${event.url.hostname}`) && credentials !== 'omit') {\n\t\t\t\t\t\tconst cookie = get_cookie_header(url, request.headers.get('cookie'));\n\t\t\t\t\t\tif (cookie) request.headers.set('cookie', cookie);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn fetch(request);\n\t\t\t\t}\n\n\t\t\t\t// handle fetch requests for static assets. e.g. prebaked data, etc.\n\t\t\t\t// we need to support everything the browser's fetch supports\n\t\t\t\tconst prefix = paths.assets || paths.base;\n\t\t\t\tconst decoded = decodeURIComponent(url.pathname);\n\t\t\t\tconst filename = (\n\t\t\t\t\tdecoded.startsWith(prefix) ? decoded.slice(prefix.length) : decoded\n\t\t\t\t).slice(1);\n\t\t\t\tconst filename_html = `${filename}/index.html`; // path may also match path/index.html\n\n\t\t\t\tconst is_asset = manifest.assets.has(filename) || filename in manifest._.server_assets;\n\t\t\t\tconst is_asset_html =\n\t\t\t\t\tmanifest.assets.has(filename_html) || filename_html in manifest._.server_assets;\n\n\t\t\t\tif (is_asset || is_asset_html) {\n\t\t\t\t\tconst file = is_asset ? filename : filename_html;\n\n\t\t\t\t\tif (state.read) {\n\t\t\t\t\t\tconst type = is_asset\n\t\t\t\t\t\t\t? manifest.mimeTypes[filename.slice(filename.lastIndexOf('.'))]\n\t\t\t\t\t\t\t: 'text/html';\n\n\t\t\t\t\t\treturn new Response(state.read(file), {\n\t\t\t\t\t\t\theaders: type ? { 'content-type': type } : {}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (read_implementation && file in manifest._.server_assets) {\n\t\t\t\t\t\tconst length = manifest._.server_assets[file];\n\t\t\t\t\t\tconst type = manifest.mimeTypes[file.slice(file.lastIndexOf('.'))];\n\n\t\t\t\t\t\treturn new Response(read_implementation(file), {\n\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t'Content-Length': '' + length,\n\t\t\t\t\t\t\t\t'Content-Type': type\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\treturn await fetch(request);\n\t\t\t\t}\n\n\t\t\t\tif (has_prerendered_path(manifest, paths.base + decoded)) {\n\t\t\t\t\t// The path of something prerendered could match a different route\n\t\t\t\t\t// that is still in the manifest, leading to the wrong route being loaded.\n\t\t\t\t\t// We therefore bail early here. The prerendered logic is different for\n\t\t\t\t\t// each adapter, (except maybe for prerendered redirects)\n\t\t\t\t\t// so we need to make an actual HTTP request.\n\t\t\t\t\treturn await fetch(request);\n\t\t\t\t}\n\n\t\t\t\tif (credentials !== 'omit') {\n\t\t\t\t\tconst cookie = get_cookie_header(url, request.headers.get('cookie'));\n\t\t\t\t\tif (cookie) {\n\t\t\t\t\t\trequest.headers.set('cookie', cookie);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst authorization = event.request.headers.get('authorization');\n\t\t\t\t\tif (authorization && !request.headers.has('authorization')) {\n\t\t\t\t\t\trequest.headers.set('authorization', authorization);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!request.headers.has('accept')) {\n\t\t\t\t\trequest.headers.set('accept', '*/*');\n\t\t\t\t}\n\n\t\t\t\tif (!request.headers.has('accept-language')) {\n\t\t\t\t\trequest.headers.set(\n\t\t\t\t\t\t'accept-language',\n\t\t\t\t\t\t/** @type {string} */ (event.request.headers.get('accept-language'))\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tconst response = await internal_fetch(request, options, manifest, state);\n\n\t\t\t\tconst set_cookie = response.headers.get('set-cookie');\n\t\t\t\tif (set_cookie) {\n\t\t\t\t\tfor (const str of set_cookie_parser.splitCookiesString(set_cookie)) {\n\t\t\t\t\t\tconst { name, value, ...options } = set_cookie_parser.parseString(str, {\n\t\t\t\t\t\t\tdecodeValues: false\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tconst path = options.path ?? (url.pathname.split('/').slice(0, -1).join('/') || '/');\n\n\t\t\t\t\t\t// options.sameSite is string, something more specific is required - type cast is safe\n\t\t\t\t\t\tset_internal(name, value, {\n\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\tencode: (value) => value,\n\t\t\t\t\t\t\t.../** @type {import('cookie').CookieSerializeOptions} */ (options)\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn response;\n\t\t\t}\n\t\t});\n\t};\n\n\t// Don't make this function `async`! Otherwise, the user has to `catch` promises they use for streaming responses or else\n\t// it will be an unhandled rejection. Instead, we add a `.catch(() => {})` ourselves below to prevent this from happening.\n\treturn (input, init) => {\n\t\t// See docs in fetch.js for why we need to do this\n\t\tconst response = server_fetch(input, init);\n\t\tresponse.catch(() => {});\n\t\treturn response;\n\t};\n}\n\n/**\n * @param {RequestInfo | URL} info\n * @param {RequestInit | undefined} init\n * @param {URL} url\n */\nfunction normalize_fetch_input(info, init, url) {\n\tif (info instanceof Request) {\n\t\treturn info;\n\t}\n\n\treturn new Request(typeof info === 'string' ? new URL(info, url) : info, init);\n}\n\n/**\n * @param {Request} request\n * @param {import('types').SSROptions} options\n * @param {import('@sveltejs/kit').SSRManifest} manifest\n * @param {import('types').SSRState} state\n * @returns {Promise<Response>}\n */\nasync function internal_fetch(request, options, manifest, state) {\n\tif (request.signal) {\n\t\tif (request.signal.aborted) {\n\t\t\tthrow new DOMException('The operation was aborted.', 'AbortError');\n\t\t}\n\n\t\tlet remove_abort_listener = () => {};\n\t\t/** @type {Promise<never>} */\n\t\tconst abort_promise = new Promise((_, reject) => {\n\t\t\tconst on_abort = () => {\n\t\t\t\treject(new DOMException('The operation was aborted.', 'AbortError'));\n\t\t\t};\n\t\t\trequest.signal.addEventListener('abort', on_abort, { once: true });\n\t\t\tremove_abort_listener = () => request.signal.removeEventListener('abort', on_abort);\n\t\t});\n\n\t\tconst result = await Promise.race([\n\t\t\trespond(request, options, manifest, {\n\t\t\t\t...state,\n\t\t\t\tdepth: state.depth + 1\n\t\t\t}),\n\t\t\tabort_promise\n\t\t]);\n\t\tremove_abort_listener();\n\t\treturn result;\n\t} else {\n\t\treturn await respond(request, options, manifest, {\n\t\t\t...state,\n\t\t\tdepth: state.depth + 1\n\t\t});\n\t}\n}\n","import { public_env } from '../shared-server.js';\n\n/** @type {string} */\nlet body;\n\n/** @type {string} */\nlet etag;\n\n/** @type {Headers} */\nlet headers;\n\n/**\n * @param {Request} request\n * @returns {Response}\n */\nexport function get_public_env(request) {\n\tbody ??= `export const env=${JSON.stringify(public_env)}`;\n\tetag ??= `W/${Date.now()}`;\n\theaders ??= new Headers({\n\t\t'content-type': 'application/javascript; charset=utf-8',\n\t\tetag\n\t});\n\n\tif (request.headers.get('if-none-match') === etag) {\n\t\treturn new Response(undefined, { status: 304, headers });\n\t}\n\n\treturn new Response(body, { headers });\n}\n","import { DEV } from 'esm-env';\nimport { json, text } from '@sveltejs/kit';\nimport { Redirect, SvelteKitError } from '@sveltejs/kit/internal';\nimport { base, app_dir } from '__sveltekit/paths';\nimport { is_endpoint_request, render_endpoint } from './endpoint.js';\nimport { render_page } from './page/index.js';\nimport { render_response } from './page/render.js';\nimport { respond_with_error } from './page/respond_with_error.js';\nimport { is_form_content_type } from '../../utils/http.js';\nimport {\n\thandle_fatal_error,\n\thas_prerendered_path,\n\tmethod_not_allowed,\n\tredirect_response\n} from './utils.js';\nimport { decode_pathname, decode_params, disable_search, normalize_path } from '../../utils/url.js';\nimport { exec } from '../../utils/routing.js';\nimport { redirect_json_response, render_data } from './data/index.js';\nimport { add_cookies_to_headers, get_cookies } from './cookie.js';\nimport { create_fetch } from './fetch.js';\nimport { PageNodes } from '../../utils/page_nodes.js';\nimport { validate_server_exports } from '../../utils/exports.js';\nimport { action_json_redirect, is_action_json_request } from './page/actions.js';\nimport { INVALIDATED_PARAM, TRAILING_SLASH_PARAM } from '../shared.js';\nimport { get_public_env } from './env_module.js';\nimport { resolve_route } from './page/server_routing.js';\nimport { validateHeaders } from './validate-headers.js';\nimport {\n\tadd_data_suffix,\n\tadd_resolution_suffix,\n\thas_data_suffix,\n\thas_resolution_suffix,\n\tstrip_data_suffix,\n\tstrip_resolution_suffix\n} from '../pathname.js';\nimport { get_remote_id, handle_remote_call } from './remote.js';\nimport { with_event } from '../app/server/event.js';\nimport { create_event_state, EVENT_STATE } from './event-state.js';\n\n/* global __SVELTEKIT_ADAPTER_NAME__ */\n/* global __SVELTEKIT_DEV__ */\n\n/** @type {import('types').RequiredResolveOptions['transformPageChunk']} */\nconst default_transform = ({ html }) => html;\n\n/** @type {import('types').RequiredResolveOptions['filterSerializedResponseHeaders']} */\nconst default_filter = () => false;\n\n/** @type {import('types').RequiredResolveOptions['preload']} */\nconst default_preload = ({ type }) => type === 'js' || type === 'css';\n\nconst page_methods = new Set(['GET', 'HEAD', 'POST']);\n\nconst allowed_page_methods = new Set(['GET', 'HEAD', 'OPTIONS']);\n\nlet warned_on_devtools_json_request = false;\n\n/**\n * @param {Request} request\n * @param {import('types').SSROptions} options\n * @param {import('@sveltejs/kit').SSRManifest} manifest\n * @param {import('types').SSRState} state\n * @returns {Promise<Response>}\n */\nexport async function respond(request, options, manifest, state) {\n\t/** URL but stripped from the potential `/__data.json` suffix and its search param  */\n\tconst url = new URL(request.url);\n\n\tconst is_route_resolution_request = has_resolution_suffix(url.pathname);\n\tconst is_data_request = has_data_suffix(url.pathname);\n\tconst remote_id = get_remote_id(url);\n\n\tif (options.csrf_check_origin && request.headers.get('origin') !== url.origin) {\n\t\tconst opts = { status: 403 };\n\n\t\tif (remote_id && request.method !== 'GET') {\n\t\t\treturn json(\n\t\t\t\t{\n\t\t\t\t\tmessage: 'Cross-site remote requests are forbidden'\n\t\t\t\t},\n\t\t\t\topts\n\t\t\t);\n\t\t}\n\n\t\tconst forbidden =\n\t\t\tis_form_content_type(request) &&\n\t\t\t(request.method === 'POST' ||\n\t\t\t\trequest.method === 'PUT' ||\n\t\t\t\trequest.method === 'PATCH' ||\n\t\t\t\trequest.method === 'DELETE');\n\n\t\tif (forbidden) {\n\t\t\tconst message = `Cross-site ${request.method} form submissions are forbidden`;\n\t\t\tif (request.headers.get('accept') === 'application/json') {\n\t\t\t\treturn json({ message }, opts);\n\t\t\t}\n\t\t\treturn text(message, opts);\n\t\t}\n\t}\n\n\tif (options.hash_routing && url.pathname !== base + '/' && url.pathname !== '/[fallback]') {\n\t\treturn text('Not found', { status: 404 });\n\t}\n\n\t/** @type {boolean[] | undefined} */\n\tlet invalidated_data_nodes;\n\n\tif (is_route_resolution_request) {\n\t\t/**\n\t\t * If the request is for a route resolution, first modify the URL, then continue as normal\n\t\t * for path resolution, then return the route object as a JS file.\n\t\t */\n\t\turl.pathname = strip_resolution_suffix(url.pathname);\n\t} else if (is_data_request) {\n\t\turl.pathname =\n\t\t\tstrip_data_suffix(url.pathname) +\n\t\t\t\t(url.searchParams.get(TRAILING_SLASH_PARAM) === '1' ? '/' : '') || '/';\n\t\turl.searchParams.delete(TRAILING_SLASH_PARAM);\n\t\tinvalidated_data_nodes = url.searchParams\n\t\t\t.get(INVALIDATED_PARAM)\n\t\t\t?.split('')\n\t\t\t.map((node) => node === '1');\n\t\turl.searchParams.delete(INVALIDATED_PARAM);\n\t} else if (remote_id) {\n\t\turl.pathname = base;\n\t\turl.search = '';\n\t}\n\n\t/** @type {Record<string, string>} */\n\tconst headers = {};\n\n\tconst { cookies, new_cookies, get_cookie_header, set_internal, set_trailing_slash } = get_cookies(\n\t\trequest,\n\t\turl\n\t);\n\n\t/** @type {import('@sveltejs/kit').RequestEvent} */\n\tconst event = {\n\t\t[EVENT_STATE]: create_event_state(state, options),\n\t\tcookies,\n\t\t// @ts-expect-error `fetch` needs to be created after the `event` itself\n\t\tfetch: null,\n\t\tgetClientAddress:\n\t\t\tstate.getClientAddress ||\n\t\t\t(() => {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`${__SVELTEKIT_ADAPTER_NAME__} does not specify getClientAddress. Please raise an issue`\n\t\t\t\t);\n\t\t\t}),\n\t\tlocals: {},\n\t\tparams: {},\n\t\tplatform: state.platform,\n\t\trequest,\n\t\troute: { id: null },\n\t\tsetHeaders: (new_headers) => {\n\t\t\tif (__SVELTEKIT_DEV__) {\n\t\t\t\tvalidateHeaders(new_headers);\n\t\t\t}\n\n\t\t\tfor (const key in new_headers) {\n\t\t\t\tconst lower = key.toLowerCase();\n\t\t\t\tconst value = new_headers[key];\n\n\t\t\t\tif (lower === 'set-cookie') {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'Use `event.cookies.set(name, value, options)` instead of `event.setHeaders` to set cookies'\n\t\t\t\t\t);\n\t\t\t\t} else if (lower in headers) {\n\t\t\t\t\tthrow new Error(`\"${key}\" header is already set`);\n\t\t\t\t} else {\n\t\t\t\t\theaders[lower] = value;\n\n\t\t\t\t\tif (state.prerendering && lower === 'cache-control') {\n\t\t\t\t\t\tstate.prerendering.cache = /** @type {string} */ (value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\turl,\n\t\tisDataRequest: is_data_request,\n\t\tisSubRequest: state.depth > 0,\n\t\tisRemoteRequest: !!remote_id\n\t};\n\n\tevent.fetch = create_fetch({\n\t\tevent,\n\t\toptions,\n\t\tmanifest,\n\t\tstate,\n\t\tget_cookie_header,\n\t\tset_internal\n\t});\n\n\tif (state.emulator?.platform) {\n\t\tevent.platform = await state.emulator.platform({\n\t\t\tconfig: {},\n\t\t\tprerender: !!state.prerendering?.fallback\n\t\t});\n\t}\n\n\tlet resolved_path = url.pathname;\n\n\tif (!remote_id) {\n\t\tconst prerendering_reroute_state = state.prerendering?.inside_reroute;\n\t\ttry {\n\t\t\t// For the duration or a reroute, disable the prerendering state as reroute could call API endpoints\n\t\t\t// which would end up in the wrong logic path if not disabled.\n\t\t\tif (state.prerendering) state.prerendering.inside_reroute = true;\n\n\t\t\t// reroute could alter the given URL, so we pass a copy\n\t\t\tresolved_path =\n\t\t\t\t(await options.hooks.reroute({ url: new URL(url), fetch: event.fetch })) ?? url.pathname;\n\t\t} catch {\n\t\t\treturn text('Internal Server Error', {\n\t\t\t\tstatus: 500\n\t\t\t});\n\t\t} finally {\n\t\t\tif (state.prerendering) state.prerendering.inside_reroute = prerendering_reroute_state;\n\t\t}\n\t}\n\n\ttry {\n\t\tresolved_path = decode_pathname(resolved_path);\n\t} catch {\n\t\treturn text('Malformed URI', { status: 400 });\n\t}\n\n\tif (\n\t\tresolved_path !== url.pathname &&\n\t\t!state.prerendering?.fallback &&\n\t\thas_prerendered_path(manifest, resolved_path)\n\t) {\n\t\tconst url = new URL(request.url);\n\t\turl.pathname = is_data_request\n\t\t\t? add_data_suffix(resolved_path)\n\t\t\t: is_route_resolution_request\n\t\t\t\t? add_resolution_suffix(resolved_path)\n\t\t\t\t: resolved_path;\n\n\t\t// `fetch` automatically decodes the body, so we need to delete the related headers to not break the response\n\t\t// Also see https://github.com/sveltejs/kit/issues/12197 for more info (we should fix this more generally at some point)\n\t\tconst response = await fetch(url, request);\n\t\tconst headers = new Headers(response.headers);\n\t\tif (headers.has('content-encoding')) {\n\t\t\theaders.delete('content-encoding');\n\t\t\theaders.delete('content-length');\n\t\t}\n\n\t\treturn new Response(response.body, {\n\t\t\theaders,\n\t\t\tstatus: response.status,\n\t\t\tstatusText: response.statusText\n\t\t});\n\t}\n\n\t/** @type {import('types').SSRRoute | null} */\n\tlet route = null;\n\n\tif (base && !state.prerendering?.fallback) {\n\t\tif (!resolved_path.startsWith(base)) {\n\t\t\treturn text('Not found', { status: 404 });\n\t\t}\n\t\tresolved_path = resolved_path.slice(base.length) || '/';\n\t}\n\n\tif (is_route_resolution_request) {\n\t\treturn resolve_route(resolved_path, new URL(request.url), manifest);\n\t}\n\n\tif (resolved_path === `/${app_dir}/env.js`) {\n\t\treturn get_public_env(request);\n\t}\n\n\tif (!remote_id && resolved_path.startsWith(`/${app_dir}`)) {\n\t\t// Ensure that 404'd static assets are not cached - some adapters might apply caching by default\n\t\tconst headers = new Headers();\n\t\theaders.set('cache-control', 'public, max-age=0, must-revalidate');\n\t\treturn text('Not found', { status: 404, headers });\n\t}\n\n\tif (!state.prerendering?.fallback && !remote_id) {\n\t\t// TODO this could theoretically break — should probably be inside a try-catch\n\t\tconst matchers = await manifest._.matchers();\n\n\t\tfor (const candidate of manifest._.routes) {\n\t\t\tconst match = candidate.pattern.exec(resolved_path);\n\t\t\tif (!match) continue;\n\n\t\t\tconst matched = exec(match, candidate.params, matchers);\n\t\t\tif (matched) {\n\t\t\t\troute = candidate;\n\t\t\t\tevent.route = { id: route.id };\n\t\t\t\tevent.params = decode_params(matched);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t/** @type {import('types').RequiredResolveOptions} */\n\tlet resolve_opts = {\n\t\ttransformPageChunk: default_transform,\n\t\tfilterSerializedResponseHeaders: default_filter,\n\t\tpreload: default_preload\n\t};\n\n\t/** @type {import('types').TrailingSlash} */\n\tlet trailing_slash = 'never';\n\n\ttry {\n\t\t/** @type {PageNodes | undefined} */\n\t\tconst page_nodes = route?.page\n\t\t\t? new PageNodes(await load_page_nodes(route.page, manifest))\n\t\t\t: undefined;\n\n\t\t// determine whether we need to redirect to add/remove a trailing slash\n\t\tif (route) {\n\t\t\t// if `paths.base === '/a/b/c`, then the root route is `/a/b/c/`,\n\t\t\t// regardless of the `trailingSlash` route option\n\t\t\tif (url.pathname === base || url.pathname === base + '/') {\n\t\t\t\ttrailing_slash = 'always';\n\t\t\t} else if (page_nodes) {\n\t\t\t\tif (DEV) {\n\t\t\t\t\tpage_nodes.validate();\n\t\t\t\t}\n\t\t\t\ttrailing_slash = page_nodes.trailing_slash();\n\t\t\t} else if (route.endpoint) {\n\t\t\t\tconst node = await route.endpoint();\n\t\t\t\ttrailing_slash = node.trailingSlash ?? 'never';\n\t\t\t\tif (DEV) {\n\t\t\t\t\tvalidate_server_exports(node, /** @type {string} */ (route.endpoint_id));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!is_data_request) {\n\t\t\t\tconst normalized = normalize_path(url.pathname, trailing_slash);\n\n\t\t\t\tif (normalized !== url.pathname && !state.prerendering?.fallback) {\n\t\t\t\t\treturn new Response(undefined, {\n\t\t\t\t\t\tstatus: 308,\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t'x-sveltekit-normalize': '1',\n\t\t\t\t\t\t\tlocation:\n\t\t\t\t\t\t\t\t// ensure paths starting with '//' are not treated as protocol-relative\n\t\t\t\t\t\t\t\t(normalized.startsWith('//') ? url.origin + normalized : normalized) +\n\t\t\t\t\t\t\t\t(url.search === '?' ? '' : url.search)\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (state.before_handle || state.emulator?.platform) {\n\t\t\t\tlet config = {};\n\n\t\t\t\t/** @type {import('types').PrerenderOption} */\n\t\t\t\tlet prerender = false;\n\n\t\t\t\tif (route.endpoint) {\n\t\t\t\t\tconst node = await route.endpoint();\n\t\t\t\t\tconfig = node.config ?? config;\n\t\t\t\t\tprerender = node.prerender ?? prerender;\n\t\t\t\t} else if (page_nodes) {\n\t\t\t\t\tconfig = page_nodes.get_config() ?? config;\n\t\t\t\t\tprerender = page_nodes.prerender();\n\t\t\t\t}\n\n\t\t\t\tif (state.before_handle) {\n\t\t\t\t\tstate.before_handle(event, config, prerender);\n\t\t\t\t}\n\n\t\t\t\tif (state.emulator?.platform) {\n\t\t\t\t\tevent.platform = await state.emulator.platform({ config, prerender });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tset_trailing_slash(trailing_slash);\n\n\t\tif (state.prerendering && !state.prerendering.fallback && !state.prerendering.inside_reroute) {\n\t\t\tdisable_search(url);\n\t\t}\n\n\t\tconst response = await with_event(event, () =>\n\t\t\toptions.hooks.handle({\n\t\t\t\tevent,\n\t\t\t\tresolve: (event, opts) =>\n\t\t\t\t\t// counter-intuitively, we need to clear the event, so that it's not\n\t\t\t\t\t// e.g. accessible when loading modules needed to handle the request\n\t\t\t\t\twith_event(null, () =>\n\t\t\t\t\t\tresolve(event, page_nodes, opts).then((response) => {\n\t\t\t\t\t\t\t// add headers/cookies here, rather than inside `resolve`, so that we\n\t\t\t\t\t\t\t// can do it once for all responses instead of once per `return`\n\t\t\t\t\t\t\tfor (const key in headers) {\n\t\t\t\t\t\t\t\tconst value = headers[key];\n\t\t\t\t\t\t\t\tresponse.headers.set(key, /** @type {string} */ (value));\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tadd_cookies_to_headers(response.headers, Object.values(new_cookies));\n\n\t\t\t\t\t\t\tif (state.prerendering && event.route.id !== null) {\n\t\t\t\t\t\t\t\tresponse.headers.set('x-sveltekit-routeid', encodeURI(event.route.id));\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn response;\n\t\t\t\t\t\t})\n\t\t\t\t\t)\n\t\t\t})\n\t\t);\n\n\t\t// respond with 304 if etag matches\n\t\tif (response.status === 200 && response.headers.has('etag')) {\n\t\t\tlet if_none_match_value = request.headers.get('if-none-match');\n\n\t\t\t// ignore W/ prefix https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match#directives\n\t\t\tif (if_none_match_value?.startsWith('W/\"')) {\n\t\t\t\tif_none_match_value = if_none_match_value.substring(2);\n\t\t\t}\n\n\t\t\tconst etag = /** @type {string} */ (response.headers.get('etag'));\n\n\t\t\tif (if_none_match_value === etag) {\n\t\t\t\tconst headers = new Headers({ etag });\n\n\t\t\t\t// https://datatracker.ietf.org/doc/html/rfc7232#section-4.1 + set-cookie\n\t\t\t\tfor (const key of [\n\t\t\t\t\t'cache-control',\n\t\t\t\t\t'content-location',\n\t\t\t\t\t'date',\n\t\t\t\t\t'expires',\n\t\t\t\t\t'vary',\n\t\t\t\t\t'set-cookie'\n\t\t\t\t]) {\n\t\t\t\t\tconst value = response.headers.get(key);\n\t\t\t\t\tif (value) headers.set(key, value);\n\t\t\t\t}\n\n\t\t\t\treturn new Response(undefined, {\n\t\t\t\t\tstatus: 304,\n\t\t\t\t\theaders\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// Edge case: If user does `return Response(30x)` in handle hook while processing a data request,\n\t\t// we need to transform the redirect response to a corresponding JSON response.\n\t\tif (is_data_request && response.status >= 300 && response.status <= 308) {\n\t\t\tconst location = response.headers.get('location');\n\t\t\tif (location) {\n\t\t\t\treturn redirect_json_response(new Redirect(/** @type {any} */ (response.status), location));\n\t\t\t}\n\t\t}\n\n\t\treturn response;\n\t} catch (e) {\n\t\tif (e instanceof Redirect) {\n\t\t\tconst response = is_data_request\n\t\t\t\t? redirect_json_response(e)\n\t\t\t\t: route?.page && is_action_json_request(event)\n\t\t\t\t\t? action_json_redirect(e)\n\t\t\t\t\t: redirect_response(e.status, e.location);\n\t\t\tadd_cookies_to_headers(response.headers, Object.values(new_cookies));\n\t\t\treturn response;\n\t\t}\n\t\treturn await handle_fatal_error(event, options, e);\n\t}\n\n\t/**\n\t * @param {import('@sveltejs/kit').RequestEvent} event\n\t * @param {PageNodes | undefined} page_nodes\n\t * @param {import('@sveltejs/kit').ResolveOptions} [opts]\n\t */\n\tasync function resolve(event, page_nodes, opts) {\n\t\ttry {\n\t\t\tif (opts) {\n\t\t\t\tresolve_opts = {\n\t\t\t\t\ttransformPageChunk: opts.transformPageChunk || default_transform,\n\t\t\t\t\tfilterSerializedResponseHeaders: opts.filterSerializedResponseHeaders || default_filter,\n\t\t\t\t\tpreload: opts.preload || default_preload\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (options.hash_routing || state.prerendering?.fallback) {\n\t\t\t\treturn await render_response({\n\t\t\t\t\tevent,\n\t\t\t\t\toptions,\n\t\t\t\t\tmanifest,\n\t\t\t\t\tstate,\n\t\t\t\t\tpage_config: { ssr: false, csr: true },\n\t\t\t\t\tstatus: 200,\n\t\t\t\t\terror: null,\n\t\t\t\t\tbranch: [],\n\t\t\t\t\tfetched: [],\n\t\t\t\t\tresolve_opts\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (remote_id) {\n\t\t\t\treturn await handle_remote_call(event, options, manifest, remote_id);\n\t\t\t}\n\n\t\t\tif (route) {\n\t\t\t\tconst method = /** @type {import('types').HttpMethod} */ (event.request.method);\n\n\t\t\t\t/** @type {Response} */\n\t\t\t\tlet response;\n\n\t\t\t\tif (is_data_request) {\n\t\t\t\t\tresponse = await render_data(\n\t\t\t\t\t\tevent,\n\t\t\t\t\t\troute,\n\t\t\t\t\t\toptions,\n\t\t\t\t\t\tmanifest,\n\t\t\t\t\t\tstate,\n\t\t\t\t\t\tinvalidated_data_nodes,\n\t\t\t\t\t\ttrailing_slash\n\t\t\t\t\t);\n\t\t\t\t} else if (route.endpoint && (!route.page || is_endpoint_request(event))) {\n\t\t\t\t\tresponse = await render_endpoint(event, await route.endpoint(), state);\n\t\t\t\t} else if (route.page) {\n\t\t\t\t\tif (!page_nodes) {\n\t\t\t\t\t\tthrow new Error('page_nodes not found. This should never happen');\n\t\t\t\t\t} else if (page_methods.has(method)) {\n\t\t\t\t\t\tresponse = await render_page(\n\t\t\t\t\t\t\tevent,\n\t\t\t\t\t\t\troute.page,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tmanifest,\n\t\t\t\t\t\t\tstate,\n\t\t\t\t\t\t\tpage_nodes,\n\t\t\t\t\t\t\tresolve_opts\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst allowed_methods = new Set(allowed_page_methods);\n\t\t\t\t\t\tconst node = await manifest._.nodes[route.page.leaf]();\n\t\t\t\t\t\tif (node?.server?.actions) {\n\t\t\t\t\t\t\tallowed_methods.add('POST');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (method === 'OPTIONS') {\n\t\t\t\t\t\t\t// This will deny CORS preflight requests implicitly because we don't\n\t\t\t\t\t\t\t// add the required CORS headers to the response.\n\t\t\t\t\t\t\tresponse = new Response(null, {\n\t\t\t\t\t\t\t\tstatus: 204,\n\t\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\tallow: Array.from(allowed_methods.values()).join(', ')\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst mod = [...allowed_methods].reduce((acc, curr) => {\n\t\t\t\t\t\t\t\tacc[curr] = true;\n\t\t\t\t\t\t\t\treturn acc;\n\t\t\t\t\t\t\t}, /** @type {Record<string, any>} */ ({}));\n\t\t\t\t\t\t\tresponse = method_not_allowed(mod, method);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// a route will always have a page or an endpoint, but TypeScript doesn't know that\n\t\t\t\t\tthrow new Error('Route is neither page nor endpoint. This should never happen');\n\t\t\t\t}\n\n\t\t\t\t// If the route contains a page and an endpoint, we need to add a\n\t\t\t\t// `Vary: Accept` header to the response because of browser caching\n\t\t\t\tif (request.method === 'GET' && route.page && route.endpoint) {\n\t\t\t\t\tconst vary = response.headers\n\t\t\t\t\t\t.get('vary')\n\t\t\t\t\t\t?.split(',')\n\t\t\t\t\t\t?.map((v) => v.trim().toLowerCase());\n\t\t\t\t\tif (!(vary?.includes('accept') || vary?.includes('*'))) {\n\t\t\t\t\t\t// the returned response might have immutable headers,\n\t\t\t\t\t\t// so we have to clone them before trying to mutate them\n\t\t\t\t\t\tresponse = new Response(response.body, {\n\t\t\t\t\t\t\tstatus: response.status,\n\t\t\t\t\t\t\tstatusText: response.statusText,\n\t\t\t\t\t\t\theaders: new Headers(response.headers)\n\t\t\t\t\t\t});\n\t\t\t\t\t\tresponse.headers.append('Vary', 'Accept');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn response;\n\t\t\t}\n\n\t\t\tif (state.error && event.isSubRequest) {\n\t\t\t\t// avoid overwriting the headers. This could be a same origin fetch request\n\t\t\t\t// to an external service from the root layout while rendering an error page\n\t\t\t\tconst headers = new Headers(request.headers);\n\t\t\t\theaders.set('x-sveltekit-error', 'true');\n\t\t\t\treturn await fetch(request, { headers });\n\t\t\t}\n\n\t\t\tif (state.error) {\n\t\t\t\treturn text('Internal Server Error', {\n\t\t\t\t\tstatus: 500\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// if this request came direct from the user, rather than\n\t\t\t// via our own `fetch`, render a 404 page\n\t\t\tif (state.depth === 0) {\n\t\t\t\t// In local development, Chrome requests this file for its 'automatic workspace folders' feature,\n\t\t\t\t// causing console spam. If users want to serve this file they can install\n\t\t\t\t// https://svelte.dev/docs/cli/devtools-json\n\t\t\t\tif (DEV && event.url.pathname === '/.well-known/appspecific/com.chrome.devtools.json') {\n\t\t\t\t\tif (!warned_on_devtools_json_request) {\n\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t`\\nGoogle Chrome is requesting ${event.url.pathname} to automatically configure devtools project settings. To learn why, and how to prevent this message, see https://svelte.dev/docs/cli/devtools-json\\n`\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\twarned_on_devtools_json_request = true;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn new Response(undefined, { status: 404 });\n\t\t\t\t}\n\n\t\t\t\treturn await respond_with_error({\n\t\t\t\t\tevent,\n\t\t\t\t\toptions,\n\t\t\t\t\tmanifest,\n\t\t\t\t\tstate,\n\t\t\t\t\tstatus: 404,\n\t\t\t\t\terror: new SvelteKitError(404, 'Not Found', `Not found: ${event.url.pathname}`),\n\t\t\t\t\tresolve_opts\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (state.prerendering) {\n\t\t\t\treturn text('not found', { status: 404 });\n\t\t\t}\n\n\t\t\t// we can't load the endpoint from our own manifest,\n\t\t\t// so we need to make an actual HTTP request\n\t\t\treturn await fetch(request);\n\t\t} catch (e) {\n\t\t\t// TODO if `e` is instead named `error`, some fucked up Vite transformation happens\n\t\t\t// and I don't even know how to describe it. need to investigate at some point\n\n\t\t\t// HttpError from endpoint can end up here - TODO should it be handled there instead?\n\t\t\treturn await handle_fatal_error(event, options, e);\n\t\t} finally {\n\t\t\tevent.cookies.set = () => {\n\t\t\t\tthrow new Error('Cannot use `cookies.set(...)` after the response has been generated');\n\t\t\t};\n\n\t\t\tevent.setHeaders = () => {\n\t\t\t\tthrow new Error('Cannot use `setHeaders(...)` after the response has been generated');\n\t\t\t};\n\t\t}\n\t}\n}\n\n/**\n * @param {import('types').PageNodeIndexes} page\n * @param {import('@sveltejs/kit').SSRManifest} manifest\n */\nexport function load_page_nodes(page, manifest) {\n\treturn Promise.all([\n\t\t// we use == here rather than === because [undefined] serializes as \"[null]\"\n\t\t...page.layouts.map((n) => (n == undefined ? n : manifest._.nodes[n]())),\n\t\tmanifest._.nodes[page.leaf]()\n\t]);\n}\n","/**\n * @param {Record<string, string>} env\n * @param {{\n * \t\tpublic_prefix: string;\n * \t\tprivate_prefix: string;\n * }} prefixes\n * @returns {Record<string, string>}\n */\nexport function filter_private_env(env, { public_prefix, private_prefix }) {\n\treturn Object.fromEntries(\n\t\tObject.entries(env).filter(\n\t\t\t([k]) =>\n\t\t\t\tk.startsWith(private_prefix) && (public_prefix === '' || !k.startsWith(public_prefix))\n\t\t)\n\t);\n}\n\n/**\n * @param {Record<string, string>} env\n * @param {{\n * \t\tpublic_prefix: string;\n *    private_prefix: string;\n * }} prefixes\n * @returns {Record<string, string>}\n */\nexport function filter_public_env(env, { public_prefix, private_prefix }) {\n\treturn Object.fromEntries(\n\t\tObject.entries(env).filter(\n\t\t\t([k]) =>\n\t\t\t\tk.startsWith(public_prefix) && (private_prefix === '' || !k.startsWith(private_prefix))\n\t\t)\n\t);\n}\n","/** @type {{ decoders: Record<string, (data: any) => any> }} */\nexport let app;\n\n/**\n * @param {{ decoders: Record<string, (data: any) => any> }} value\n */\nexport function set_app(value) {\n\tapp = value;\n}\n","import { respond } from './respond.js';\nimport { set_private_env, set_public_env, set_safe_public_env } from '../shared-server.js';\nimport { options, get_hooks } from '__SERVER__/internal.js';\nimport { DEV } from 'esm-env';\nimport { filter_private_env, filter_public_env } from '../../utils/env.js';\nimport { prerendering } from '__sveltekit/environment';\nimport { set_read_implementation, set_manifest } from '__sveltekit/server';\nimport { set_app } from './app.js';\n\n/** @type {ProxyHandler<{ type: 'public' | 'private' }>} */\nconst prerender_env_handler = {\n\tget({ type }, prop) {\n\t\tthrow new Error(\n\t\t\t`Cannot read values from $env/dynamic/${type} while prerendering (attempted to read env.${prop.toString()}). Use $env/static/${type} instead`\n\t\t);\n\t}\n};\n\n/** @type {Promise<any>} */\nlet init_promise;\n\nexport class Server {\n\t/** @type {import('types').SSROptions} */\n\t#options;\n\n\t/** @type {import('@sveltejs/kit').SSRManifest} */\n\t#manifest;\n\n\t/** @param {import('@sveltejs/kit').SSRManifest} manifest */\n\tconstructor(manifest) {\n\t\t/** @type {import('types').SSROptions} */\n\t\tthis.#options = options;\n\t\tthis.#manifest = manifest;\n\n\t\tset_manifest(manifest);\n\t}\n\n\t/**\n\t * @param {import('@sveltejs/kit').ServerInitOptions} opts\n\t */\n\tasync init({ env, read }) {\n\t\t// Take care: Some adapters may have to call `Server.init` per-request to set env vars,\n\t\t// so anything that shouldn't be rerun should be wrapped in an `if` block to make sure it hasn't\n\t\t// been done already.\n\n\t\t// set env, in case it's used in initialisation\n\t\tconst prefixes = {\n\t\t\tpublic_prefix: this.#options.env_public_prefix,\n\t\t\tprivate_prefix: this.#options.env_private_prefix\n\t\t};\n\n\t\tconst private_env = filter_private_env(env, prefixes);\n\t\tconst public_env = filter_public_env(env, prefixes);\n\n\t\tset_private_env(\n\t\t\tprerendering ? new Proxy({ type: 'private' }, prerender_env_handler) : private_env\n\t\t);\n\t\tset_public_env(\n\t\t\tprerendering ? new Proxy({ type: 'public' }, prerender_env_handler) : public_env\n\t\t);\n\t\tset_safe_public_env(public_env);\n\n\t\tif (read) {\n\t\t\t// Wrap the read function to handle MaybePromise<ReadableStream>\n\t\t\t// and ensure the public API stays synchronous\n\t\t\t/** @param {string} file */\n\t\t\tconst wrapped_read = (file) => {\n\t\t\t\tconst result = read(file);\n\t\t\t\tif (result instanceof ReadableStream) {\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn new ReadableStream({\n\t\t\t\t\t\tasync start(controller) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tconst stream = await Promise.resolve(result);\n\t\t\t\t\t\t\t\tif (!stream) {\n\t\t\t\t\t\t\t\t\tcontroller.close();\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tconst reader = stream.getReader();\n\n\t\t\t\t\t\t\t\twhile (true) {\n\t\t\t\t\t\t\t\t\tconst { done, value } = await reader.read();\n\t\t\t\t\t\t\t\t\tif (done) break;\n\t\t\t\t\t\t\t\t\tcontroller.enqueue(value);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tcontroller.close();\n\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\tcontroller.error(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tset_read_implementation(wrapped_read);\n\t\t}\n\n\t\t// During DEV and for some adapters this function might be called in quick succession,\n\t\t// so we need to make sure we're not invoking this logic (most notably the init hook) multiple times\n\t\tawait (init_promise ??= (async () => {\n\t\t\ttry {\n\t\t\t\tconst module = await get_hooks();\n\n\t\t\t\tthis.#options.hooks = {\n\t\t\t\t\thandle: module.handle || (({ event, resolve }) => resolve(event)),\n\t\t\t\t\thandleError:\n\t\t\t\t\t\tmodule.handleError ||\n\t\t\t\t\t\t(({ status, error }) =>\n\t\t\t\t\t\t\tconsole.error((status === 404 && /** @type {Error} */ (error)?.message) || error)),\n\t\t\t\t\thandleFetch: module.handleFetch || (({ request, fetch }) => fetch(request)),\n\t\t\t\t\thandleValidationError:\n\t\t\t\t\t\tmodule.handleValidationError ||\n\t\t\t\t\t\t(({ issues }) => {\n\t\t\t\t\t\t\tconsole.error('Remote function schema validation failed:', issues);\n\t\t\t\t\t\t\treturn { message: 'Bad Request' };\n\t\t\t\t\t\t}),\n\t\t\t\t\treroute: module.reroute || (() => {}),\n\t\t\t\t\ttransport: module.transport || {}\n\t\t\t\t};\n\n\t\t\t\tset_app({\n\t\t\t\t\tdecoders: module.transport\n\t\t\t\t\t\t? Object.fromEntries(Object.entries(module.transport).map(([k, v]) => [k, v.decode]))\n\t\t\t\t\t\t: {}\n\t\t\t\t});\n\n\t\t\t\tif (module.init) {\n\t\t\t\t\tawait module.init();\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tif (DEV) {\n\t\t\t\t\tthis.#options.hooks = {\n\t\t\t\t\t\thandle: () => {\n\t\t\t\t\t\t\tthrow e;\n\t\t\t\t\t\t},\n\t\t\t\t\t\thandleError: ({ error }) => console.error(error),\n\t\t\t\t\t\thandleFetch: ({ request, fetch }) => fetch(request),\n\t\t\t\t\t\thandleValidationError: () => {\n\t\t\t\t\t\t\treturn { message: 'Bad Request' };\n\t\t\t\t\t\t},\n\t\t\t\t\t\treroute: () => {},\n\t\t\t\t\t\ttransport: {}\n\t\t\t\t\t};\n\n\t\t\t\t\tset_app({\n\t\t\t\t\t\tdecoders: {}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t})());\n\t}\n\n\t/**\n\t * @param {Request} request\n\t * @param {import('types').RequestOptions} options\n\t */\n\tasync respond(request, options) {\n\t\treturn respond(request, this.#options, this.#manifest, {\n\t\t\t...options,\n\t\t\terror: false,\n\t\t\tdepth: 0\n\t\t});\n\t}\n}\n"],"names":["error","options","body","headers","init","key","url","response","text","hash","prerendering","array","i","value","s","base","paths.base","assets","paths.assets","data","paths.override","paths.reset","paths.app_dir","json","fn","payload","name","module","status","node","nodes","cookies","header","info","event","resolve","etag","allowed_methods","public_env","fetch"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]}